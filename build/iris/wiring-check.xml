<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="60:SenseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403b3e20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403b1e68"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403b1e68"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40464310"/></to>
    </wire>
    <wire loc="61:SenseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40424d14"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4045709c"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4045709c"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40556650"/></to>
    </wire>
    <wire loc="62:SenseAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40427140"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40560ab4"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40560ab4"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405695ec"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:SenseAppC.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x4042d6fc"/></from>
      <to><interface-ref name="X_Axis" scoped="" ref="0x40668a8c"/></to>
    </wire>
    <wire loc="7:SensorAccC.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x40668a8c"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41391854"/></to>
    </wire>
    <wire loc="64:SenseAppC.nc">
      <from><interface-ref name="Light" scoped="" ref="0x40425338"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x40673700"/></to>
    </wire>
    <wire loc="7:SensorLightC.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x40673700"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4138d808"/></to>
    </wire>
    <wire loc="72:SenseAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x403bc1f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406ac010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406ac010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406d77c4"/></to>
    </wire>
    <wire loc="73:SenseAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x403bc8a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ee30dc"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ee30dc"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f17c94"/></to>
    </wire>
    <wire loc="74:SenseAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x403b7f24"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4067ca38"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4067ca38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4069aa9c"/></to>
    </wire>
    <wire loc="76:SenseAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x403f8600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40eba9d4"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40eba9d4"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41667c68"/></to>
    </wire>
    <wire loc="77:SenseAppC.nc">
      <from><interface-ref name="CollReceive" scoped="" ref="0x403ff68c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4067ab14"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:SenseAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x404048d4"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x4068d2d8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x4068d2d8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x406a1618"/></to>
    </wire>
    <wire loc="84:SenseAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40409c7c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x410d8b08"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410d8b08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416ad0c4"/></to>
    </wire>
    <wire loc="85:SenseAppC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x403bb3f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ee1300"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:SenseAppC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x4041291c"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41102b68"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x41102b68"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416db570"/></to>
    </wire>
    <wire loc="87:SenseAppC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x4040e8bc"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x41100dc4"/></to>
    </wire>
    <wire loc="92:SenseAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x40415e28"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410f799c"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x410f799c"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410f64f0"/></to>
    </wire>
    <wire loc="93:SenseAppC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x40419930"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x4112a65c"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x4112a65c"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x416f2010"/></to>
    </wire>
    <wire loc="94:SenseAppC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x40416794"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x411aa400"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x411aa400"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x416f2d88"/></to>
    </wire>
    <wire loc="43:SenseC.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x4042e318"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417370e4"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416db1ec"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x41020010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x4101fa10"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40feb2fc"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f1791c"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415c031c"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415808bc"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41589514"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414e4010"/></to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40a20628"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097a010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x41475948"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408e88d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4148f3e8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414179e0"/></to>
    </wire>
    <wire loc="150:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eb0228"/></to>
    </wire>
    <wire loc="175:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cd5070"/></to>
    </wire>
    <wire loc="226:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d4c254"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40577cc8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40464688"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403254f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403254f8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4038f860"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40464c24"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40ac8ae4"/></to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40464c24"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a20010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40464c24"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40459b24"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40459b24"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40467c68"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40543030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></to>
    </wire>
    <wire loc="26:/opt/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4045e990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410b2010"/></to>
    </wire>
    <wire loc="26:/opt/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4045e990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ba6ba0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045e260"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40538240"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40466468"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40539e90"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40466084"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40562d20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40466084"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404602fc"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404602fc"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4046d1c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404606ac"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4045e990"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x404745d4"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40470654"/></to>
    </wire>
    <wire loc="141:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40470654"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404c2324"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4046c010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404606ac"/></to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4048e208"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40506d30"/></to>
    </wire>
    <wire loc="165:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40486acc"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404d0324"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404d0324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4127b710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4048b010"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404e2930"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404e2930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412c821c"/></to>
    </wire>
    <wire loc="185:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40492030"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404e9d20"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404e9d20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d60f4"/></to>
    </wire>
    <wire loc="196:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40497654"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40515d30"/></to>
    </wire>
    <wire loc="143:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4047a9ec"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c15b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404c15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411c699c"/></to>
    </wire>
    <wire loc="183:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40488bc4"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404dca14"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404dca14"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412dae8c"/></to>
    </wire>
    <wire loc="146:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40479d7c"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404bd0f4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404bd0f4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41221030"/></to>
    </wire>
    <wire loc="157:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4047e2e4"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404cc7b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404cc7b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4122a010"/></to>
    </wire>
    <wire loc="168:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4048484c"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404cfed8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404cfed8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4127521c"/></to>
    </wire>
    <wire loc="179:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4048ad7c"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404e05b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404e05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412c4e8c"/></to>
    </wire>
    <wire loc="138:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x4047280c"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b8694"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404b8694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411ceaec"/></to>
    </wire>
    <wire loc="149:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40477bc4"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404c8d20"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404c8d20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121daec"/></to>
    </wire>
    <wire loc="160:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4047c11c"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404ca400"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404ca400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41268aec"/></to>
    </wire>
    <wire loc="171:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40482730"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404daa8c"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404daa8c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41271e8c"/></to>
    </wire>
    <wire loc="188:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40491d7c"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404e7930"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404e7930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d2b8c"/></to>
    </wire>
    <wire loc="194:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40498208"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40519010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40481ad8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404d5694"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404d5694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412cb010"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404c2324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411c976c"/></to>
    </wire>
    <wire loc="152:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40475a7c"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c5930"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404c5930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121876c"/></to>
    </wire>
    <wire loc="192:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4048edc4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4051139c"/></to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40480e58"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404cd528"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404cd528"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41231e38"/></to>
    </wire>
    <wire loc="166:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4048549c"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404d0c44"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404d0c44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41279010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4048b9cc"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404e1324"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404e1324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412c7aec"/></to>
    </wire>
    <wire loc="186:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404929ec"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404e8694"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404e8694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d599c"/></to>
    </wire>
    <wire loc="144:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404793c0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c1ed8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404c1ed8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411c42bc"/></to>
    </wire>
    <wire loc="147:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4047880c"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404bda14"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404bda14"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412208d8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4047eca0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404cb16c"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404cb16c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4126b8b8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404832e4"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404db818"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404db818"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41274aec"/></to>
    </wire>
    <wire loc="180:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4048980c"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404e0ed8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404e0ed8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412c276c"/></to>
    </wire>
    <wire loc="139:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40471208"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b7010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404b7010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411cc514"/></to>
    </wire>
    <wire loc="150:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40476654"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404c6694"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404c6694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121b514"/></to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4047cad8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404cad20"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404cad20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41266514"/></to>
    </wire>
    <wire loc="189:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4048f80c"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404e5324"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404e5324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41315514"/></to>
    </wire>
    <wire loc="164:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40486010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404d1954"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404d1954"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41280e38"/></to>
    </wire>
    <wire loc="175:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4048c578"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404e2010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404e2010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412ca8b8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40487654"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404e9400"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404e9400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d876c"/></to>
    </wire>
    <wire loc="195:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40498bc4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40517694"/></to>
    </wire>
    <wire loc="142:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4047a030"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c2c44"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404c2c44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411c70f4"/></to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4048049c"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c4324"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404c4324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412160f4"/></to>
    </wire>
    <wire loc="182:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40488208"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404dc0f4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404dc0f4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412db594"/></to>
    </wire>
    <wire loc="156:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4047f84c"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404cde48"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404cde48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4122c710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40485e58"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404cf5b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404cf5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412788b8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4048a3c0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404e1c44"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404e1c44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412c5514"/></to>
    </wire>
    <wire loc="187:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404913c0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404e7010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404e7010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d32bc"/></to>
    </wire>
    <wire loc="137:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40473d78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404b9d44"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404b9d44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411cf21c"/></to>
    </wire>
    <wire loc="148:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40477208"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404c8400"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404c8400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121e21c"/></to>
    </wire>
    <wire loc="159:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4047d730"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404cba8c"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404cba8c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4126921c"/></to>
    </wire>
    <wire loc="170:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40483ca0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404da16c"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404da16c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41272514"/></to>
    </wire>
    <wire loc="193:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4048d80c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4050f9ac"/></to>
    </wire>
    <wire loc="173:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4048111c"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404d7cb4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404d7cb4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412cd690"/></to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4047b578"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c9694"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404c9694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41265e8c"/></to>
    </wire>
    <wire loc="140:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40471bc4"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404b7930"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404b7930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411cbe8c"/></to>
    </wire>
    <wire loc="151:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404750c0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c5010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404c5010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121ae8c"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038e0fc"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4038ecd8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403a0010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403a1288"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405db9cc"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40562d20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40556328"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40555310"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40563030"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40563030"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40471208"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40555cb8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x405639f8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405639f8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x4047280c"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4055471c"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x405623d4"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405623d4"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40473d78"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405695ec"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40573458"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40573458"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4062fc50"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40577cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4057f8e4"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4057d304"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4065f010"/></to>
    </wire>
    <wire loc="35:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4057f8e4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4058fc80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40651e48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406120e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40620344"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4057b010"/></to>
    </wire>
    <wire loc="36:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4057b010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x406050b4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4065f934"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40581be4"/></to>
    </wire>
    <wire loc="37:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40581be4"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406169e4"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406169e4"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41381d88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4058fc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41382030"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406050b4"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4138243c"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4137fe9c"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405cb848"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405cb848"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405e039c"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4137dee0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405d59a8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405d59a8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405dd500"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4137c8a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405d44e0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405d44e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405dc010"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41379234"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405d3f28"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x405d3f28"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405dbe10"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40631ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4064ef14"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <from><interface-ref name="senseResult" scoped="" ref="0x41390380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <from><interface-ref name="senseResult" scoped="" ref="0x4138c348"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x406a1618"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40e7e420"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x406753a8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x406a42cc"/></to>
    </wire>
    <wire loc="121:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x406a42cc"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40cd3010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40676ce4"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x4069286c"/></to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x4069286c"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40cd465c"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40685c10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40692ba8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40692ba8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cd4968"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40679204"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40692204"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40692204"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40cd42c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4067a150"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x406931b0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x406931b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cd57d4"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x406885bc"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x406a3aac"/></to>
    </wire>
    <wire loc="165:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x406a3aac"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40e7e8d4"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4067ab14"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40693b74"/></to>
    </wire>
    <wire loc="116:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40693b74"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cd5ee0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40683e54"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x406a11d0"/></to>
    </wire>
    <wire loc="123:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x406a11d0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40cd26f4"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x4068e3f4"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x406a4a70"/></to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x406a4a70"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40cd3758"/></to>
    </wire>
    <wire loc="115:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4069aa9c"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cd536c"/></to>
    </wire>
    <wire loc="147:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4069aa9c"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e7d4bc"/></to>
    </wire>
    <wire loc="148:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4069aa9c"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d4ea1c"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x406a1e70"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x4069b2f4"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x406a02a8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40695d14"/></to>
    </wire>
    <wire loc="190:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x4069d7f4"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40d4d8e0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40cf176c"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x406a1e70"/></to>
    </wire>
    <wire loc="127:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x40cf798c"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40d01a1c"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40d01a1c"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41580c40"/></to>
    </wire>
    <wire loc="128:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40cf6e50"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40ce87c4"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40ce87c4"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41589898"/></to>
    </wire>
    <wire loc="131:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x40ccdf08"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40cfd508"/></to>
    </wire>
    <wire loc="134:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x40cf32ec"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x40d2e288"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x40d2e288"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x415c06bc"/></to>
    </wire>
    <wire loc="139:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40cce870"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40d4d8e0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x40eb0574"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d4ee80"/></to>
    </wire>
    <wire loc="152:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x40eb0c00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d4d560"/></to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40eb0efc"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40d4d8e0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x40ea7b90"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x40d4b010"/></to>
    </wire>
    <wire loc="157:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eaf814"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406d2eec"/></to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40ead400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406ac010"/></to>
    </wire>
    <wire loc="159:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x40eada38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d2dc54"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d2dc54"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405695ec"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x40eabb68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d29838"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d29838"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405695ec"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40ea714c"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x406a02a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40cee6dc"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x406a02a8"/></to>
    </wire>
    <wire loc="163:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40cf2628"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40e7e8d4"/></to>
    </wire>
    <wire loc="164:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40ea77b8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40cd26f4"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x40cd1784"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ea1010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ea1010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405695ec"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40ea8c94"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097e380"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4097e380"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097ad60"/></to>
    </wire>
    <wire loc="173:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40cee304"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097e380"/></to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cd2b1c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d5390c"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d5390c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415abc04"/></to>
    </wire>
    <wire loc="177:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cf2010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e1787c"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e1787c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406ab22c"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x40cf232c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e12ed8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e12ed8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406ab884"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ccd7d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d9f010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d9f010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x415a8304"/></to>
    </wire>
    <wire loc="180:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40cf1228"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40e7e420"/></to>
    </wire>
    <wire loc="181:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40ccd228"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x40e7fe6c"/></to>
    </wire>
    <wire loc="182:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40ceed68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406ac010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd1228"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40de7248"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40de7248"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x415a75b8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cf1b78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d9f67c"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d9f67c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x415a8970"/></to>
    </wire>
    <wire loc="185:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40cef750"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4045709c"/></to>
    </wire>
    <wire loc="192:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40d47700"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097e380"/></to>
    </wire>
    <wire loc="194:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d4b38c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e9b0f4"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e9b0f4"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4162cd04"/></to>
    </wire>
    <wire loc="195:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d47010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e99efc"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e99efc"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406ab22c"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d4a80c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e9b760"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e9b760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x416283e0"/></to>
    </wire>
    <wire loc="197:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x40d4badc"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40e9bdcc"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e9bdcc"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41628a4c"/></to>
    </wire>
    <wire loc="221:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d473c4"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406d9968"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406d9968"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406fd970"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406d77c4"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406ecd64"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406aa0fc"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406d3734"/></to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406d3734"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406e8ca0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406aa438"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406d282c"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406d282c"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406e5b24"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406ac8a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406d40fc"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406d40fc"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406e960c"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406ab884"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406d30fc"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406d30fc"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406e8668"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406bca10"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x406d010c"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406d010c"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x406f8dc4"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406ab22c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406d4a70"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406d4a70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406e8010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c1ef0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d1b88"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d1b88"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f8864"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406cb0ec"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x406d0704"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406d0704"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x406f4448"/></to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406d2eec"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406e7d70"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406cca50"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x406d0dec"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406d0dec"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x406f4b30"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x406bd208"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406db970"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406db970"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406fb970"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406c9ad4"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406d8250"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406d8250"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4070e3b8"/></to>
    </wire>
    <wire loc="215:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406ecd64"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4091a5b4"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x406de9f8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x406fe7f0"/></to>
    </wire>
    <wire loc="305:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x406fe7f0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a0f7c4"/></to>
    </wire>
    <wire loc="270:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4070e3b8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409bfa74"/></to>
    </wire>
    <wire loc="124:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406e8ca0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x407e2934"/></to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406e5b24"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407e3304"/></to>
    </wire>
    <wire loc="121:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406e960c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407e3a00"/></to>
    </wire>
    <wire loc="123:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406e8668"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x407e2598"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x406ce6c4"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x406ff560"/></to>
    </wire>
    <wire loc="303:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x406ff560"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a11524"/></to>
    </wire>
    <wire loc="216:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406f8dc4"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40919a94"/></to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406e8010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407e21dc"/></to>
    </wire>
    <wire loc="269:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406fb970"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f31c0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406d9e38"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x406fde40"/></to>
    </wire>
    <wire loc="307:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406fde40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2c4e0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x406df3c8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4070126c"/></to>
    </wire>
    <wire loc="304:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4070126c"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0ddb4"/></to>
    </wire>
    <wire loc="248:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f8864"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40991df4"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406d3df8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x406e7380"/></to>
    </wire>
    <wire loc="128:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406e7380"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x407e2cf0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406f4448"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40908938"/></to>
    </wire>
    <wire loc="125:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406e7d70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407e472c"/></to>
    </wire>
    <wire loc="224:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406f4b30"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x409667e0"/></to>
    </wire>
    <wire loc="306:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406fd970"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a2c010"/></to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406d24f0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x406e7a20"/></to>
    </wire>
    <wire loc="129:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406e7a20"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x407e10c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4091a5b4"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4092b090"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a0f7c4"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a3ec98"/></to>
    </wire>
    <wire loc="160:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x406f5eb0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40834998"/></to>
    </wire>
    <wire loc="148:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x406f15ec"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40804960"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40804960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41415c88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x407e2934"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x413fa598"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407e3a00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413fb70c"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x407e2598"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x413fa1fc"/></to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40702584"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x408d14e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x408d14e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x41425328"/></to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x406f8118"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4083596c"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a11524"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a1e978"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40919a94"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x414791e4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407e3304"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413fb010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407e21dc"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x413fbe18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f31c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x414c23a8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2c4e0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ac9750"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0ddb4"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a3a2ec"/></to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x406f531c"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40834010"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x407e2cf0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x413fa954"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40908938"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40900c4c"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x409667e0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41474468"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407e472c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413fc3e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409bfa74"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414c7cd4"/></to>
    </wire>
    <wire loc="159:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x406f5a80"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x4083469c"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a2c010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a39480"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x407e10c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x413fad10"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40739c24"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40879a6c"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40879a6c"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4142b8bc"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40735110"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4076f010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40731b00"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f31c0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x4073117c"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a12b18"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a12b18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a1e010"/></to>
    </wire>
    <wire loc="110:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4076f888"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a2cec8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a2cec8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40accd30"/></to>
    </wire>
    <wire loc="116:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x407e03ac"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4071e8b4"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407e1b84"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x407f59d0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407e0090"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x408629b0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407e141c"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40862ccc"/></to>
    </wire>
    <wire loc="137:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407f43ac"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40804960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407f5ed4"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x408624dc"/></to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40834cc4"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40879a6c"/></to>
    </wire>
    <wire loc="154:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4084dedc"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x4084850c"/></to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4084c3cc"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x408489e0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4084d774"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40848cfc"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4087d50c"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408ceac0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408ceac0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41492a94"/></to>
    </wire>
    <wire loc="170:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4087d9e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4090863c"/></to>
    </wire>
    <wire loc="114:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4090863c"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40901c7c"/></to>
    </wire>
    <wire loc="171:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4087dcfc"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x408d1ebc"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408d1ebc"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41425d04"/></to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408d0690"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40901010"/></to>
    </wire>
    <wire loc="115:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40901010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40900010"/></to>
    </wire>
    <wire loc="181:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408cdd04"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x407146d4"/></to>
    </wire>
    <wire loc="182:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408cd438"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40908168"/></to>
    </wire>
    <wire loc="113:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40908168"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409017a8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40900758"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40991df4"/></to>
    </wire>
    <wire loc="193:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409017a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4091ab64"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4091ab64"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4092b640"/></to>
    </wire>
    <wire loc="194:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40901c7c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40919050"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40919050"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4092bb14"/></to>
    </wire>
    <wire loc="195:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40900010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4091934c"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4091934c"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4092be30"/></to>
    </wire>
    <wire loc="211:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4092b090"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40926a1c"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40926a1c"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41475398"/></to>
    </wire>
    <wire loc="212:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4092b640"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40966010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40966010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41475c64"/></to>
    </wire>
    <wire loc="213:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4092bb14"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409664e4"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409664e4"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4147416c"/></to>
    </wire>
    <wire loc="214:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4092be30"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409f2778"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409f2778"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x414c192c"/></to>
    </wire>
    <wire loc="221:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409644bc"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40961614"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40961614"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x414a26dc"/></to>
    </wire>
    <wire loc="222:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40964970"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408cd010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408cd010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4148f010"/></to>
    </wire>
    <wire loc="223:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40966cc4"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409fb524"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409fb524"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40a191ac"/></to>
    </wire>
    <wire loc="228:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408cd90c"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40961ac8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40961ac8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x414a2b90"/></to>
    </wire>
    <wire loc="237:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40960e4c"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4070f2e8"/></to>
    </wire>
    <wire loc="238:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40961ef0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40991568"/></to>
    </wire>
    <wire loc="239:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409603e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40991a1c"/></to>
    </wire>
    <wire loc="240:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409607c0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4076f010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x409b7c44"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec244"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40990c00"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4076f010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409b7324"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40708040"/></to>
    </wire>
    <wire loc="253:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40990354"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409c8e0c"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409c8e0c"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409c5b34"/></to>
    </wire>
    <wire loc="254:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40990828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409c7304"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409c7304"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409c4030"/></to>
    </wire>
    <wire loc="259:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409c2010"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4071180c"/></to>
    </wire>
    <wire loc="260:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409c5b34"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409fbc6c"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409fbc6c"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a19994"/></to>
    </wire>
    <wire loc="261:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409c4030"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a1b14c"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a1b14c"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a19e68"/></to>
    </wire>
    <wire loc="262:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x409c4428"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a126d0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a126d0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a1fb04"/></to>
    </wire>
    <wire loc="267:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409f1010"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2c4e0"/></to>
    </wire>
    <wire loc="268:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409f1824"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409ec7e4"/></to>
    </wire>
    <wire loc="271:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x409f0010"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec244"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409eb010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a12b18"/></to>
    </wire>
    <wire loc="286:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a18de8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4071180c"/></to>
    </wire>
    <wire loc="287:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a19994"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a15cf4"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40a15cf4"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a1f1a8"/></to>
    </wire>
    <wire loc="288:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a19e68"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a122a4"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a122a4"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a1f6d8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40a191ac"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a15550"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40a15550"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a2098c"/></to>
    </wire>
    <wire loc="301:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a298e8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x40709010"/></to>
    </wire>
    <wire loc="302:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a2829c"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f31c0"/></to>
    </wire>
    <wire loc="309:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a26964"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec244"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a25010"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec244"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a256a4"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ec244"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a25c9c"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4076f010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4076f010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x413b8674"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x413b8e30"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4076f888"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x413b5698"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40789d98"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x413f78b4"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407d5524"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x413f9090"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407e141c"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x413f97f8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407e1b84"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x413f9ccc"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407e0090"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x413f7010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x407e03ac"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40837080"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41414470"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40837468"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41414858"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41414cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x408378f0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4141316c"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41417cfc"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4141373c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x414244ec"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407d5524"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41424a9c"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408d0690"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4148e5a0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408ebc90"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408ebc90"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408e8c48"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148ec0c"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148df24"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148df24"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e5670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4148f734"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408cd438"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4148fc08"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408cd90c"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x4148e010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408cdd04"/></to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x408ff344"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40900758"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4147494c"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40966cc4"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4147314c"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40789d98"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x414736dc"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409644bc"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41473b90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40964970"/></to>
    </wire>
    <wire loc="189:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41472428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x41472840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x41472010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x414a0010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40961ef0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4149e334"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40960e4c"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x414a04e4"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409603e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x414a08bc"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409607c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x414a0f28"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097e380"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x4149e904"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4097daec"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4097a500"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4098294c"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097a010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409b2968"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409c6594"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409c76dc"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409c4428"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409c86c4"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409c534c"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409c7ab4"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409c4820"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409c6248"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409c2010"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x409c83c8"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x409c5030"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x409b2ef8"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x409c6b44"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x414be8cc"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409f1824"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x414bf7d4"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409f1010"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x414be0b8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409f8ad4"/></to>
    </wire>
    <wire loc="26:/opt/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409f8ad4"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4057d304"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x414bf19c"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x409f0010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409fc7ac"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a1a3dc"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a1b524"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40a18288"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a1b8fc"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a18680"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a1a090"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a18de8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x409fb228"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40a1ae60"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x409fcd3c"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40a1a98c"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40accd30"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40baec98"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0eac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a3b010"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ac9750"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bcf3dc"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a31370"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a298e8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a31b10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a26964"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a4f228"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40a25010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a4f8bc"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a256a4"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a4e0ac"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a2829c"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a32a50"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ac9750"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a4ddb8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a25c9c"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a39874"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40aaea84"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40aaea84"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40479d7c"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a3730c"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40aaa4c4"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40aaa4c4"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad2b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a337dc"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40aaaba0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40aaaba0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ad9010"/></to>
    </wire>
    <wire loc="107:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a33e28"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40aa9208"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40aa9208"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4048049c"/></to>
    </wire>
    <wire loc="108:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a367f8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40aa9bb0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40aa9bb0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4047a9ec"/></to>
    </wire>
    <wire loc="110:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a307d8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40acc574"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40acc574"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40ac848c"/></to>
    </wire>
    <wire loc="111:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a4d7c0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40789d98"/></to>
    </wire>
    <wire loc="112:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a32010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bf5188"/></to>
    </wire>
    <wire loc="847:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40a88bbc"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40baec98"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4151d7bc"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40ad9010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ad137c"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40bcf3dc"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bfa8d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40ac3b0c"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40483ca0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40abf580"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x4048484c"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40ac1e98"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b3f85c"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40b3f85c"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b56cb0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40ad2404"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40ad1968"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40adac00"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40ad1010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ada010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ad8c2c"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ad2b10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad00fc"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40ace7ac"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b49530"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b49530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414e325c"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40acee88"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b48040"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b48040"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x414e3d50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40ae5b54"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40b052e0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40b052e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40b29560"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40ae4308"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a0c44"/></to>
    </wire>
    <wire loc="296:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40af72e4"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40b228f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a0c44"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40b25210"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40479d7c"/></to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40b25bac"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x4047880c"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40b2456c"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40477208"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40b24f14"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40477bc4"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b49c3c"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x414e3968"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x414e220c"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b484c8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x414e2614"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x414e432c"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x414e2be4"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b60aec"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b56010"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b444f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b5cd18"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b5e940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b53a30"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b5e940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b51510"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b5e940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b75010"/></to>
    </wire>
    <wire loc="43:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x4151a0b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b444f8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x41518188"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b5e940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ba5010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b444f8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bf9210"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40be2b00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40be1c78"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bca46c"/></to>
    </wire>
    <wire loc="31:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bca46c"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bc84f0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40be65f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b444f8"/></to>
    </wire>
    <wire loc="234:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40ced34c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x415be3c0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x406a4a70"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x415abc04"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415f5e84"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x415a8304"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x415a8970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x415a75b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c1ef0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x415f1548"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dbb7b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x415f1bb4"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40dbb7b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40df15f4"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40df1d30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406ac8a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40df03e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40def010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40def6bc"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40defad4"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e17b78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e16228"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e0e1f4"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e0e860"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="271:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x40ea6310"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="390:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x40ea7ecc"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4162cd04"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41622060"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x416283e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41628a4c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40e9aa04"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41627694"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41627694"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c1ef0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416226fc"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dbb7b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41622d68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e98210"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e9887c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40eb9070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41665304"/></to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41665304"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40685c10"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41667c68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4067a150"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x4069b2f4"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x416621e4"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40f17c94"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f33558"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ee396c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40eded9c"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ee163c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f194bc"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ee1300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40edd54c"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ee09e8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f19b28"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ee1cfc"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40edd858"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40f1791c"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f331e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f12630"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ee0ef8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f18050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f14bac"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f186dc"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f145e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40f12150"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x410df1fc"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f14bac"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f9dd28"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40f145e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f9d98c"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40fd64c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40f12150"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f2d5cc"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f12630"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fd53e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f12630"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fc8e60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f12630"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40fd6984"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40f2cd40"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40fd6e38"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40f2fd08"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40f29d64"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40fd2680"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40f2b334"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fd15e4"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40fd15e4"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fee188"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40fc8610"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40fd1a44"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40fd1a44"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40feea34"/></to>
    </wire>
    <wire loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40f660d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40f4e010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40f6898c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40f64c00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x40fd4010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40fd4428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40fef7d4"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40fee5d4"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40fee5d4"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40feba10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40feea34"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40febe08"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40fee188"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40feb618"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40fed510"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ff1774"/></to>
    </wire>
    <wire loc="33:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ff1774"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x410e6f10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ffeae0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40fed510"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40fff6b4"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x41026df4"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x41026df4"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x41020444"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40fffacc"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x41025340"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x41025340"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x41020954"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40fffee4"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x41025810"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x41025810"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x41020e44"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x41024ddc"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x4101e890"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x4102441c"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x4101fe44"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x4102490c"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x4101e3a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4101d498"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045e260"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4101dba8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a0c44"/></to>
    </wire>
    <wire loc="34:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x410e40b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4105a0c8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4105a0c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x410b4414"/></to>
    </wire>
    <wire loc="32:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x410ad538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4105992c"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4105992c"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41089ad8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41054a98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x41084cf4"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x41053780"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x41083a14"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4108b7d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x410807b4"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4108b7d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4107e2b4"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4108b7d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4107dd78"/></to>
    </wire>
    <wire loc="27:/opt/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x410b23d4"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4105992c"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x410c9228"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ee163c"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410c9894"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40ee1cfc"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x411044dc"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ee09e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416ad760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410d0328"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416addcc"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40ee1cfc"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x410d0328"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410cf984"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410ce100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ee396c"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410ce77c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40ee1cfc"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x410cc3e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ee163c"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x410cca8c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x410ccea4"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x410f64f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410ee860"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x410e9010"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x410f3028"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x410e9aa8"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x410f226c"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x410e8560"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x410f2cec"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410e8978"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41138010"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41138010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416c9398"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x410e7040"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41134250"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41134250"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406ab22c"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x410e740c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41132b68"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41132b68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41708628"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x410e7b5c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4112fec8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4112fec8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406ab22c"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x410e7e84"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4112c6cc"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x416c9398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4171aa80"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4113867c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x416c9a04"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x416c9a04"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41138ce8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x416c814c"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416c814c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41136928"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x416c8d00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x416c8d00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c1ef0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4171617c"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dbb7b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x417167e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4113454c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41134bb8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41708628"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41703d28"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41131228"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41708c94"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41708c94"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41131894"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x417063e0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x417063e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x411304dc"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41705010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41705010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c1ef0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41700410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dbb7b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41700a7c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4112e1f4"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406aa438"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4112e860"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x410f3028"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x416f16d4"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x410f2cec"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x416f4b18"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x410f226c"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41180634"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x416f1e3c"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4045709c"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x41745a24"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41180634"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x411ac904"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x411ac904"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41737470"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41737ba4"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x417307a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x417307a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405695ec"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41732010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097e380"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x41733694"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x4172bc6c"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x41734cb4"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x4172c55c"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x417323e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4045709c"/></to>
    </wire>
    <wire loc="154:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x41731010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="SenseC" loc="3:SenseC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SenseAppC.TimerMilliC" loc="44(SenseAppC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40584644"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.SensorAcc" loc="1(SenseAppC.SensorAcc):SensorAccC.nc">
      <instance number="0">
        <component-ref qname="SensorAccC"/>
        <arguments>
          <value cst="I:43690">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SensorAcc.Sensor" loc="42(SenseAppC.SensorAcc.Sensor):/opt/tinyos/tos/system/ConstantSensorC.nc">
      <documentation loc="35:/opt/tinyos/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ConstantSensorC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.SensorLight" loc="1(SenseAppC.SensorLight):SensorLightC.nc">
      <instance number="0">
        <component-ref qname="SensorLightC"/>
        <arguments>
          <value cst="I:187">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SensorLight.Sensor" loc="42(SenseAppC.SensorLight.Sensor):/opt/tinyos/tos/system/ConstantSensorC.nc">
      <documentation loc="35:/opt/tinyos/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ConstantSensorC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
            <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ce9bd4"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c20d84"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c1f044"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ce9bd4"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c20d84"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c1f044"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.CollectionSenderC" loc="43(SenseAppC.CollectionSenderC):/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.CollectionSenderC.CollectionSenderP" loc="34(SenseAppC.CollectionSenderC.CollectionSenderP):/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(SenseAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/tinyos/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403895bc"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.SerialAMSenderC" loc="47(SenseAppC.SerialAMSenderC):/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SerialAMSenderC.AMQueueEntryP" loc="43(SenseAppC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.UARTMessagePoolP" loc="41(SenseAppC.UARTMessagePoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
            <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.UARTMessagePoolP.PoolP" loc="53(SenseAppC.UARTMessagePoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ce9bd4"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.UARTQueueP" loc="42(SenseAppC.UARTQueueP):/opt/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
              <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.ChangerC" loc="49(SenseAppC.ChangerC):/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ada1c"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b3010"/></typename>
          </type-tag>
          <value cst="I:4660">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.ChangerC.DisseminatorP" loc="45(SenseAppC.ChangerC.DisseminatorP):/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410fb5e8"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40493304" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4049350c" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40493714" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404a339c" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404a35b4" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404a37cc" loc="43:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404a39b0" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404ee22c" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404ee444" loc="43:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404ee65c" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404ee840" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40584644" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40584644"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405847f8" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4058a66c" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4058a66c"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4058a820" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4057e6a4" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4057e6a4"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40630e54" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40630e54"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x4062d064" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4065d244" loc="46:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4065d244"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensorAccC" loc="1:SensorAccC.nc" abstract="">
      <parameters>
        <constant name="value" ref="0x40669450" loc="1:SensorAccC.nc">
          <component-ref qname="SensorAccC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ConstantSensorC" loc="42:/opt/tinyos/tos/system/ConstantSensorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40666cc4" loc="42:/opt/tinyos/tos/system/ConstantSensorC.nc">
          <component-ref qname="ConstantSensorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40666cc4"/></type-var>
        </typedef>
        <constant name="val" ref="0x40666ea4" loc="42:/opt/tinyos/tos/system/ConstantSensorC.nc">
          <component-ref qname="ConstantSensorC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SensorLightC" loc="1:SensorLightC.nc" abstract="">
      <parameters>
        <constant name="value" ref="0x40667d20" loc="1:SensorLightC.nc">
          <component-ref qname="SensorLightC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x408035b0" loc="83:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40813010" loc="42:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40ba7728" loc="44:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40ba7728"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40ba7938" loc="44:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40ba9d98" loc="51:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40ba9d98"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bc31d0" loc="52:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bc31d0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40bc3380" loc="53:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40bef12c" loc="42:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40bef12c"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bef548" loc="43:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bef548"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40bcb840" loc="55:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40bcb840"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40bcbc70" loc="56:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40bcbc70"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40bcbec8" loc="57:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40bcbec8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40be034c" loc="58:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40be034c"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40be05a8" loc="59:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40be0a00" loc="60:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40be0a00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40ce9bd4" loc="41:/opt/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ce9bd4"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40ce9de4" loc="41:/opt/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40d0f010" loc="53:/opt/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40d0f010"/></type-var>
        </typedef>
        <constant name="size" ref="0x40d0f1f0" loc="53:/opt/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40cfece8" loc="42:/opt/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40cfece8"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40cfef04" loc="42:/opt/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x40d1bc9c" loc="38:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40d16620" loc="43:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40d54aa0" loc="47:/opt/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40dcc5a8" loc="47:/opt/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40dc7b18" loc="43:/opt/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40db8bbc" loc="45:/opt/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40de63f8" loc="43:/opt/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e13980" loc="44:/opt/tinyos/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x40e07574" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x40e077a4" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x40e079d4" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40ebb5c8" loc="43:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x40eb4010" loc="35:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x40eb4218" loc="35:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/tinyos/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40eb3c04" loc="45:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x410d7064" loc="47:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x410fb5e8" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410fb5e8"/></type-var>
        </typedef>
        <constant name="key" ref="0x410fb7c8" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41159088" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41159088"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x4117d764" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x4117d960" loc="52:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x4117db30" loc="53:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x4117dd28" loc="54:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x411761e0" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x411763dc" loc="52:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x411765ac" loc="53:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x411767a4" loc="54:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x4117699c" loc="55:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x411be0f4" loc="44:/opt/tinyos/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x404048d4" loc="15:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x404048d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40404a94"/>
        <function-ref name="setRoot" scoped="" ref="0x40404b70"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40404c4c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x404052cc" loc="14:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x404052cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4040548c"/>
        <function-ref name="setOrigin" scoped="" ref="0x40405568"/>
        <function-ref name="setType" scoped="" ref="0x40405644"/>
        <function-ref name="getOrigin" scoped="" ref="0x40405720"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x404057fc"/>
        <function-ref name="getType" scoped="" ref="0x404058d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403b3e20" loc="6:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403b3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403b8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x403bc8a0" loc="8:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x403bc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403bca60"/>
        <function-ref name="stopDone" scoped="" ref="0x403bcb3c"/>
        <function-ref name="start" scoped="" ref="0x403bcc18"/>
        <function-ref name="stop" scoped="" ref="0x403bccf4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Update" ref="0x40416794" loc="29:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x40416794"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ada1c"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b3010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40416d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Light" ref="0x40425338" loc="35:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x40425338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4042590c"/>
        <function-ref name="readDone" scoped="" ref="0x40425b4c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x4042e318" loc="43:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x4042e318"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4042e4d8"/>
        <function-ref name="runTask" scoped="" ref="0x4042e5b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x403bc1f0" loc="7:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x403bc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403bc3b0"/>
        <function-ref name="stopDone" scoped="" ref="0x403bc48c"/>
        <function-ref name="start" scoped="" ref="0x403bc568"/>
        <function-ref name="stop" scoped="" ref="0x403bc644"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x403f8600" loc="12:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x403f8600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x403f87c0"/>
        <function-ref name="getPayload" scoped="" ref="0x403f889c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403f8978"/>
        <function-ref name="cancel" scoped="" ref="0x403f8a54"/>
        <function-ref name="sendDone" scoped="" ref="0x403f8b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x4041291c" loc="22:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x4041291c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
            <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4041595c"/>
        <function-ref name="maxSize" scoped="" ref="0x404153ac"/>
        <function-ref name="empty" scoped="" ref="0x40412ef0"/>
        <function-ref name="put" scoped="" ref="0x404155ec"/>
        <function-ref name="size" scoped="" ref="0x4041516c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x40415e28" loc="26:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x40415e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404130b8"/>
        <function-ref name="stop" scoped="" ref="0x40413194"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40409c7c" loc="19:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40409c7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40409e3c"/>
        <function-ref name="getPayload" scoped="" ref="0x40409f18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403bb010"/>
        <function-ref name="cancel" scoped="" ref="0x403bb0ec"/>
        <function-ref name="sendDone" scoped="" ref="0x403bb1c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="X_Axis" ref="0x4042d6fc" loc="34:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x4042d6fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4042dcd0"/>
        <function-ref name="readDone" scoped="" ref="0x4042df10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x403b7f24" loc="9:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x403b7f24"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x403b60fc"/>
        <function-ref name="stop" scoped="" ref="0x403b61d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x403bb3f0" loc="20:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x403bb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403bb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40424d14" loc="32:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40424d14"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40424ed4"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40417010"/>
        <function-ref name="led1On" scoped="" ref="0x404170ec"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404171c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404172a4"/>
        <function-ref name="get" scoped="" ref="0x40417380"/>
        <function-ref name="led1Off" scoped="" ref="0x4041745c"/>
        <function-ref name="led2Off" scoped="" ref="0x404177cc"/>
        <function-ref name="set" scoped="" ref="0x40417538"/>
        <function-ref name="led0On" scoped="" ref="0x40417614"/>
        <function-ref name="led2On" scoped="" ref="0x404176f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollReceive" ref="0x403ff68c" loc="13:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollReceive" scoped="" ref="0x403ff68c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403ff84c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x4040e8bc" loc="21:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x4040e8bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
              <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x403ba57c"/>
        <function-ref name="enqueue" scoped="" ref="0x403bac14"/>
        <function-ref name="element" scoped="" ref="0x4040d010"/>
        <function-ref name="maxSize" scoped="" ref="0x403ba33c"/>
        <function-ref name="dequeue" scoped="" ref="0x403ba8c8"/>
        <function-ref name="empty" scoped="" ref="0x4040ee90"/>
        <function-ref name="size" scoped="" ref="0x403ba0fc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Value" ref="0x40419930" loc="28:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x40419930"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ada1c"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b3010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40411410"/>
        <function-ref name="get" scoped="" ref="0x40419f20"/>
        <function-ref name="set" scoped="" ref="0x40411190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40427140" loc="33:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40427140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4041fafc"/>
        <function-ref name="fired" scoped="" ref="0x40427e24"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4041f4fc"/>
        <function-ref name="isOneShot" scoped="" ref="0x4041f2bc"/>
        <function-ref name="getdt" scoped="" ref="0x40426010"/>
        <function-ref name="gett0" scoped="" ref="0x4041fd3c"/>
        <function-ref name="isRunning" scoped="" ref="0x4041f07c"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40427714"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4041f7fc"/>
        <function-ref name="startOneShot" scoped="" ref="0x4042797c"/>
        <function-ref name="stop" scoped="" ref="0x40427be4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4045aa34" loc="58:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4045aa34"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045abf4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403b1e68" loc="57:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403b1e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4045a050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4045e990" loc="52:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4045e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40459b24" loc="46:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40459b24"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40459ce4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4045e260" loc="50:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4045e420"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4045e4fc"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4045e5d8"/>
        <function-ref name="actualMicro" scoped="" ref="0x4045e6b4"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4045e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40466084" loc="45:/opt/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40466084"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40466244"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40467c68" loc="44:/opt/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40467c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40467e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40466468" loc="46:/opt/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40466468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40466628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404606ac" loc="41:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404606ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046086c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404602fc" loc="40:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404602fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404604bc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4046c010" loc="45:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4046c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x404745d4" loc="44:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x404745d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40474794"/>
        <function-ref name="isInput" scoped="" ref="0x40474870"/>
        <function-ref name="toggle" scoped="" ref="0x4047494c"/>
        <function-ref name="isOutput" scoped="" ref="0x40474a28"/>
        <function-ref name="get" scoped="" ref="0x40474b04"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474be0"/>
        <function-ref name="set" scoped="" ref="0x40474cbc"/>
        <function-ref name="clr" scoped="" ref="0x40474d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4046d1c0" loc="43:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4046d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4048e208" loc="98:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4048e208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048e5c8"/>
        <function-ref name="isInput" scoped="" ref="0x4048e6a4"/>
        <function-ref name="toggle" scoped="" ref="0x4048e780"/>
        <function-ref name="isOutput" scoped="" ref="0x4048e85c"/>
        <function-ref name="get" scoped="" ref="0x4048e938"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ea14"/>
        <function-ref name="set" scoped="" ref="0x4048eaf0"/>
        <function-ref name="clr" scoped="" ref="0x4048ebcc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40486acc" loc="72:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40486acc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40486c8c"/>
        <function-ref name="isInput" scoped="" ref="0x40486d68"/>
        <function-ref name="toggle" scoped="" ref="0x40486e44"/>
        <function-ref name="isOutput" scoped="" ref="0x40486f20"/>
        <function-ref name="get" scoped="" ref="0x40485010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404850ec"/>
        <function-ref name="set" scoped="" ref="0x404851c8"/>
        <function-ref name="clr" scoped="" ref="0x404852a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4048b010" loc="83:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4048b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4048b2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4048b388"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b464"/>
        <function-ref name="get" scoped="" ref="0x4048b540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b61c"/>
        <function-ref name="set" scoped="" ref="0x4048b6f8"/>
        <function-ref name="clr" scoped="" ref="0x4048b7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40492030" loc="92:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40492030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404921f0"/>
        <function-ref name="isInput" scoped="" ref="0x404922cc"/>
        <function-ref name="toggle" scoped="" ref="0x404923a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40492484"/>
        <function-ref name="get" scoped="" ref="0x40492560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049263c"/>
        <function-ref name="set" scoped="" ref="0x40492718"/>
        <function-ref name="clr" scoped="" ref="0x404927f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40497654" loc="103:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40497654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497814"/>
        <function-ref name="isInput" scoped="" ref="0x404978f0"/>
        <function-ref name="toggle" scoped="" ref="0x404979cc"/>
        <function-ref name="isOutput" scoped="" ref="0x40497aa8"/>
        <function-ref name="get" scoped="" ref="0x40497b84"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497c60"/>
        <function-ref name="set" scoped="" ref="0x40497d3c"/>
        <function-ref name="clr" scoped="" ref="0x40497e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4047a9ec" loc="50:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4047a9ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047abac"/>
        <function-ref name="isInput" scoped="" ref="0x4047ac88"/>
        <function-ref name="toggle" scoped="" ref="0x4047ad64"/>
        <function-ref name="isOutput" scoped="" ref="0x4047ae40"/>
        <function-ref name="get" scoped="" ref="0x4047af1c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479010"/>
        <function-ref name="set" scoped="" ref="0x404790ec"/>
        <function-ref name="clr" scoped="" ref="0x404791c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40488bc4" loc="90:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40488bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488d84"/>
        <function-ref name="isInput" scoped="" ref="0x40488e60"/>
        <function-ref name="toggle" scoped="" ref="0x40487010"/>
        <function-ref name="isOutput" scoped="" ref="0x404870ec"/>
        <function-ref name="get" scoped="" ref="0x404871c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404872a4"/>
        <function-ref name="set" scoped="" ref="0x40487380"/>
        <function-ref name="clr" scoped="" ref="0x4048745c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40479d7c" loc="53:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40479d7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478010"/>
        <function-ref name="isInput" scoped="" ref="0x404780ec"/>
        <function-ref name="toggle" scoped="" ref="0x404781c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404782a4"/>
        <function-ref name="get" scoped="" ref="0x40478380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047845c"/>
        <function-ref name="set" scoped="" ref="0x40478538"/>
        <function-ref name="clr" scoped="" ref="0x40478614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4047e2e4" loc="64:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4047e2e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e4a4"/>
        <function-ref name="isInput" scoped="" ref="0x4047e580"/>
        <function-ref name="toggle" scoped="" ref="0x4047e65c"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e738"/>
        <function-ref name="get" scoped="" ref="0x4047e814"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e8f0"/>
        <function-ref name="set" scoped="" ref="0x4047e9cc"/>
        <function-ref name="clr" scoped="" ref="0x4047eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4048484c" loc="75:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4048484c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40484a0c"/>
        <function-ref name="isInput" scoped="" ref="0x40484ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40484bc4"/>
        <function-ref name="isOutput" scoped="" ref="0x40484ca0"/>
        <function-ref name="get" scoped="" ref="0x40484d7c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484e58"/>
        <function-ref name="set" scoped="" ref="0x40483010"/>
        <function-ref name="clr" scoped="" ref="0x404830ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4048ad7c" loc="86:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4048ad7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40489010"/>
        <function-ref name="isInput" scoped="" ref="0x404890ec"/>
        <function-ref name="toggle" scoped="" ref="0x404891c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404892a4"/>
        <function-ref name="get" scoped="" ref="0x40489380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048945c"/>
        <function-ref name="set" scoped="" ref="0x40489538"/>
        <function-ref name="clr" scoped="" ref="0x40489614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x4047280c" loc="45:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x4047280c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404729cc"/>
        <function-ref name="isInput" scoped="" ref="0x40472aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40472b84"/>
        <function-ref name="isOutput" scoped="" ref="0x40472c60"/>
        <function-ref name="get" scoped="" ref="0x40472d3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472e18"/>
        <function-ref name="set" scoped="" ref="0x40472ef4"/>
        <function-ref name="clr" scoped="" ref="0x40471010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40477bc4" loc="56:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40477bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477d84"/>
        <function-ref name="isInput" scoped="" ref="0x40477e60"/>
        <function-ref name="toggle" scoped="" ref="0x40476010"/>
        <function-ref name="isOutput" scoped="" ref="0x404760ec"/>
        <function-ref name="get" scoped="" ref="0x404761c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404762a4"/>
        <function-ref name="set" scoped="" ref="0x40476380"/>
        <function-ref name="clr" scoped="" ref="0x4047645c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4047c11c" loc="67:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4047c11c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c2dc"/>
        <function-ref name="isInput" scoped="" ref="0x4047c3b8"/>
        <function-ref name="toggle" scoped="" ref="0x4047c494"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c570"/>
        <function-ref name="get" scoped="" ref="0x4047c64c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c728"/>
        <function-ref name="set" scoped="" ref="0x4047c804"/>
        <function-ref name="clr" scoped="" ref="0x4047c8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40482730" loc="78:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40482730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404828f0"/>
        <function-ref name="isInput" scoped="" ref="0x404829cc"/>
        <function-ref name="toggle" scoped="" ref="0x40482aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x40482b84"/>
        <function-ref name="get" scoped="" ref="0x40482c60"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482d3c"/>
        <function-ref name="set" scoped="" ref="0x40482e18"/>
        <function-ref name="clr" scoped="" ref="0x40482ef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40491d7c" loc="95:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40491d7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f010"/>
        <function-ref name="isInput" scoped="" ref="0x4048f0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4048f1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f2a4"/>
        <function-ref name="get" scoped="" ref="0x4048f380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f45c"/>
        <function-ref name="set" scoped="" ref="0x4048f538"/>
        <function-ref name="clr" scoped="" ref="0x4048f614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40498208" loc="101:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40498208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404983c8"/>
        <function-ref name="isInput" scoped="" ref="0x404984a4"/>
        <function-ref name="toggle" scoped="" ref="0x40498580"/>
        <function-ref name="isOutput" scoped="" ref="0x4049865c"/>
        <function-ref name="get" scoped="" ref="0x40498738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40498814"/>
        <function-ref name="set" scoped="" ref="0x404988f0"/>
        <function-ref name="clr" scoped="" ref="0x404989cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40481ad8" loc="81:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40481ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40481c98"/>
        <function-ref name="isInput" scoped="" ref="0x40481d74"/>
        <function-ref name="toggle" scoped="" ref="0x40481e50"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c010"/>
        <function-ref name="get" scoped="" ref="0x4048c0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048c1c8"/>
        <function-ref name="set" scoped="" ref="0x4048c2a4"/>
        <function-ref name="clr" scoped="" ref="0x4048c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40470654" loc="48:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40470654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470814"/>
        <function-ref name="isInput" scoped="" ref="0x404708f0"/>
        <function-ref name="toggle" scoped="" ref="0x404709cc"/>
        <function-ref name="isOutput" scoped="" ref="0x40470aa8"/>
        <function-ref name="get" scoped="" ref="0x40470b84"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470c60"/>
        <function-ref name="set" scoped="" ref="0x40470d3c"/>
        <function-ref name="clr" scoped="" ref="0x40470e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40475a7c" loc="59:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40475a7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475c3c"/>
        <function-ref name="isInput" scoped="" ref="0x40475d18"/>
        <function-ref name="toggle" scoped="" ref="0x40475df4"/>
        <function-ref name="isOutput" scoped="" ref="0x40475ed0"/>
        <function-ref name="get" scoped="" ref="0x40480010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404800ec"/>
        <function-ref name="set" scoped="" ref="0x404801c8"/>
        <function-ref name="clr" scoped="" ref="0x404802a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4048edc4" loc="99:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4048edc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048d010"/>
        <function-ref name="isInput" scoped="" ref="0x4048d0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4048d1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4048d2a4"/>
        <function-ref name="get" scoped="" ref="0x4048d380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048d45c"/>
        <function-ref name="set" scoped="" ref="0x4048d538"/>
        <function-ref name="clr" scoped="" ref="0x4048d614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40480e58" loc="62:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40480e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f050"/>
        <function-ref name="isInput" scoped="" ref="0x4047f12c"/>
        <function-ref name="toggle" scoped="" ref="0x4047f208"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f2e4"/>
        <function-ref name="get" scoped="" ref="0x4047f3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f49c"/>
        <function-ref name="set" scoped="" ref="0x4047f578"/>
        <function-ref name="clr" scoped="" ref="0x4047f654"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4048549c" loc="73:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4048549c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048565c"/>
        <function-ref name="isInput" scoped="" ref="0x40485738"/>
        <function-ref name="toggle" scoped="" ref="0x40485814"/>
        <function-ref name="isOutput" scoped="" ref="0x404858f0"/>
        <function-ref name="get" scoped="" ref="0x404859cc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485aa8"/>
        <function-ref name="set" scoped="" ref="0x40485b84"/>
        <function-ref name="clr" scoped="" ref="0x40485c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4048b9cc" loc="84:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4048b9cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048bb8c"/>
        <function-ref name="isInput" scoped="" ref="0x4048bc68"/>
        <function-ref name="toggle" scoped="" ref="0x4048bd44"/>
        <function-ref name="isOutput" scoped="" ref="0x4048be20"/>
        <function-ref name="get" scoped="" ref="0x4048befc"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a010"/>
        <function-ref name="set" scoped="" ref="0x4048a0ec"/>
        <function-ref name="clr" scoped="" ref="0x4048a1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404929ec" loc="93:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404929ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492bac"/>
        <function-ref name="isInput" scoped="" ref="0x40492c88"/>
        <function-ref name="toggle" scoped="" ref="0x40492d64"/>
        <function-ref name="isOutput" scoped="" ref="0x40492e40"/>
        <function-ref name="get" scoped="" ref="0x40492f1c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40491010"/>
        <function-ref name="set" scoped="" ref="0x404910ec"/>
        <function-ref name="clr" scoped="" ref="0x404911c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404793c0" loc="51:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404793c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479580"/>
        <function-ref name="isInput" scoped="" ref="0x4047965c"/>
        <function-ref name="toggle" scoped="" ref="0x40479738"/>
        <function-ref name="isOutput" scoped="" ref="0x40479814"/>
        <function-ref name="get" scoped="" ref="0x404798f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404799cc"/>
        <function-ref name="set" scoped="" ref="0x40479aa8"/>
        <function-ref name="clr" scoped="" ref="0x40479b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4047880c" loc="54:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4047880c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404789cc"/>
        <function-ref name="isInput" scoped="" ref="0x40478aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40478b84"/>
        <function-ref name="isOutput" scoped="" ref="0x40478c60"/>
        <function-ref name="get" scoped="" ref="0x40478d3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478e18"/>
        <function-ref name="set" scoped="" ref="0x40478ef4"/>
        <function-ref name="clr" scoped="" ref="0x40477010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4047eca0" loc="65:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4047eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047ee60"/>
        <function-ref name="isInput" scoped="" ref="0x4047d010"/>
        <function-ref name="toggle" scoped="" ref="0x4047d0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d1c8"/>
        <function-ref name="get" scoped="" ref="0x4047d2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047d380"/>
        <function-ref name="set" scoped="" ref="0x4047d45c"/>
        <function-ref name="clr" scoped="" ref="0x4047d538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404832e4" loc="76:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404832e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404834a4"/>
        <function-ref name="isInput" scoped="" ref="0x40483580"/>
        <function-ref name="toggle" scoped="" ref="0x4048365c"/>
        <function-ref name="isOutput" scoped="" ref="0x40483738"/>
        <function-ref name="get" scoped="" ref="0x40483814"/>
        <function-ref name="makeOutput" scoped="" ref="0x404838f0"/>
        <function-ref name="set" scoped="" ref="0x404839cc"/>
        <function-ref name="clr" scoped="" ref="0x40483aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4048980c" loc="87:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4048980c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404899cc"/>
        <function-ref name="isInput" scoped="" ref="0x40489aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40489b84"/>
        <function-ref name="isOutput" scoped="" ref="0x40489c60"/>
        <function-ref name="get" scoped="" ref="0x40489d3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489e18"/>
        <function-ref name="set" scoped="" ref="0x40489ef4"/>
        <function-ref name="clr" scoped="" ref="0x40488010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40471208" loc="46:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40471208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404713c8"/>
        <function-ref name="isInput" scoped="" ref="0x404714a4"/>
        <function-ref name="toggle" scoped="" ref="0x40471580"/>
        <function-ref name="isOutput" scoped="" ref="0x4047165c"/>
        <function-ref name="get" scoped="" ref="0x40471738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471814"/>
        <function-ref name="set" scoped="" ref="0x404718f0"/>
        <function-ref name="clr" scoped="" ref="0x404719cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40476654" loc="57:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40476654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476894"/>
        <function-ref name="isInput" scoped="" ref="0x40476970"/>
        <function-ref name="toggle" scoped="" ref="0x40476a4c"/>
        <function-ref name="isOutput" scoped="" ref="0x40476b28"/>
        <function-ref name="get" scoped="" ref="0x40476c04"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476ce0"/>
        <function-ref name="set" scoped="" ref="0x40476dbc"/>
        <function-ref name="clr" scoped="" ref="0x40476e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4047cad8" loc="68:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4047cad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047cc98"/>
        <function-ref name="isInput" scoped="" ref="0x4047cd74"/>
        <function-ref name="toggle" scoped="" ref="0x4047ce50"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b010"/>
        <function-ref name="get" scoped="" ref="0x4047b0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b1c8"/>
        <function-ref name="set" scoped="" ref="0x4047b2a4"/>
        <function-ref name="clr" scoped="" ref="0x4047b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4048f80c" loc="96:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4048f80c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f9cc"/>
        <function-ref name="isInput" scoped="" ref="0x4048faa8"/>
        <function-ref name="toggle" scoped="" ref="0x4048fb84"/>
        <function-ref name="isOutput" scoped="" ref="0x4048fc60"/>
        <function-ref name="get" scoped="" ref="0x4048fd3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048fe18"/>
        <function-ref name="set" scoped="" ref="0x4048fef4"/>
        <function-ref name="clr" scoped="" ref="0x4048e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40486010" loc="71:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40486010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404862d0"/>
        <function-ref name="isInput" scoped="" ref="0x404863ac"/>
        <function-ref name="toggle" scoped="" ref="0x40486488"/>
        <function-ref name="isOutput" scoped="" ref="0x40486564"/>
        <function-ref name="get" scoped="" ref="0x40486640"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048671c"/>
        <function-ref name="set" scoped="" ref="0x404867f8"/>
        <function-ref name="clr" scoped="" ref="0x404868d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4048c578" loc="82:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4048c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c738"/>
        <function-ref name="isInput" scoped="" ref="0x4048c814"/>
        <function-ref name="toggle" scoped="" ref="0x4048c8f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c9cc"/>
        <function-ref name="get" scoped="" ref="0x4048caa8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048cb84"/>
        <function-ref name="set" scoped="" ref="0x4048cc60"/>
        <function-ref name="clr" scoped="" ref="0x4048cd3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40487654" loc="91:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40487654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487814"/>
        <function-ref name="isInput" scoped="" ref="0x404878f0"/>
        <function-ref name="toggle" scoped="" ref="0x404879cc"/>
        <function-ref name="isOutput" scoped="" ref="0x40487aa8"/>
        <function-ref name="get" scoped="" ref="0x40487b84"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487c60"/>
        <function-ref name="set" scoped="" ref="0x40487d3c"/>
        <function-ref name="clr" scoped="" ref="0x40487e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40498bc4" loc="102:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40498bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40498d84"/>
        <function-ref name="isInput" scoped="" ref="0x40498e60"/>
        <function-ref name="toggle" scoped="" ref="0x40497010"/>
        <function-ref name="isOutput" scoped="" ref="0x404970ec"/>
        <function-ref name="get" scoped="" ref="0x404971c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404972a4"/>
        <function-ref name="set" scoped="" ref="0x40497380"/>
        <function-ref name="clr" scoped="" ref="0x4049745c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4047a030" loc="49:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4047a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a1f0"/>
        <function-ref name="isInput" scoped="" ref="0x4047a2cc"/>
        <function-ref name="toggle" scoped="" ref="0x4047a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a484"/>
        <function-ref name="get" scoped="" ref="0x4047a560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a63c"/>
        <function-ref name="set" scoped="" ref="0x4047a718"/>
        <function-ref name="clr" scoped="" ref="0x4047a7f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4048049c" loc="60:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4048049c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048065c"/>
        <function-ref name="isInput" scoped="" ref="0x40480738"/>
        <function-ref name="toggle" scoped="" ref="0x40480814"/>
        <function-ref name="isOutput" scoped="" ref="0x404808f0"/>
        <function-ref name="get" scoped="" ref="0x404809cc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40480aa8"/>
        <function-ref name="set" scoped="" ref="0x40480b84"/>
        <function-ref name="clr" scoped="" ref="0x40480c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40488208" loc="89:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40488208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404883c8"/>
        <function-ref name="isInput" scoped="" ref="0x404884a4"/>
        <function-ref name="toggle" scoped="" ref="0x40488580"/>
        <function-ref name="isOutput" scoped="" ref="0x4048865c"/>
        <function-ref name="get" scoped="" ref="0x40488738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488814"/>
        <function-ref name="set" scoped="" ref="0x404888f0"/>
        <function-ref name="clr" scoped="" ref="0x404889cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4047f84c" loc="63:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4047f84c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047fa0c"/>
        <function-ref name="isInput" scoped="" ref="0x4047fae8"/>
        <function-ref name="toggle" scoped="" ref="0x4047fbc4"/>
        <function-ref name="isOutput" scoped="" ref="0x4047fca0"/>
        <function-ref name="get" scoped="" ref="0x4047fd7c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047fe58"/>
        <function-ref name="set" scoped="" ref="0x4047e010"/>
        <function-ref name="clr" scoped="" ref="0x4047e0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40485e58" loc="74:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40485e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40484050"/>
        <function-ref name="isInput" scoped="" ref="0x4048412c"/>
        <function-ref name="toggle" scoped="" ref="0x40484208"/>
        <function-ref name="isOutput" scoped="" ref="0x404842e4"/>
        <function-ref name="get" scoped="" ref="0x404843c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048449c"/>
        <function-ref name="set" scoped="" ref="0x40484578"/>
        <function-ref name="clr" scoped="" ref="0x40484654"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4048a3c0" loc="85:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4048a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048a580"/>
        <function-ref name="isInput" scoped="" ref="0x4048a65c"/>
        <function-ref name="toggle" scoped="" ref="0x4048a738"/>
        <function-ref name="isOutput" scoped="" ref="0x4048a814"/>
        <function-ref name="get" scoped="" ref="0x4048a8f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a9cc"/>
        <function-ref name="set" scoped="" ref="0x4048aaa8"/>
        <function-ref name="clr" scoped="" ref="0x4048ab84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404913c0" loc="94:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404913c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491580"/>
        <function-ref name="isInput" scoped="" ref="0x4049165c"/>
        <function-ref name="toggle" scoped="" ref="0x40491738"/>
        <function-ref name="isOutput" scoped="" ref="0x40491814"/>
        <function-ref name="get" scoped="" ref="0x404918f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404919cc"/>
        <function-ref name="set" scoped="" ref="0x40491aa8"/>
        <function-ref name="clr" scoped="" ref="0x40491b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40473d78" loc="44:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40473d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472010"/>
        <function-ref name="isInput" scoped="" ref="0x404720ec"/>
        <function-ref name="toggle" scoped="" ref="0x404721c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404722a4"/>
        <function-ref name="get" scoped="" ref="0x40472380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047245c"/>
        <function-ref name="set" scoped="" ref="0x40472538"/>
        <function-ref name="clr" scoped="" ref="0x40472614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40477208" loc="55:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40477208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404773c8"/>
        <function-ref name="isInput" scoped="" ref="0x404774a4"/>
        <function-ref name="toggle" scoped="" ref="0x40477580"/>
        <function-ref name="isOutput" scoped="" ref="0x4047765c"/>
        <function-ref name="get" scoped="" ref="0x40477738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477814"/>
        <function-ref name="set" scoped="" ref="0x404778f0"/>
        <function-ref name="clr" scoped="" ref="0x404779cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4047d730" loc="66:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4047d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x4047d9cc"/>
        <function-ref name="toggle" scoped="" ref="0x4047daa8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047db84"/>
        <function-ref name="get" scoped="" ref="0x4047dc60"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047dd3c"/>
        <function-ref name="set" scoped="" ref="0x4047de18"/>
        <function-ref name="clr" scoped="" ref="0x4047def4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40483ca0" loc="77:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40483ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483e60"/>
        <function-ref name="isInput" scoped="" ref="0x40482010"/>
        <function-ref name="toggle" scoped="" ref="0x404820ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404821c8"/>
        <function-ref name="get" scoped="" ref="0x404822a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482380"/>
        <function-ref name="set" scoped="" ref="0x4048245c"/>
        <function-ref name="clr" scoped="" ref="0x40482538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4048d80c" loc="100:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4048d80c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048d9cc"/>
        <function-ref name="isInput" scoped="" ref="0x4048daa8"/>
        <function-ref name="toggle" scoped="" ref="0x4048db84"/>
        <function-ref name="isOutput" scoped="" ref="0x4048dc60"/>
        <function-ref name="get" scoped="" ref="0x4048dd3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048de18"/>
        <function-ref name="set" scoped="" ref="0x4048def4"/>
        <function-ref name="clr" scoped="" ref="0x40498010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4048111c" loc="80:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4048111c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404812dc"/>
        <function-ref name="isInput" scoped="" ref="0x404813b8"/>
        <function-ref name="toggle" scoped="" ref="0x40481494"/>
        <function-ref name="isOutput" scoped="" ref="0x40481570"/>
        <function-ref name="get" scoped="" ref="0x4048164c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481728"/>
        <function-ref name="set" scoped="" ref="0x40481804"/>
        <function-ref name="clr" scoped="" ref="0x404818e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4047b578" loc="69:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4047b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b738"/>
        <function-ref name="isInput" scoped="" ref="0x4047b814"/>
        <function-ref name="toggle" scoped="" ref="0x4047b8f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b9cc"/>
        <function-ref name="get" scoped="" ref="0x4047baa8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047bb84"/>
        <function-ref name="set" scoped="" ref="0x4047bc60"/>
        <function-ref name="clr" scoped="" ref="0x4047bd3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40471bc4" loc="47:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40471bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471d84"/>
        <function-ref name="isInput" scoped="" ref="0x40471e60"/>
        <function-ref name="toggle" scoped="" ref="0x40470010"/>
        <function-ref name="isOutput" scoped="" ref="0x404700ec"/>
        <function-ref name="get" scoped="" ref="0x404701c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404702a4"/>
        <function-ref name="set" scoped="" ref="0x40470380"/>
        <function-ref name="clr" scoped="" ref="0x4047045c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404750c0" loc="58:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404750c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475280"/>
        <function-ref name="isInput" scoped="" ref="0x4047535c"/>
        <function-ref name="toggle" scoped="" ref="0x40475438"/>
        <function-ref name="isOutput" scoped="" ref="0x40475514"/>
        <function-ref name="get" scoped="" ref="0x404755f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404756cc"/>
        <function-ref name="set" scoped="" ref="0x404757a8"/>
        <function-ref name="clr" scoped="" ref="0x40475884"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b7010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b71d0"/>
        <function-ref name="isInput" scoped="" ref="0x404b72ac"/>
        <function-ref name="toggle" scoped="" ref="0x404b7388"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7464"/>
        <function-ref name="get" scoped="" ref="0x404b7540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b761c"/>
        <function-ref name="set" scoped="" ref="0x404b76f8"/>
        <function-ref name="clr" scoped="" ref="0x404b77d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c2c44" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c2c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c2e04"/>
        <function-ref name="isInput" scoped="" ref="0x404c2ee0"/>
        <function-ref name="toggle" scoped="" ref="0x404c1010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c10ec"/>
        <function-ref name="get" scoped="" ref="0x404c11c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c12a4"/>
        <function-ref name="set" scoped="" ref="0x404c1380"/>
        <function-ref name="clr" scoped="" ref="0x404c145c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404b9d44" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404b9d44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9f04"/>
        <function-ref name="isInput" scoped="" ref="0x404b8010"/>
        <function-ref name="toggle" scoped="" ref="0x404b80ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404b81c8"/>
        <function-ref name="get" scoped="" ref="0x404b82a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8380"/>
        <function-ref name="set" scoped="" ref="0x404b845c"/>
        <function-ref name="clr" scoped="" ref="0x404b8538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404b7930" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404b7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7af0"/>
        <function-ref name="isInput" scoped="" ref="0x404b7bcc"/>
        <function-ref name="toggle" scoped="" ref="0x404b7ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7d84"/>
        <function-ref name="get" scoped="" ref="0x404b7e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2010"/>
        <function-ref name="set" scoped="" ref="0x404c20ec"/>
        <function-ref name="clr" scoped="" ref="0x404c21c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c15b8" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1778"/>
        <function-ref name="isInput" scoped="" ref="0x404c1854"/>
        <function-ref name="toggle" scoped="" ref="0x404c1930"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1a0c"/>
        <function-ref name="get" scoped="" ref="0x404c1ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1bc4"/>
        <function-ref name="set" scoped="" ref="0x404c1ca0"/>
        <function-ref name="clr" scoped="" ref="0x404c1d7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b8694" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b8694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8854"/>
        <function-ref name="isInput" scoped="" ref="0x404b8930"/>
        <function-ref name="toggle" scoped="" ref="0x404b8a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8ae8"/>
        <function-ref name="get" scoped="" ref="0x404b8bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8ca0"/>
        <function-ref name="set" scoped="" ref="0x404b8d7c"/>
        <function-ref name="clr" scoped="" ref="0x404b8e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404c2324" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404c2324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c24e4"/>
        <function-ref name="isInput" scoped="" ref="0x404c25c0"/>
        <function-ref name="toggle" scoped="" ref="0x404c269c"/>
        <function-ref name="isOutput" scoped="" ref="0x404c2778"/>
        <function-ref name="get" scoped="" ref="0x404c2854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2930"/>
        <function-ref name="set" scoped="" ref="0x404c2a0c"/>
        <function-ref name="clr" scoped="" ref="0x404c2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c1ed8" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c1ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c00b8"/>
        <function-ref name="isInput" scoped="" ref="0x404c0194"/>
        <function-ref name="toggle" scoped="" ref="0x404c0270"/>
        <function-ref name="isOutput" scoped="" ref="0x404c034c"/>
        <function-ref name="get" scoped="" ref="0x404c0428"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0504"/>
        <function-ref name="set" scoped="" ref="0x404c05e0"/>
        <function-ref name="clr" scoped="" ref="0x404c06bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411cf21c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411cf21c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411cf3dc"/>
        <function-ref name="isInput" scoped="" ref="0x411cf4b8"/>
        <function-ref name="toggle" scoped="" ref="0x411cf594"/>
        <function-ref name="isOutput" scoped="" ref="0x411cf670"/>
        <function-ref name="get" scoped="" ref="0x411cf74c"/>
        <function-ref name="makeOutput" scoped="" ref="0x411cf828"/>
        <function-ref name="set" scoped="" ref="0x411cf904"/>
        <function-ref name="clr" scoped="" ref="0x411cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411ceaec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411ceaec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411cecac"/>
        <function-ref name="isInput" scoped="" ref="0x411ced88"/>
        <function-ref name="toggle" scoped="" ref="0x411cee64"/>
        <function-ref name="isOutput" scoped="" ref="0x411cd010"/>
        <function-ref name="get" scoped="" ref="0x411cd0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x411cd1c8"/>
        <function-ref name="set" scoped="" ref="0x411cd2a4"/>
        <function-ref name="clr" scoped="" ref="0x411cd380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411cc514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411cc514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411cc6d4"/>
        <function-ref name="isInput" scoped="" ref="0x411cc7b0"/>
        <function-ref name="toggle" scoped="" ref="0x411cc88c"/>
        <function-ref name="isOutput" scoped="" ref="0x411cc968"/>
        <function-ref name="get" scoped="" ref="0x411cca44"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ccb20"/>
        <function-ref name="set" scoped="" ref="0x411ccbfc"/>
        <function-ref name="clr" scoped="" ref="0x411cccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411cbe8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411cbe8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ca06c"/>
        <function-ref name="isInput" scoped="" ref="0x411ca148"/>
        <function-ref name="toggle" scoped="" ref="0x411ca224"/>
        <function-ref name="isOutput" scoped="" ref="0x411ca300"/>
        <function-ref name="get" scoped="" ref="0x411ca3dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ca4b8"/>
        <function-ref name="set" scoped="" ref="0x411ca594"/>
        <function-ref name="clr" scoped="" ref="0x411ca670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411c976c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411c976c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411c992c"/>
        <function-ref name="isInput" scoped="" ref="0x411c9a08"/>
        <function-ref name="toggle" scoped="" ref="0x411c9ae4"/>
        <function-ref name="isOutput" scoped="" ref="0x411c9bc0"/>
        <function-ref name="get" scoped="" ref="0x411c9c9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x411c9d78"/>
        <function-ref name="set" scoped="" ref="0x411c9e54"/>
        <function-ref name="clr" scoped="" ref="0x411c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411c70f4" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411c70f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411c72b4"/>
        <function-ref name="isInput" scoped="" ref="0x411c7390"/>
        <function-ref name="toggle" scoped="" ref="0x411c746c"/>
        <function-ref name="isOutput" scoped="" ref="0x411c7548"/>
        <function-ref name="get" scoped="" ref="0x411c7624"/>
        <function-ref name="makeOutput" scoped="" ref="0x411c7700"/>
        <function-ref name="set" scoped="" ref="0x411c77dc"/>
        <function-ref name="clr" scoped="" ref="0x411c78b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411c699c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411c699c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411c6b5c"/>
        <function-ref name="isInput" scoped="" ref="0x411c6c38"/>
        <function-ref name="toggle" scoped="" ref="0x411c6d14"/>
        <function-ref name="isOutput" scoped="" ref="0x411c6df0"/>
        <function-ref name="get" scoped="" ref="0x411c6ecc"/>
        <function-ref name="makeOutput" scoped="" ref="0x411c5010"/>
        <function-ref name="set" scoped="" ref="0x411c50ec"/>
        <function-ref name="clr" scoped="" ref="0x411c51c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411c42bc" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411c42bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411c447c"/>
        <function-ref name="isInput" scoped="" ref="0x411c4558"/>
        <function-ref name="toggle" scoped="" ref="0x411c4634"/>
        <function-ref name="isOutput" scoped="" ref="0x411c4710"/>
        <function-ref name="get" scoped="" ref="0x411c47ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x411c48c8"/>
        <function-ref name="set" scoped="" ref="0x411c49a4"/>
        <function-ref name="clr" scoped="" ref="0x411c4a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404c8400" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404c8400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c85c0"/>
        <function-ref name="isInput" scoped="" ref="0x404c869c"/>
        <function-ref name="toggle" scoped="" ref="0x404c8778"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8854"/>
        <function-ref name="get" scoped="" ref="0x404c8930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c8a0c"/>
        <function-ref name="set" scoped="" ref="0x404c8ae8"/>
        <function-ref name="clr" scoped="" ref="0x404c8bc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c5010" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c51d0"/>
        <function-ref name="isInput" scoped="" ref="0x404c52ac"/>
        <function-ref name="toggle" scoped="" ref="0x404c5388"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5464"/>
        <function-ref name="get" scoped="" ref="0x404c5540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c561c"/>
        <function-ref name="set" scoped="" ref="0x404c56f8"/>
        <function-ref name="clr" scoped="" ref="0x404c57d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404bd0f4" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404bd0f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd2b4"/>
        <function-ref name="isInput" scoped="" ref="0x404bd390"/>
        <function-ref name="toggle" scoped="" ref="0x404bd46c"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd548"/>
        <function-ref name="get" scoped="" ref="0x404bd624"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd700"/>
        <function-ref name="set" scoped="" ref="0x404bd7dc"/>
        <function-ref name="clr" scoped="" ref="0x404bd8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404c8d20" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404c8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c8ee0"/>
        <function-ref name="isInput" scoped="" ref="0x404c6010"/>
        <function-ref name="toggle" scoped="" ref="0x404c60ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404c61c8"/>
        <function-ref name="get" scoped="" ref="0x404c62a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6380"/>
        <function-ref name="set" scoped="" ref="0x404c645c"/>
        <function-ref name="clr" scoped="" ref="0x404c6538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c5930" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5af0"/>
        <function-ref name="isInput" scoped="" ref="0x404c5bcc"/>
        <function-ref name="toggle" scoped="" ref="0x404c5ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5d84"/>
        <function-ref name="get" scoped="" ref="0x404c5e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4010"/>
        <function-ref name="set" scoped="" ref="0x404c40ec"/>
        <function-ref name="clr" scoped="" ref="0x404c41c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404bda14" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404bda14"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bdbd4"/>
        <function-ref name="isInput" scoped="" ref="0x404bdcb0"/>
        <function-ref name="toggle" scoped="" ref="0x404bdd8c"/>
        <function-ref name="isOutput" scoped="" ref="0x404bde68"/>
        <function-ref name="get" scoped="" ref="0x404c8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c80ec"/>
        <function-ref name="set" scoped="" ref="0x404c81c8"/>
        <function-ref name="clr" scoped="" ref="0x404c82a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404c6694" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404c6694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6854"/>
        <function-ref name="isInput" scoped="" ref="0x404c6930"/>
        <function-ref name="toggle" scoped="" ref="0x404c6a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6ae8"/>
        <function-ref name="get" scoped="" ref="0x404c6bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6ca0"/>
        <function-ref name="set" scoped="" ref="0x404c6d7c"/>
        <function-ref name="clr" scoped="" ref="0x404c6e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c4324" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c4324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c44e4"/>
        <function-ref name="isInput" scoped="" ref="0x404c45c0"/>
        <function-ref name="toggle" scoped="" ref="0x404c469c"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4778"/>
        <function-ref name="get" scoped="" ref="0x404c4854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4930"/>
        <function-ref name="set" scoped="" ref="0x404c4a0c"/>
        <function-ref name="clr" scoped="" ref="0x404c4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41221030" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41221030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412211f0"/>
        <function-ref name="isInput" scoped="" ref="0x412212cc"/>
        <function-ref name="toggle" scoped="" ref="0x412213a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41221484"/>
        <function-ref name="get" scoped="" ref="0x41221560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122163c"/>
        <function-ref name="set" scoped="" ref="0x41221718"/>
        <function-ref name="clr" scoped="" ref="0x412217f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412208d8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412208d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41220a98"/>
        <function-ref name="isInput" scoped="" ref="0x41220b74"/>
        <function-ref name="toggle" scoped="" ref="0x41220c50"/>
        <function-ref name="isOutput" scoped="" ref="0x41220d2c"/>
        <function-ref name="get" scoped="" ref="0x41220e08"/>
        <function-ref name="makeOutput" scoped="" ref="0x41220ee4"/>
        <function-ref name="set" scoped="" ref="0x4121f010"/>
        <function-ref name="clr" scoped="" ref="0x4121f0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121e21c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121e21c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121e3dc"/>
        <function-ref name="isInput" scoped="" ref="0x4121e4b8"/>
        <function-ref name="toggle" scoped="" ref="0x4121e594"/>
        <function-ref name="isOutput" scoped="" ref="0x4121e670"/>
        <function-ref name="get" scoped="" ref="0x4121e74c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4121e828"/>
        <function-ref name="set" scoped="" ref="0x4121e904"/>
        <function-ref name="clr" scoped="" ref="0x4121e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121daec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121daec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121dcac"/>
        <function-ref name="isInput" scoped="" ref="0x4121dd88"/>
        <function-ref name="toggle" scoped="" ref="0x4121de64"/>
        <function-ref name="isOutput" scoped="" ref="0x4121c010"/>
        <function-ref name="get" scoped="" ref="0x4121c0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x4121c1c8"/>
        <function-ref name="set" scoped="" ref="0x4121c2a4"/>
        <function-ref name="clr" scoped="" ref="0x4121c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121b514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121b514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121b6d4"/>
        <function-ref name="isInput" scoped="" ref="0x4121b7b0"/>
        <function-ref name="toggle" scoped="" ref="0x4121b88c"/>
        <function-ref name="isOutput" scoped="" ref="0x4121b968"/>
        <function-ref name="get" scoped="" ref="0x4121ba44"/>
        <function-ref name="makeOutput" scoped="" ref="0x4121bb20"/>
        <function-ref name="set" scoped="" ref="0x4121bbfc"/>
        <function-ref name="clr" scoped="" ref="0x4121bcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121ae8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121ae8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121906c"/>
        <function-ref name="isInput" scoped="" ref="0x41219148"/>
        <function-ref name="toggle" scoped="" ref="0x41219224"/>
        <function-ref name="isOutput" scoped="" ref="0x41219300"/>
        <function-ref name="get" scoped="" ref="0x412193dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412194b8"/>
        <function-ref name="set" scoped="" ref="0x41219594"/>
        <function-ref name="clr" scoped="" ref="0x41219670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121876c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121876c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121892c"/>
        <function-ref name="isInput" scoped="" ref="0x41218a08"/>
        <function-ref name="toggle" scoped="" ref="0x41218ae4"/>
        <function-ref name="isOutput" scoped="" ref="0x41218bc0"/>
        <function-ref name="get" scoped="" ref="0x41218c9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x41218d78"/>
        <function-ref name="set" scoped="" ref="0x41218e54"/>
        <function-ref name="clr" scoped="" ref="0x41217010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412160f4" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412160f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412162b4"/>
        <function-ref name="isInput" scoped="" ref="0x41216390"/>
        <function-ref name="toggle" scoped="" ref="0x4121646c"/>
        <function-ref name="isOutput" scoped="" ref="0x41216548"/>
        <function-ref name="get" scoped="" ref="0x41216624"/>
        <function-ref name="makeOutput" scoped="" ref="0x41216700"/>
        <function-ref name="set" scoped="" ref="0x412167dc"/>
        <function-ref name="clr" scoped="" ref="0x412168b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404cc7b0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404cc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc970"/>
        <function-ref name="isInput" scoped="" ref="0x404cca4c"/>
        <function-ref name="toggle" scoped="" ref="0x404ccb28"/>
        <function-ref name="isOutput" scoped="" ref="0x404ccc04"/>
        <function-ref name="get" scoped="" ref="0x404ccce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ccdbc"/>
        <function-ref name="set" scoped="" ref="0x404cce98"/>
        <function-ref name="clr" scoped="" ref="0x404cb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404ca400" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404ca400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ca5c0"/>
        <function-ref name="isInput" scoped="" ref="0x404ca69c"/>
        <function-ref name="toggle" scoped="" ref="0x404ca778"/>
        <function-ref name="isOutput" scoped="" ref="0x404ca854"/>
        <function-ref name="get" scoped="" ref="0x404ca930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404caa0c"/>
        <function-ref name="set" scoped="" ref="0x404caae8"/>
        <function-ref name="clr" scoped="" ref="0x404cabc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404cd528" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404cd528"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd6e8"/>
        <function-ref name="isInput" scoped="" ref="0x404cd7c4"/>
        <function-ref name="toggle" scoped="" ref="0x404cd8a0"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd97c"/>
        <function-ref name="get" scoped="" ref="0x404cda58"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cdb34"/>
        <function-ref name="set" scoped="" ref="0x404cdc10"/>
        <function-ref name="clr" scoped="" ref="0x404cdcec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404cb16c" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404cb16c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb32c"/>
        <function-ref name="isInput" scoped="" ref="0x404cb408"/>
        <function-ref name="toggle" scoped="" ref="0x404cb4e4"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb5c0"/>
        <function-ref name="get" scoped="" ref="0x404cb69c"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb778"/>
        <function-ref name="set" scoped="" ref="0x404cb854"/>
        <function-ref name="clr" scoped="" ref="0x404cb930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404cad20" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404cad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404caee0"/>
        <function-ref name="isInput" scoped="" ref="0x404c9010"/>
        <function-ref name="toggle" scoped="" ref="0x404c90ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404c91c8"/>
        <function-ref name="get" scoped="" ref="0x404c92a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c9380"/>
        <function-ref name="set" scoped="" ref="0x404c945c"/>
        <function-ref name="clr" scoped="" ref="0x404c9538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404cde48" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404cde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc050"/>
        <function-ref name="isInput" scoped="" ref="0x404cc12c"/>
        <function-ref name="toggle" scoped="" ref="0x404cc208"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc2e4"/>
        <function-ref name="get" scoped="" ref="0x404cc3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc49c"/>
        <function-ref name="set" scoped="" ref="0x404cc578"/>
        <function-ref name="clr" scoped="" ref="0x404cc654"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404cba8c" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404cba8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cbc4c"/>
        <function-ref name="isInput" scoped="" ref="0x404cbd28"/>
        <function-ref name="toggle" scoped="" ref="0x404cbe04"/>
        <function-ref name="isOutput" scoped="" ref="0x404cbee0"/>
        <function-ref name="get" scoped="" ref="0x404ca010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ca0ec"/>
        <function-ref name="set" scoped="" ref="0x404ca1c8"/>
        <function-ref name="clr" scoped="" ref="0x404ca2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c9694" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c9694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c9854"/>
        <function-ref name="isInput" scoped="" ref="0x404c9930"/>
        <function-ref name="toggle" scoped="" ref="0x404c9a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9ae8"/>
        <function-ref name="get" scoped="" ref="0x404c9bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c9ca0"/>
        <function-ref name="set" scoped="" ref="0x404c9d7c"/>
        <function-ref name="clr" scoped="" ref="0x404c9e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41231e38" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41231e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122d010"/>
        <function-ref name="isInput" scoped="" ref="0x4122d0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4122d1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4122d2a4"/>
        <function-ref name="get" scoped="" ref="0x4122d380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122d45c"/>
        <function-ref name="set" scoped="" ref="0x4122d538"/>
        <function-ref name="clr" scoped="" ref="0x4122d614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4122c710" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4122c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122c8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4122c9ac"/>
        <function-ref name="toggle" scoped="" ref="0x4122ca88"/>
        <function-ref name="isOutput" scoped="" ref="0x4122cb64"/>
        <function-ref name="get" scoped="" ref="0x4122cc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122cd1c"/>
        <function-ref name="set" scoped="" ref="0x4122cdf8"/>
        <function-ref name="clr" scoped="" ref="0x4122ced4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4122a010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4122a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122a1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4122a2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4122a388"/>
        <function-ref name="isOutput" scoped="" ref="0x4122a464"/>
        <function-ref name="get" scoped="" ref="0x4122a540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122a61c"/>
        <function-ref name="set" scoped="" ref="0x4122a6f8"/>
        <function-ref name="clr" scoped="" ref="0x4122a7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4126b8b8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4126b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4126ba78"/>
        <function-ref name="isInput" scoped="" ref="0x4126bb54"/>
        <function-ref name="toggle" scoped="" ref="0x4126bc30"/>
        <function-ref name="isOutput" scoped="" ref="0x4126bd0c"/>
        <function-ref name="get" scoped="" ref="0x4126bde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4126bec4"/>
        <function-ref name="set" scoped="" ref="0x4126a010"/>
        <function-ref name="clr" scoped="" ref="0x4126a0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4126921c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4126921c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412693dc"/>
        <function-ref name="isInput" scoped="" ref="0x412694b8"/>
        <function-ref name="toggle" scoped="" ref="0x41269594"/>
        <function-ref name="isOutput" scoped="" ref="0x41269670"/>
        <function-ref name="get" scoped="" ref="0x4126974c"/>
        <function-ref name="makeOutput" scoped="" ref="0x41269828"/>
        <function-ref name="set" scoped="" ref="0x41269904"/>
        <function-ref name="clr" scoped="" ref="0x412699e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41268aec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41268aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41268cac"/>
        <function-ref name="isInput" scoped="" ref="0x41268d88"/>
        <function-ref name="toggle" scoped="" ref="0x41268e64"/>
        <function-ref name="isOutput" scoped="" ref="0x41267010"/>
        <function-ref name="get" scoped="" ref="0x412670ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x412671c8"/>
        <function-ref name="set" scoped="" ref="0x412672a4"/>
        <function-ref name="clr" scoped="" ref="0x41267380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41266514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41266514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412666d4"/>
        <function-ref name="isInput" scoped="" ref="0x412667b0"/>
        <function-ref name="toggle" scoped="" ref="0x4126688c"/>
        <function-ref name="isOutput" scoped="" ref="0x41266968"/>
        <function-ref name="get" scoped="" ref="0x41266a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x41266b20"/>
        <function-ref name="set" scoped="" ref="0x41266bfc"/>
        <function-ref name="clr" scoped="" ref="0x41266cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41265e8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41265e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4126306c"/>
        <function-ref name="isInput" scoped="" ref="0x41263148"/>
        <function-ref name="toggle" scoped="" ref="0x41263224"/>
        <function-ref name="isOutput" scoped="" ref="0x41263300"/>
        <function-ref name="get" scoped="" ref="0x412633dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412634b8"/>
        <function-ref name="set" scoped="" ref="0x41263594"/>
        <function-ref name="clr" scoped="" ref="0x41263670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404d0c44" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404d0c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d0e04"/>
        <function-ref name="isInput" scoped="" ref="0x404d0ee0"/>
        <function-ref name="toggle" scoped="" ref="0x404cf010"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf0ec"/>
        <function-ref name="get" scoped="" ref="0x404cf1c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf2a4"/>
        <function-ref name="set" scoped="" ref="0x404cf380"/>
        <function-ref name="clr" scoped="" ref="0x404cf45c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404db818" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404db818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404db9d8"/>
        <function-ref name="isInput" scoped="" ref="0x404dbab4"/>
        <function-ref name="toggle" scoped="" ref="0x404dbb90"/>
        <function-ref name="isOutput" scoped="" ref="0x404dbc6c"/>
        <function-ref name="get" scoped="" ref="0x404dbd48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dbe24"/>
        <function-ref name="set" scoped="" ref="0x404dbf00"/>
        <function-ref name="clr" scoped="" ref="0x404da010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404d1954" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404d1954"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1b14"/>
        <function-ref name="isInput" scoped="" ref="0x404d1bf0"/>
        <function-ref name="toggle" scoped="" ref="0x404d1ccc"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1da8"/>
        <function-ref name="get" scoped="" ref="0x404d1e84"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0010"/>
        <function-ref name="set" scoped="" ref="0x404d00ec"/>
        <function-ref name="clr" scoped="" ref="0x404d01c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404cf5b8" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404cf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf778"/>
        <function-ref name="isInput" scoped="" ref="0x404cf854"/>
        <function-ref name="toggle" scoped="" ref="0x404cf930"/>
        <function-ref name="isOutput" scoped="" ref="0x404cfa0c"/>
        <function-ref name="get" scoped="" ref="0x404cfae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cfbc4"/>
        <function-ref name="set" scoped="" ref="0x404cfca0"/>
        <function-ref name="clr" scoped="" ref="0x404cfd7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404da16c" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404da16c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404da32c"/>
        <function-ref name="isInput" scoped="" ref="0x404da408"/>
        <function-ref name="toggle" scoped="" ref="0x404da4e4"/>
        <function-ref name="isOutput" scoped="" ref="0x404da5c0"/>
        <function-ref name="get" scoped="" ref="0x404da69c"/>
        <function-ref name="makeOutput" scoped="" ref="0x404da778"/>
        <function-ref name="set" scoped="" ref="0x404da854"/>
        <function-ref name="clr" scoped="" ref="0x404da930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404d0324" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404d0324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d04e4"/>
        <function-ref name="isInput" scoped="" ref="0x404d05c0"/>
        <function-ref name="toggle" scoped="" ref="0x404d069c"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0778"/>
        <function-ref name="get" scoped="" ref="0x404d0854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0930"/>
        <function-ref name="set" scoped="" ref="0x404d0a0c"/>
        <function-ref name="clr" scoped="" ref="0x404d0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404cfed8" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404cfed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404db0b8"/>
        <function-ref name="isInput" scoped="" ref="0x404db194"/>
        <function-ref name="toggle" scoped="" ref="0x404db270"/>
        <function-ref name="isOutput" scoped="" ref="0x404db34c"/>
        <function-ref name="get" scoped="" ref="0x404db428"/>
        <function-ref name="makeOutput" scoped="" ref="0x404db504"/>
        <function-ref name="set" scoped="" ref="0x404db5e0"/>
        <function-ref name="clr" scoped="" ref="0x404db6bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404daa8c" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404daa8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dac4c"/>
        <function-ref name="isInput" scoped="" ref="0x404dad28"/>
        <function-ref name="toggle" scoped="" ref="0x404dae04"/>
        <function-ref name="isOutput" scoped="" ref="0x404daee0"/>
        <function-ref name="get" scoped="" ref="0x404d9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d90ec"/>
        <function-ref name="set" scoped="" ref="0x404d91c8"/>
        <function-ref name="clr" scoped="" ref="0x404d92a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41280e38" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41280e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127c010"/>
        <function-ref name="isInput" scoped="" ref="0x4127c0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4127c1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4127c2a4"/>
        <function-ref name="get" scoped="" ref="0x4127c380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4127c45c"/>
        <function-ref name="set" scoped="" ref="0x4127c538"/>
        <function-ref name="clr" scoped="" ref="0x4127c614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4127b710" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4127b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127b8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4127b9ac"/>
        <function-ref name="toggle" scoped="" ref="0x4127ba88"/>
        <function-ref name="isOutput" scoped="" ref="0x4127bb64"/>
        <function-ref name="get" scoped="" ref="0x4127bc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x4127bd1c"/>
        <function-ref name="set" scoped="" ref="0x4127bdf8"/>
        <function-ref name="clr" scoped="" ref="0x4127bed4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41279010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41279010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412791d0"/>
        <function-ref name="isInput" scoped="" ref="0x412792ac"/>
        <function-ref name="toggle" scoped="" ref="0x41279388"/>
        <function-ref name="isOutput" scoped="" ref="0x41279464"/>
        <function-ref name="get" scoped="" ref="0x41279540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4127961c"/>
        <function-ref name="set" scoped="" ref="0x412796f8"/>
        <function-ref name="clr" scoped="" ref="0x412797d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412788b8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412788b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41278a78"/>
        <function-ref name="isInput" scoped="" ref="0x41278b54"/>
        <function-ref name="toggle" scoped="" ref="0x41278c30"/>
        <function-ref name="isOutput" scoped="" ref="0x41278d0c"/>
        <function-ref name="get" scoped="" ref="0x41278de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41278ec4"/>
        <function-ref name="set" scoped="" ref="0x41276010"/>
        <function-ref name="clr" scoped="" ref="0x412760ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4127521c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4127521c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412753dc"/>
        <function-ref name="isInput" scoped="" ref="0x412754b8"/>
        <function-ref name="toggle" scoped="" ref="0x41275594"/>
        <function-ref name="isOutput" scoped="" ref="0x41275670"/>
        <function-ref name="get" scoped="" ref="0x4127574c"/>
        <function-ref name="makeOutput" scoped="" ref="0x41275828"/>
        <function-ref name="set" scoped="" ref="0x41275904"/>
        <function-ref name="clr" scoped="" ref="0x412759e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41274aec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41274aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41274cac"/>
        <function-ref name="isInput" scoped="" ref="0x41274d88"/>
        <function-ref name="toggle" scoped="" ref="0x41274e64"/>
        <function-ref name="isOutput" scoped="" ref="0x41273010"/>
        <function-ref name="get" scoped="" ref="0x412730ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x412731c8"/>
        <function-ref name="set" scoped="" ref="0x412732a4"/>
        <function-ref name="clr" scoped="" ref="0x41273380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41272514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41272514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412726d4"/>
        <function-ref name="isInput" scoped="" ref="0x412727b0"/>
        <function-ref name="toggle" scoped="" ref="0x4127288c"/>
        <function-ref name="isOutput" scoped="" ref="0x41272968"/>
        <function-ref name="get" scoped="" ref="0x41272a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x41272b20"/>
        <function-ref name="set" scoped="" ref="0x41272bfc"/>
        <function-ref name="clr" scoped="" ref="0x41272cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41271e8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41271e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127006c"/>
        <function-ref name="isInput" scoped="" ref="0x41270148"/>
        <function-ref name="toggle" scoped="" ref="0x41270224"/>
        <function-ref name="isOutput" scoped="" ref="0x41270300"/>
        <function-ref name="get" scoped="" ref="0x412703dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412704b8"/>
        <function-ref name="set" scoped="" ref="0x41270594"/>
        <function-ref name="clr" scoped="" ref="0x41270670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404e2010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e21d0"/>
        <function-ref name="isInput" scoped="" ref="0x404e22ac"/>
        <function-ref name="toggle" scoped="" ref="0x404e2388"/>
        <function-ref name="isOutput" scoped="" ref="0x404e2464"/>
        <function-ref name="get" scoped="" ref="0x404e2540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e261c"/>
        <function-ref name="set" scoped="" ref="0x404e26f8"/>
        <function-ref name="clr" scoped="" ref="0x404e27d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404e1c44" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404e1c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e1e04"/>
        <function-ref name="isInput" scoped="" ref="0x404e1ee0"/>
        <function-ref name="toggle" scoped="" ref="0x404e0010"/>
        <function-ref name="isOutput" scoped="" ref="0x404e00ec"/>
        <function-ref name="get" scoped="" ref="0x404e01c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e02a4"/>
        <function-ref name="set" scoped="" ref="0x404e0380"/>
        <function-ref name="clr" scoped="" ref="0x404e045c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404d7cb4" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404d7cb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d7e74"/>
        <function-ref name="isInput" scoped="" ref="0x404d5010"/>
        <function-ref name="toggle" scoped="" ref="0x404d50ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404d51c8"/>
        <function-ref name="get" scoped="" ref="0x404d52a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5380"/>
        <function-ref name="set" scoped="" ref="0x404d545c"/>
        <function-ref name="clr" scoped="" ref="0x404d5538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404e2930" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404e2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e2af0"/>
        <function-ref name="isInput" scoped="" ref="0x404e2bcc"/>
        <function-ref name="toggle" scoped="" ref="0x404e2ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e2d84"/>
        <function-ref name="get" scoped="" ref="0x404e2e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e1010"/>
        <function-ref name="set" scoped="" ref="0x404e10ec"/>
        <function-ref name="clr" scoped="" ref="0x404e11c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404e05b8" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404e05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e0778"/>
        <function-ref name="isInput" scoped="" ref="0x404e0854"/>
        <function-ref name="toggle" scoped="" ref="0x404e0930"/>
        <function-ref name="isOutput" scoped="" ref="0x404e0a0c"/>
        <function-ref name="get" scoped="" ref="0x404e0ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e0bc4"/>
        <function-ref name="set" scoped="" ref="0x404e0ca0"/>
        <function-ref name="clr" scoped="" ref="0x404e0d7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404d5694" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404d5694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5854"/>
        <function-ref name="isInput" scoped="" ref="0x404d5930"/>
        <function-ref name="toggle" scoped="" ref="0x404d5a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5ae8"/>
        <function-ref name="get" scoped="" ref="0x404d5bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5ca0"/>
        <function-ref name="set" scoped="" ref="0x404d5d7c"/>
        <function-ref name="clr" scoped="" ref="0x404d5e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404e1324" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404e1324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e14e4"/>
        <function-ref name="isInput" scoped="" ref="0x404e15c0"/>
        <function-ref name="toggle" scoped="" ref="0x404e169c"/>
        <function-ref name="isOutput" scoped="" ref="0x404e1778"/>
        <function-ref name="get" scoped="" ref="0x404e1854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e1930"/>
        <function-ref name="set" scoped="" ref="0x404e1a0c"/>
        <function-ref name="clr" scoped="" ref="0x404e1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404e0ed8" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404e0ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404df0b8"/>
        <function-ref name="isInput" scoped="" ref="0x404df194"/>
        <function-ref name="toggle" scoped="" ref="0x404df270"/>
        <function-ref name="isOutput" scoped="" ref="0x404df34c"/>
        <function-ref name="get" scoped="" ref="0x404df428"/>
        <function-ref name="makeOutput" scoped="" ref="0x404df504"/>
        <function-ref name="set" scoped="" ref="0x404df5e0"/>
        <function-ref name="clr" scoped="" ref="0x404df6bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412cd690" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412cd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412cd850"/>
        <function-ref name="isInput" scoped="" ref="0x412cd92c"/>
        <function-ref name="toggle" scoped="" ref="0x412cda08"/>
        <function-ref name="isOutput" scoped="" ref="0x412cdae4"/>
        <function-ref name="get" scoped="" ref="0x412cdbc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412cdc9c"/>
        <function-ref name="set" scoped="" ref="0x412cdd78"/>
        <function-ref name="clr" scoped="" ref="0x412cde54"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412cb010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412cb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412cb1d0"/>
        <function-ref name="isInput" scoped="" ref="0x412cb2ac"/>
        <function-ref name="toggle" scoped="" ref="0x412cb388"/>
        <function-ref name="isOutput" scoped="" ref="0x412cb464"/>
        <function-ref name="get" scoped="" ref="0x412cb540"/>
        <function-ref name="makeOutput" scoped="" ref="0x412cb61c"/>
        <function-ref name="set" scoped="" ref="0x412cb6f8"/>
        <function-ref name="clr" scoped="" ref="0x412cb7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412ca8b8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412ca8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412caa78"/>
        <function-ref name="isInput" scoped="" ref="0x412cab54"/>
        <function-ref name="toggle" scoped="" ref="0x412cac30"/>
        <function-ref name="isOutput" scoped="" ref="0x412cad0c"/>
        <function-ref name="get" scoped="" ref="0x412cade8"/>
        <function-ref name="makeOutput" scoped="" ref="0x412caec4"/>
        <function-ref name="set" scoped="" ref="0x412c9010"/>
        <function-ref name="clr" scoped="" ref="0x412c90ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412c821c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412c821c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412c83dc"/>
        <function-ref name="isInput" scoped="" ref="0x412c84b8"/>
        <function-ref name="toggle" scoped="" ref="0x412c8594"/>
        <function-ref name="isOutput" scoped="" ref="0x412c8670"/>
        <function-ref name="get" scoped="" ref="0x412c874c"/>
        <function-ref name="makeOutput" scoped="" ref="0x412c8828"/>
        <function-ref name="set" scoped="" ref="0x412c8904"/>
        <function-ref name="clr" scoped="" ref="0x412c89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412c7aec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412c7aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412c7cac"/>
        <function-ref name="isInput" scoped="" ref="0x412c7d88"/>
        <function-ref name="toggle" scoped="" ref="0x412c7e64"/>
        <function-ref name="isOutput" scoped="" ref="0x412c6010"/>
        <function-ref name="get" scoped="" ref="0x412c60ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x412c61c8"/>
        <function-ref name="set" scoped="" ref="0x412c62a4"/>
        <function-ref name="clr" scoped="" ref="0x412c6380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412c5514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412c5514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412c56d4"/>
        <function-ref name="isInput" scoped="" ref="0x412c57b0"/>
        <function-ref name="toggle" scoped="" ref="0x412c588c"/>
        <function-ref name="isOutput" scoped="" ref="0x412c5968"/>
        <function-ref name="get" scoped="" ref="0x412c5a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x412c5b20"/>
        <function-ref name="set" scoped="" ref="0x412c5bfc"/>
        <function-ref name="clr" scoped="" ref="0x412c5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412c4e8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412c4e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412c306c"/>
        <function-ref name="isInput" scoped="" ref="0x412c3148"/>
        <function-ref name="toggle" scoped="" ref="0x412c3224"/>
        <function-ref name="isOutput" scoped="" ref="0x412c3300"/>
        <function-ref name="get" scoped="" ref="0x412c33dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412c34b8"/>
        <function-ref name="set" scoped="" ref="0x412c3594"/>
        <function-ref name="clr" scoped="" ref="0x412c3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412c276c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412c276c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412c292c"/>
        <function-ref name="isInput" scoped="" ref="0x412c2a08"/>
        <function-ref name="toggle" scoped="" ref="0x412c2ae4"/>
        <function-ref name="isOutput" scoped="" ref="0x412c2bc0"/>
        <function-ref name="get" scoped="" ref="0x412c2c9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x412c2d78"/>
        <function-ref name="set" scoped="" ref="0x412c2e54"/>
        <function-ref name="clr" scoped="" ref="0x412c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404e9400" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404e9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e95c0"/>
        <function-ref name="isInput" scoped="" ref="0x404e969c"/>
        <function-ref name="toggle" scoped="" ref="0x404e9778"/>
        <function-ref name="isOutput" scoped="" ref="0x404e9854"/>
        <function-ref name="get" scoped="" ref="0x404e9930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9a0c"/>
        <function-ref name="set" scoped="" ref="0x404e9ae8"/>
        <function-ref name="clr" scoped="" ref="0x404e9bc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404e7010" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e71d0"/>
        <function-ref name="isInput" scoped="" ref="0x404e72ac"/>
        <function-ref name="toggle" scoped="" ref="0x404e7388"/>
        <function-ref name="isOutput" scoped="" ref="0x404e7464"/>
        <function-ref name="get" scoped="" ref="0x404e7540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e761c"/>
        <function-ref name="set" scoped="" ref="0x404e76f8"/>
        <function-ref name="clr" scoped="" ref="0x404e77d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404dc0f4" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404dc0f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc2b4"/>
        <function-ref name="isInput" scoped="" ref="0x404dc390"/>
        <function-ref name="toggle" scoped="" ref="0x404dc46c"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc548"/>
        <function-ref name="get" scoped="" ref="0x404dc624"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc700"/>
        <function-ref name="set" scoped="" ref="0x404dc7dc"/>
        <function-ref name="clr" scoped="" ref="0x404dc8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404e9d20" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404e9d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9ee0"/>
        <function-ref name="isInput" scoped="" ref="0x404e8010"/>
        <function-ref name="toggle" scoped="" ref="0x404e80ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404e81c8"/>
        <function-ref name="get" scoped="" ref="0x404e82a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8380"/>
        <function-ref name="set" scoped="" ref="0x404e845c"/>
        <function-ref name="clr" scoped="" ref="0x404e8538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404e7930" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404e7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e7af0"/>
        <function-ref name="isInput" scoped="" ref="0x404e7bcc"/>
        <function-ref name="toggle" scoped="" ref="0x404e7ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e7d84"/>
        <function-ref name="get" scoped="" ref="0x404e7e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5010"/>
        <function-ref name="set" scoped="" ref="0x404e50ec"/>
        <function-ref name="clr" scoped="" ref="0x404e51c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404dca14" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404dca14"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dcbd4"/>
        <function-ref name="isInput" scoped="" ref="0x404dccb0"/>
        <function-ref name="toggle" scoped="" ref="0x404dcd8c"/>
        <function-ref name="isOutput" scoped="" ref="0x404dce68"/>
        <function-ref name="get" scoped="" ref="0x404e9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e90ec"/>
        <function-ref name="set" scoped="" ref="0x404e91c8"/>
        <function-ref name="clr" scoped="" ref="0x404e92a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404e8694" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404e8694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8854"/>
        <function-ref name="isInput" scoped="" ref="0x404e8930"/>
        <function-ref name="toggle" scoped="" ref="0x404e8a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8ae8"/>
        <function-ref name="get" scoped="" ref="0x404e8bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8ca0"/>
        <function-ref name="set" scoped="" ref="0x404e8d7c"/>
        <function-ref name="clr" scoped="" ref="0x404e8e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404e5324" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404e5324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e54e4"/>
        <function-ref name="isInput" scoped="" ref="0x404e55c0"/>
        <function-ref name="toggle" scoped="" ref="0x404e569c"/>
        <function-ref name="isOutput" scoped="" ref="0x404e5778"/>
        <function-ref name="get" scoped="" ref="0x404e5854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5930"/>
        <function-ref name="set" scoped="" ref="0x404e5a0c"/>
        <function-ref name="clr" scoped="" ref="0x404e5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412db594" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412db594"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412db754"/>
        <function-ref name="isInput" scoped="" ref="0x412db830"/>
        <function-ref name="toggle" scoped="" ref="0x412db90c"/>
        <function-ref name="isOutput" scoped="" ref="0x412db9e8"/>
        <function-ref name="get" scoped="" ref="0x412dbac4"/>
        <function-ref name="makeOutput" scoped="" ref="0x412dbba0"/>
        <function-ref name="set" scoped="" ref="0x412dbc7c"/>
        <function-ref name="clr" scoped="" ref="0x412dbd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412dae8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412dae8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d906c"/>
        <function-ref name="isInput" scoped="" ref="0x412d9148"/>
        <function-ref name="toggle" scoped="" ref="0x412d9224"/>
        <function-ref name="isOutput" scoped="" ref="0x412d9300"/>
        <function-ref name="get" scoped="" ref="0x412d93dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d94b8"/>
        <function-ref name="set" scoped="" ref="0x412d9594"/>
        <function-ref name="clr" scoped="" ref="0x412d9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d876c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d876c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d892c"/>
        <function-ref name="isInput" scoped="" ref="0x412d8a08"/>
        <function-ref name="toggle" scoped="" ref="0x412d8ae4"/>
        <function-ref name="isOutput" scoped="" ref="0x412d8bc0"/>
        <function-ref name="get" scoped="" ref="0x412d8c9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d8d78"/>
        <function-ref name="set" scoped="" ref="0x412d8e54"/>
        <function-ref name="clr" scoped="" ref="0x412d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d60f4" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d60f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d62b4"/>
        <function-ref name="isInput" scoped="" ref="0x412d6390"/>
        <function-ref name="toggle" scoped="" ref="0x412d646c"/>
        <function-ref name="isOutput" scoped="" ref="0x412d6548"/>
        <function-ref name="get" scoped="" ref="0x412d6624"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d6700"/>
        <function-ref name="set" scoped="" ref="0x412d67dc"/>
        <function-ref name="clr" scoped="" ref="0x412d68b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d599c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d599c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d5b5c"/>
        <function-ref name="isInput" scoped="" ref="0x412d5c38"/>
        <function-ref name="toggle" scoped="" ref="0x412d5d14"/>
        <function-ref name="isOutput" scoped="" ref="0x412d5df0"/>
        <function-ref name="get" scoped="" ref="0x412d5ecc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d4010"/>
        <function-ref name="set" scoped="" ref="0x412d40ec"/>
        <function-ref name="clr" scoped="" ref="0x412d41c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d32bc" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d32bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d347c"/>
        <function-ref name="isInput" scoped="" ref="0x412d3558"/>
        <function-ref name="toggle" scoped="" ref="0x412d3634"/>
        <function-ref name="isOutput" scoped="" ref="0x412d3710"/>
        <function-ref name="get" scoped="" ref="0x412d37ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d38c8"/>
        <function-ref name="set" scoped="" ref="0x412d39a4"/>
        <function-ref name="clr" scoped="" ref="0x412d3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d2b8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d2b8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d2d4c"/>
        <function-ref name="isInput" scoped="" ref="0x412d2e28"/>
        <function-ref name="toggle" scoped="" ref="0x412d2f04"/>
        <function-ref name="isOutput" scoped="" ref="0x41316010"/>
        <function-ref name="get" scoped="" ref="0x413160ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x413161c8"/>
        <function-ref name="set" scoped="" ref="0x413162a4"/>
        <function-ref name="clr" scoped="" ref="0x41316380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41315514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41315514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413156d4"/>
        <function-ref name="isInput" scoped="" ref="0x413157b0"/>
        <function-ref name="toggle" scoped="" ref="0x4131588c"/>
        <function-ref name="isOutput" scoped="" ref="0x41315968"/>
        <function-ref name="get" scoped="" ref="0x41315a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x41315b20"/>
        <function-ref name="set" scoped="" ref="0x41315bfc"/>
        <function-ref name="clr" scoped="" ref="0x41315cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f09a0" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f0b60"/>
        <function-ref name="isInput" scoped="" ref="0x404f0c3c"/>
        <function-ref name="toggle" scoped="" ref="0x404f0d18"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0df4"/>
        <function-ref name="get" scoped="" ref="0x404f0ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ef010"/>
        <function-ref name="set" scoped="" ref="0x404ef0ec"/>
        <function-ref name="clr" scoped="" ref="0x404ef1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fd010" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd1d0"/>
        <function-ref name="isInput" scoped="" ref="0x404fd2ac"/>
        <function-ref name="toggle" scoped="" ref="0x404fd388"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd464"/>
        <function-ref name="get" scoped="" ref="0x404fd540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fd61c"/>
        <function-ref name="set" scoped="" ref="0x404fd6f8"/>
        <function-ref name="clr" scoped="" ref="0x404fd7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fb694" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fb694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb854"/>
        <function-ref name="isInput" scoped="" ref="0x404fb930"/>
        <function-ref name="toggle" scoped="" ref="0x404fba0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404fbae8"/>
        <function-ref name="get" scoped="" ref="0x404fbbc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fbca0"/>
        <function-ref name="set" scoped="" ref="0x404fbd7c"/>
        <function-ref name="clr" scoped="" ref="0x404fbe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f8d30" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f8ef0"/>
        <function-ref name="isInput" scoped="" ref="0x40505010"/>
        <function-ref name="toggle" scoped="" ref="0x405050ec"/>
        <function-ref name="isOutput" scoped="" ref="0x405051c8"/>
        <function-ref name="get" scoped="" ref="0x405052a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40505380"/>
        <function-ref name="set" scoped="" ref="0x4050545c"/>
        <function-ref name="clr" scoped="" ref="0x40505538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4050339c" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4050339c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050355c"/>
        <function-ref name="isInput" scoped="" ref="0x40503638"/>
        <function-ref name="toggle" scoped="" ref="0x40503714"/>
        <function-ref name="isOutput" scoped="" ref="0x405037f0"/>
        <function-ref name="get" scoped="" ref="0x405038cc"/>
        <function-ref name="makeOutput" scoped="" ref="0x405039a8"/>
        <function-ref name="set" scoped="" ref="0x40503a84"/>
        <function-ref name="clr" scoped="" ref="0x40503b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405019ac" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405019ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501b6c"/>
        <function-ref name="isInput" scoped="" ref="0x40501c48"/>
        <function-ref name="toggle" scoped="" ref="0x40501d24"/>
        <function-ref name="isOutput" scoped="" ref="0x40501e00"/>
        <function-ref name="get" scoped="" ref="0x40501edc"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ff010"/>
        <function-ref name="set" scoped="" ref="0x404ff0ec"/>
        <function-ref name="clr" scoped="" ref="0x404ff1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4050b080" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4050b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b240"/>
        <function-ref name="isInput" scoped="" ref="0x4050b31c"/>
        <function-ref name="toggle" scoped="" ref="0x4050b3f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b4d4"/>
        <function-ref name="get" scoped="" ref="0x4050b5b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b68c"/>
        <function-ref name="set" scoped="" ref="0x4050b768"/>
        <function-ref name="clr" scoped="" ref="0x4050b844"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405096c8" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405096c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509888"/>
        <function-ref name="isInput" scoped="" ref="0x40509964"/>
        <function-ref name="toggle" scoped="" ref="0x40509a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40509b1c"/>
        <function-ref name="get" scoped="" ref="0x40509bf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509cd4"/>
        <function-ref name="set" scoped="" ref="0x40509db0"/>
        <function-ref name="clr" scoped="" ref="0x40509e8c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40506d30" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40506d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40506ef0"/>
        <function-ref name="isInput" scoped="" ref="0x40513010"/>
        <function-ref name="toggle" scoped="" ref="0x405130ec"/>
        <function-ref name="isOutput" scoped="" ref="0x405131c8"/>
        <function-ref name="get" scoped="" ref="0x405132a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513380"/>
        <function-ref name="set" scoped="" ref="0x4051345c"/>
        <function-ref name="clr" scoped="" ref="0x40513538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4051139c" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4051139c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051155c"/>
        <function-ref name="isInput" scoped="" ref="0x40511638"/>
        <function-ref name="toggle" scoped="" ref="0x40511714"/>
        <function-ref name="isOutput" scoped="" ref="0x405117f0"/>
        <function-ref name="get" scoped="" ref="0x405118cc"/>
        <function-ref name="makeOutput" scoped="" ref="0x405119a8"/>
        <function-ref name="set" scoped="" ref="0x40511a84"/>
        <function-ref name="clr" scoped="" ref="0x40511b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4050f9ac" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4050f9ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050fb6c"/>
        <function-ref name="isInput" scoped="" ref="0x4050fc48"/>
        <function-ref name="toggle" scoped="" ref="0x4050fd24"/>
        <function-ref name="isOutput" scoped="" ref="0x4050fe00"/>
        <function-ref name="get" scoped="" ref="0x4050fedc"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050e010"/>
        <function-ref name="set" scoped="" ref="0x4050e0ec"/>
        <function-ref name="clr" scoped="" ref="0x4050e1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40519010" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40519010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405191d0"/>
        <function-ref name="isInput" scoped="" ref="0x405192ac"/>
        <function-ref name="toggle" scoped="" ref="0x40519388"/>
        <function-ref name="isOutput" scoped="" ref="0x40519464"/>
        <function-ref name="get" scoped="" ref="0x40519540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051961c"/>
        <function-ref name="set" scoped="" ref="0x405196f8"/>
        <function-ref name="clr" scoped="" ref="0x405197d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40517694" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40517694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517854"/>
        <function-ref name="isInput" scoped="" ref="0x40517930"/>
        <function-ref name="toggle" scoped="" ref="0x40517a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x40517ae8"/>
        <function-ref name="get" scoped="" ref="0x40517bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40517ca0"/>
        <function-ref name="set" scoped="" ref="0x40517d7c"/>
        <function-ref name="clr" scoped="" ref="0x40517e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40515d30" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40515d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40515ef0"/>
        <function-ref name="isInput" scoped="" ref="0x40521010"/>
        <function-ref name="toggle" scoped="" ref="0x405210ec"/>
        <function-ref name="isOutput" scoped="" ref="0x405211c8"/>
        <function-ref name="get" scoped="" ref="0x405212a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40521380"/>
        <function-ref name="set" scoped="" ref="0x4052145c"/>
        <function-ref name="clr" scoped="" ref="0x40521538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40539e90" loc="61:/opt/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40539e90"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4031313c"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4031313c"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4053806c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40538240" loc="62:/opt/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40538240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40538400"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x405384dc"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x405385b8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40538694"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40538770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40543030" loc="60:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40543030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405431f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40464310" loc="57:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40464310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404644d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40464c24" loc="59:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40464c24"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40464de4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40464688" loc="58:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40464688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40464848"/>
        <function-ref name="taskLoop" scoped="" ref="0x40464924"/>
        <function-ref name="runNextTask" scoped="" ref="0x40464a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4032ca44" loc="48:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4032cc04"/>
        <function-ref name="runTask" scoped="" ref="0x4032cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403254f8" loc="47:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403254f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403256b8"/>
        <function-ref name="taskLoop" scoped="" ref="0x40325794"/>
        <function-ref name="runNextTask" scoped="" ref="0x40325870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4038e0fc" loc="56:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4038e0fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4038e2bc"/>
        <function-ref name="runTask" scoped="" ref="0x4038e398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4038ecd8" loc="57:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4038ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4038ee98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4038f860" loc="55:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4038f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038fa20"/>
        <function-ref name="taskLoop" scoped="" ref="0x4038fafc"/>
        <function-ref name="runNextTask" scoped="" ref="0x4038fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403a1288" loc="88:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403a1288"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403a1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403a0010" loc="84:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403a01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403a0c44" loc="85:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403a0c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403a0e04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4045709c" loc="46:/opt/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4045709c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4045725c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40457338"/>
        <function-ref name="led1On" scoped="" ref="0x40457414"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404574f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404575cc"/>
        <function-ref name="get" scoped="" ref="0x404576a8"/>
        <function-ref name="led1Off" scoped="" ref="0x40457784"/>
        <function-ref name="led2Off" scoped="" ref="0x40457af4"/>
        <function-ref name="set" scoped="" ref="0x40457860"/>
        <function-ref name="led0On" scoped="" ref="0x4045793c"/>
        <function-ref name="led2On" scoped="" ref="0x40457a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40555310" loc="50:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40555310"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405554d0"/>
        <function-ref name="isInput" scoped="" ref="0x405555ac"/>
        <function-ref name="toggle" scoped="" ref="0x40555688"/>
        <function-ref name="isOutput" scoped="" ref="0x40555764"/>
        <function-ref name="get" scoped="" ref="0x40555840"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055591c"/>
        <function-ref name="set" scoped="" ref="0x405559f8"/>
        <function-ref name="clr" scoped="" ref="0x40555ad4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40556328" loc="46:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40556328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405564e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40555cb8" loc="51:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40555cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40555e78"/>
        <function-ref name="isInput" scoped="" ref="0x40554010"/>
        <function-ref name="toggle" scoped="" ref="0x405540ec"/>
        <function-ref name="isOutput" scoped="" ref="0x405541c8"/>
        <function-ref name="get" scoped="" ref="0x405542a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40554380"/>
        <function-ref name="set" scoped="" ref="0x4055445c"/>
        <function-ref name="clr" scoped="" ref="0x40554538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40556650" loc="47:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40556650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40556810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405568ec"/>
        <function-ref name="led1On" scoped="" ref="0x405569c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40556aa4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40556b80"/>
        <function-ref name="get" scoped="" ref="0x40556c5c"/>
        <function-ref name="led1Off" scoped="" ref="0x40556d38"/>
        <function-ref name="led2Off" scoped="" ref="0x405550ec"/>
        <function-ref name="set" scoped="" ref="0x40556e14"/>
        <function-ref name="led0On" scoped="" ref="0x40556ef0"/>
        <function-ref name="led2On" scoped="" ref="0x40555010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4055471c" loc="52:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4055471c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405548dc"/>
        <function-ref name="isInput" scoped="" ref="0x405549b8"/>
        <function-ref name="toggle" scoped="" ref="0x40554a94"/>
        <function-ref name="isOutput" scoped="" ref="0x40554b70"/>
        <function-ref name="get" scoped="" ref="0x40554c4c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40554d28"/>
        <function-ref name="set" scoped="" ref="0x40554e04"/>
        <function-ref name="clr" scoped="" ref="0x40554ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40563030" loc="44:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40563030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405631f0"/>
        <function-ref name="isInput" scoped="" ref="0x405632cc"/>
        <function-ref name="toggle" scoped="" ref="0x405633a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40563484"/>
        <function-ref name="get" scoped="" ref="0x40563560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056363c"/>
        <function-ref name="set" scoped="" ref="0x40563718"/>
        <function-ref name="clr" scoped="" ref="0x405637f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x405639f8" loc="45:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405639f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40563bb8"/>
        <function-ref name="isInput" scoped="" ref="0x40563c94"/>
        <function-ref name="toggle" scoped="" ref="0x40563d70"/>
        <function-ref name="isOutput" scoped="" ref="0x40563e4c"/>
        <function-ref name="get" scoped="" ref="0x40563f28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40562018"/>
        <function-ref name="set" scoped="" ref="0x405620f4"/>
        <function-ref name="clr" scoped="" ref="0x405621d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40562d20" loc="47:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40562d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40562ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x405623d4" loc="46:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405623d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40562594"/>
        <function-ref name="isInput" scoped="" ref="0x40562670"/>
        <function-ref name="toggle" scoped="" ref="0x4056274c"/>
        <function-ref name="isOutput" scoped="" ref="0x40562828"/>
        <function-ref name="get" scoped="" ref="0x40562904"/>
        <function-ref name="makeOutput" scoped="" ref="0x405629e0"/>
        <function-ref name="set" scoped="" ref="0x40562abc"/>
        <function-ref name="clr" scoped="" ref="0x40562b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40560ab4" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SenseAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40560ab4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4056a490"/>
        <function-ref name="fired" scoped="" ref="0x4056f7bc"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4056fe7c"/>
        <function-ref name="isOneShot" scoped="" ref="0x4056fc3c"/>
        <function-ref name="getdt" scoped="" ref="0x4056a910"/>
        <function-ref name="gett0" scoped="" ref="0x4056a6d0"/>
        <function-ref name="isRunning" scoped="" ref="0x4056f9fc"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4056f0ac"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4056a190"/>
        <function-ref name="startOneShot" scoped="" ref="0x4056f314"/>
        <function-ref name="stop" scoped="" ref="0x4056f57c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405695ec" loc="49:/opt/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405695ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40577010"/>
        <function-ref name="fired" scoped="" ref="0x405682ec"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405689ac"/>
        <function-ref name="isOneShot" scoped="" ref="0x4056876c"/>
        <function-ref name="getdt" scoped="" ref="0x40577490"/>
        <function-ref name="gett0" scoped="" ref="0x40577250"/>
        <function-ref name="isRunning" scoped="" ref="0x4056852c"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40569bc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40568cac"/>
        <function-ref name="startOneShot" scoped="" ref="0x40569e28"/>
        <function-ref name="stop" scoped="" ref="0x405680ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40573458" loc="46:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40573458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40572e2c"/>
        <function-ref name="fired" scoped="" ref="0x4057216c"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4057282c"/>
        <function-ref name="isOneShot" scoped="" ref="0x405725ec"/>
        <function-ref name="getdt" scoped="" ref="0x405712cc"/>
        <function-ref name="gett0" scoped="" ref="0x4057108c"/>
        <function-ref name="isRunning" scoped="" ref="0x405723ac"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40573a2c"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40572b2c"/>
        <function-ref name="startOneShot" scoped="" ref="0x40573c94"/>
        <function-ref name="stop" scoped="" ref="0x40573efc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4057d304" loc="47:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4057d304"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4057d8f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40577cc8" loc="45:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40577cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40577e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40581be4" loc="29:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40581be4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405852ec"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405857a4"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40585548"/>
        <function-ref name="overflow" scoped="" ref="0x40585a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4057f8e4" loc="27:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4057f8e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4057faa4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4057b010" loc="28:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4057b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4057a3e4"/>
        <function-ref name="fired" scoped="" ref="0x4057bbe0"/>
        <function-ref name="startAt" scoped="" ref="0x4057a0c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4057be3c"/>
        <function-ref name="getAlarm" scoped="" ref="0x4057a640"/>
        <function-ref name="start" scoped="" ref="0x4057b700"/>
        <function-ref name="stop" scoped="" ref="0x4057b984"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x406050b4" loc="61:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406050b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40616474"/>
        <function-ref name="fired" scoped="" ref="0x40605c84"/>
        <function-ref name="startAt" scoped="" ref="0x40616158"/>
        <function-ref name="isRunning" scoped="" ref="0x40605ee0"/>
        <function-ref name="getAlarm" scoped="" ref="0x406166d0"/>
        <function-ref name="start" scoped="" ref="0x406057a4"/>
        <function-ref name="stop" scoped="" ref="0x40605a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4058fc80" loc="60:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4058fc80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4030ef18"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4030ef18"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4058fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406169e4" loc="62:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406169e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406140e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406145a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40614344"/>
        <function-ref name="overflow" scoped="" ref="0x406147fc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x4137dee0" loc="66:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4137dee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4137c0b8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4137c194"/>
        <function-ref name="getControlA" scoped="" ref="0x4137c270"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4137c34c"/>
        <function-ref name="setControlB" scoped="" ref="0x4137c428"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4137c504"/>
        <function-ref name="getControlB" scoped="" ref="0x4137c5e0"/>
        <function-ref name="setControlA" scoped="" ref="0x4137c6bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4138243c" loc="61:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4138243c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41381818"/>
        <function-ref name="fired" scoped="" ref="0x41381044"/>
        <function-ref name="startAt" scoped="" ref="0x413814fc"/>
        <function-ref name="isRunning" scoped="" ref="0x413812a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41381a74"/>
        <function-ref name="start" scoped="" ref="0x41382b2c"/>
        <function-ref name="stop" scoped="" ref="0x41382db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41382030" loc="60:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41382030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413821f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41381d88" loc="62:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41381d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4137f4ac"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4137f964"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4137f708"/>
        <function-ref name="overflow" scoped="" ref="0x4137fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41379234" loc="68:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41379234"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x413793f4"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x413794d0"/>
        <function-ref name="controlABusy" scoped="" ref="0x413795ac"/>
        <function-ref name="controlBBusy" scoped="" ref="0x41379688"/>
        <function-ref name="countBusy" scoped="" ref="0x41379764"/>
        <function-ref name="compareABusy" scoped="" ref="0x41379840"/>
        <function-ref name="getAssr" scoped="" ref="0x4137991c"/>
        <function-ref name="setAssr" scoped="" ref="0x413799f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x4137c8a0" loc="67:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4137c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4137bd0c"/>
        <function-ref name="fired" scoped="" ref="0x4137b39c"/>
        <function-ref name="get" scoped="" ref="0x4137ce90"/>
        <function-ref name="reset" scoped="" ref="0x4137b5f8"/>
        <function-ref name="isOn" scoped="" ref="0x41379010"/>
        <function-ref name="set" scoped="" ref="0x4137b118"/>
        <function-ref name="start" scoped="" ref="0x4137b854"/>
        <function-ref name="stop" scoped="" ref="0x4137bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4137fe9c" loc="65:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4137fe9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4137d7dc"/>
        <function-ref name="test" scoped="" ref="0x4137d324"/>
        <function-ref name="get" scoped="" ref="0x4137e4ac"/>
        <function-ref name="setScale" scoped="" ref="0x4137da38"/>
        <function-ref name="getScale" scoped="" ref="0x4137dcbc"/>
        <function-ref name="reset" scoped="" ref="0x4137ebe8"/>
        <function-ref name="overflow" scoped="" ref="0x4137e98c"/>
        <function-ref name="isOn" scoped="" ref="0x4137d580"/>
        <function-ref name="set" scoped="" ref="0x4137e708"/>
        <function-ref name="start" scoped="" ref="0x4137ee44"/>
        <function-ref name="stop" scoped="" ref="0x4137d0c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405d59a8" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405d59a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405d5b68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405d5c44"/>
        <function-ref name="getControlA" scoped="" ref="0x405d5d20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405d5dfc"/>
        <function-ref name="setControlB" scoped="" ref="0x405d5ed8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405d4010"/>
        <function-ref name="getControlB" scoped="" ref="0x405d40ec"/>
        <function-ref name="setControlA" scoped="" ref="0x405d41c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405d3f28" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405d3f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405d20fc"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405d21d8"/>
        <function-ref name="controlABusy" scoped="" ref="0x405d22b4"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405d2390"/>
        <function-ref name="countBusy" scoped="" ref="0x405d246c"/>
        <function-ref name="compareABusy" scoped="" ref="0x405d2548"/>
        <function-ref name="getAssr" scoped="" ref="0x405d2624"/>
        <function-ref name="setAssr" scoped="" ref="0x405d2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405d44e0" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405d44e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405d3980"/>
        <function-ref name="fired" scoped="" ref="0x405d3010"/>
        <function-ref name="get" scoped="" ref="0x405d4ad0"/>
        <function-ref name="reset" scoped="" ref="0x405d326c"/>
        <function-ref name="isOn" scoped="" ref="0x405d3bdc"/>
        <function-ref name="set" scoped="" ref="0x405d4d2c"/>
        <function-ref name="start" scoped="" ref="0x405d34c8"/>
        <function-ref name="stop" scoped="" ref="0x405d3724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405cb848" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405cb848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405d5188"/>
        <function-ref name="test" scoped="" ref="0x405d7c9c"/>
        <function-ref name="get" scoped="" ref="0x405cbe38"/>
        <function-ref name="setScale" scoped="" ref="0x405d53e4"/>
        <function-ref name="getScale" scoped="" ref="0x405d5668"/>
        <function-ref name="reset" scoped="" ref="0x405d7588"/>
        <function-ref name="overflow" scoped="" ref="0x405d732c"/>
        <function-ref name="isOn" scoped="" ref="0x405d7ef8"/>
        <function-ref name="set" scoped="" ref="0x405d70a8"/>
        <function-ref name="start" scoped="" ref="0x405d77e4"/>
        <function-ref name="stop" scoped="" ref="0x405d7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405dd500" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405dd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405dd6c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405dd79c"/>
        <function-ref name="getControlA" scoped="" ref="0x405dd878"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405dd954"/>
        <function-ref name="setControlB" scoped="" ref="0x405dda30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405ddb0c"/>
        <function-ref name="getControlB" scoped="" ref="0x405ddbe8"/>
        <function-ref name="setControlA" scoped="" ref="0x405ddcc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405db9cc" loc="85:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405db9cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405dbb8c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405dbe10" loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405dbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405d9010"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405d90ec"/>
        <function-ref name="controlABusy" scoped="" ref="0x405d91c8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405d92a4"/>
        <function-ref name="countBusy" scoped="" ref="0x405d9380"/>
        <function-ref name="compareABusy" scoped="" ref="0x405d945c"/>
        <function-ref name="getAssr" scoped="" ref="0x405d9538"/>
        <function-ref name="setAssr" scoped="" ref="0x405d9614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405dc010" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405db4c8"/>
        <function-ref name="fired" scoped="" ref="0x405dcae0"/>
        <function-ref name="get" scoped="" ref="0x405dc600"/>
        <function-ref name="reset" scoped="" ref="0x405dcd3c"/>
        <function-ref name="isOn" scoped="" ref="0x405db724"/>
        <function-ref name="set" scoped="" ref="0x405dc85c"/>
        <function-ref name="start" scoped="" ref="0x405db010"/>
        <function-ref name="stop" scoped="" ref="0x405db26c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405e039c" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405e039c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405decc8"/>
        <function-ref name="test" scoped="" ref="0x405de810"/>
        <function-ref name="get" scoped="" ref="0x405e098c"/>
        <function-ref name="setScale" scoped="" ref="0x405def24"/>
        <function-ref name="getScale" scoped="" ref="0x405dd1c0"/>
        <function-ref name="reset" scoped="" ref="0x405de0fc"/>
        <function-ref name="overflow" scoped="" ref="0x405e0e6c"/>
        <function-ref name="isOn" scoped="" ref="0x405dea6c"/>
        <function-ref name="set" scoped="" ref="0x405e0be8"/>
        <function-ref name="start" scoped="" ref="0x405de358"/>
        <function-ref name="stop" scoped="" ref="0x405de5b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40631ba0" loc="74:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40631ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40631d60"/>
        <function-ref name="runTask" scoped="" ref="0x40631e3c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40620344" loc="49:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40620344"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40631700"/>
        <function-ref name="fired" scoped="" ref="0x40620f14"/>
        <function-ref name="startAt" scoped="" ref="0x406313e4"/>
        <function-ref name="isRunning" scoped="" ref="0x40631188"/>
        <function-ref name="getAlarm" scoped="" ref="0x4063195c"/>
        <function-ref name="start" scoped="" ref="0x40620a34"/>
        <function-ref name="stop" scoped="" ref="0x40620cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406120e8" loc="48:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406120e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40622ac4"/>
        <function-ref name="fired" scoped="" ref="0x40612dcc"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406224c4"/>
        <function-ref name="isOneShot" scoped="" ref="0x40622284"/>
        <function-ref name="getdt" scoped="" ref="0x40620010"/>
        <function-ref name="gett0" scoped="" ref="0x40622d04"/>
        <function-ref name="isRunning" scoped="" ref="0x40622044"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406126bc"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406227c4"/>
        <function-ref name="startOneShot" scoped="" ref="0x40612924"/>
        <function-ref name="stop" scoped="" ref="0x40612b8c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4064ef14" loc="71:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4064ef14"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4064d0f4"/>
        <function-ref name="runTask" scoped="" ref="0x4064d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40651e48" loc="49:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40651e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4064e850"/>
        <function-ref name="fired" scoped="" ref="0x4064fb44"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4064e250"/>
        <function-ref name="isOneShot" scoped="" ref="0x4064e010"/>
        <function-ref name="getdt" scoped="" ref="0x4064ecd0"/>
        <function-ref name="gett0" scoped="" ref="0x4064ea90"/>
        <function-ref name="isRunning" scoped="" ref="0x4064fd84"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4064f434"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4064e550"/>
        <function-ref name="startOneShot" scoped="" ref="0x4064f69c"/>
        <function-ref name="stop" scoped="" ref="0x4064f904"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4062fc50" loc="48:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4062fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406516cc"/>
        <function-ref name="fired" scoped="" ref="0x4062e9a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406510ac"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062ee40"/>
        <function-ref name="getdt" scoped="" ref="0x40651b6c"/>
        <function-ref name="gett0" scoped="" ref="0x4065191c"/>
        <function-ref name="isRunning" scoped="" ref="0x4062ebf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062e260"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406513bc"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062e4d8"/>
        <function-ref name="stop" scoped="" ref="0x4062e750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4065f010" loc="48:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4065f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4065f600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4065f934" loc="49:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4065f934"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4065e044"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4065e4fc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4065e2a0"/>
        <function-ref name="overflow" scoped="" ref="0x4065e758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="X_Axis" ref="0x40668a8c" loc="2:SensorAccC.nc">
      <component-ref qname="SenseAppC.SensorAcc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x40668a8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4066707c"/>
        <function-ref name="readDone" scoped="" ref="0x406672bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41391854" loc="43:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorAcc.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41391854"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41391e28"/>
        <function-ref name="readDone" scoped="" ref="0x4139007c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="senseResult" ref="0x41390380" loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorAcc.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="senseResult" scoped="" ref="0x41390380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41390540"/>
        <function-ref name="runTask" scoped="" ref="0x4139061c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x40673700" loc="2:SensorLightC.nc">
      <component-ref qname="SenseAppC.SensorLight"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x40673700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40673cd4"/>
        <function-ref name="readDone" scoped="" ref="0x40673f14"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4138d808" loc="43:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorLight.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4138d808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4138dddc"/>
        <function-ref name="readDone" scoped="" ref="0x4138c044"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="senseResult" ref="0x4138c348" loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorLight.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="senseResult" scoped="" ref="0x4138c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4138c508"/>
        <function-ref name="runTask" scoped="" ref="0x4138c5e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x4068d2d8" loc="59:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x4068d2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x4068d498"/>
        <function-ref name="setRoot" scoped="" ref="0x4068d574"/>
        <function-ref name="unsetRoot" scoped="" ref="0x4068d650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x406753a8" loc="54:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x406753a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40675568"/>
        <function-ref name="setOrigin" scoped="" ref="0x40675644"/>
        <function-ref name="setType" scoped="" ref="0x40675720"/>
        <function-ref name="getOrigin" scoped="" ref="0x406757fc"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406758d8"/>
        <function-ref name="getType" scoped="" ref="0x406759b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40695d14" loc="64:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40695d14"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x4069a010"/>
        <function-ref name="logEventMsg" scoped="" ref="0x4069a0ec"/>
        <function-ref name="logEventSimple" scoped="" ref="0x4069a1c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x4069a2a4"/>
        <function-ref name="logEventDbg" scoped="" ref="0x4069a380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40676ce4" loc="51:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40676ce4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40676ea4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40685c10" loc="53:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40685c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40685dd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40685eac"/>
        <function-ref name="getPayload" scoped="" ref="0x40675010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406750ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406751c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40679204" loc="50:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40679204"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406793c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4067a150" loc="48:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4067a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067a310"/>
        <function-ref name="getPayload" scoped="" ref="0x4067a3ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4067a4c8"/>
        <function-ref name="cancel" scoped="" ref="0x4067a5a4"/>
        <function-ref name="sendDone" scoped="" ref="0x4067a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x406885bc" loc="57:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x406885bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x4068877c"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40688858"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40688934"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40688a10"/>
        <function-ref name="getEtx" scoped="" ref="0x40688aec"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40688bc8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40688ca4"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40688d80"/>
        <function-ref name="getParent" scoped="" ref="0x40688e5c"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40683010"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x406830ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4067ab14" loc="49:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4067ab14"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4067acd4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40683e54" loc="58:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40683e54"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x4068d050"/>
        <function-ref name="setClientCongested" scoped="" ref="0x4068d12c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x4068e3f4" loc="55:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x4068e3f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4068e5b4"/>
        <function-ref name="option" scoped="" ref="0x4068e690"/>
        <function-ref name="setEtx" scoped="" ref="0x4068e76c"/>
        <function-ref name="setOrigin" scoped="" ref="0x4068e848"/>
        <function-ref name="clearOption" scoped="" ref="0x4068e924"/>
        <function-ref name="getEtx" scoped="" ref="0x4068ea00"/>
        <function-ref name="getOrigin" scoped="" ref="0x4068eadc"/>
        <function-ref name="setType" scoped="" ref="0x4068ebb8"/>
        <function-ref name="setOption" scoped="" ref="0x4068ec94"/>
        <function-ref name="matchPacket" scoped="" ref="0x4068ed70"/>
        <function-ref name="getThl" scoped="" ref="0x4068ee4c"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4068ef28"/>
        <function-ref name="matchInstance" scoped="" ref="0x40674018"/>
        <function-ref name="getType" scoped="" ref="0x40674174"/>
        <function-ref name="setThl" scoped="" ref="0x40674250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4067ca38" loc="47:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4067ca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4067cbf8"/>
        <function-ref name="stop" scoped="" ref="0x4067ccd4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x4069b2f4" loc="63:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x4069b2f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x4069b4b4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x406a1618" loc="92:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x406a1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x406a17d8"/>
        <function-ref name="setRoot" scoped="" ref="0x406a18b4"/>
        <function-ref name="unsetRoot" scoped="" ref="0x406a1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x406a42cc" loc="86:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x406a42cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x406a448c"/>
        <function-ref name="setOrigin" scoped="" ref="0x406a4568"/>
        <function-ref name="setType" scoped="" ref="0x406a4644"/>
        <function-ref name="getOrigin" scoped="" ref="0x406a4720"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406a47fc"/>
        <function-ref name="getType" scoped="" ref="0x406a48d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x4069d7f4" loc="90:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x4069d7f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x4069d9b4"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x4069da90"/>
        <function-ref name="txNoAck" scoped="" ref="0x4069db6c"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x4069dc48"/>
        <function-ref name="evicted" scoped="" ref="0x4069dd24"/>
        <function-ref name="clearDLQ" scoped="" ref="0x4069de00"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x4069dedc"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x406a1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x406a02a8" loc="97:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x406a02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x406a0468"/>
        <function-ref name="logEventMsg" scoped="" ref="0x406a0544"/>
        <function-ref name="logEventSimple" scoped="" ref="0x406a0620"/>
        <function-ref name="logEventRoute" scoped="" ref="0x406a06fc"/>
        <function-ref name="logEventDbg" scoped="" ref="0x406a07d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x4069286c" loc="83:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x4069286c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40692a2c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40692ba8" loc="85:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40692ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40692d68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40692e44"/>
        <function-ref name="getPayload" scoped="" ref="0x40692f20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a4010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406a40ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40692204" loc="82:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40692204"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406923c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x406931b0" loc="80:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x406931b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40693370"/>
        <function-ref name="getPayload" scoped="" ref="0x4069344c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40693528"/>
        <function-ref name="cancel" scoped="" ref="0x40693604"/>
        <function-ref name="sendDone" scoped="" ref="0x406936e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x406a3aac" loc="89:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x406a3aac"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x406a3c6c"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x406a3d48"/>
        <function-ref name="numNeighbors" scoped="" ref="0x406a3e24"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x406a3f00"/>
        <function-ref name="getEtx" scoped="" ref="0x406a2010"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x406a20ec"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x406a21c8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x406a22a4"/>
        <function-ref name="getParent" scoped="" ref="0x406a2380"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x406a245c"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x406a2538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40693b74" loc="81:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40693b74"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40693d34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x406a11d0" loc="91:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x406a11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x406a1390"/>
        <function-ref name="setClientCongested" scoped="" ref="0x406a146c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x406a4a70" loc="87:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x406a4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x406a4c30"/>
        <function-ref name="option" scoped="" ref="0x406a4d0c"/>
        <function-ref name="setEtx" scoped="" ref="0x406a4de8"/>
        <function-ref name="setOrigin" scoped="" ref="0x406a4ec4"/>
        <function-ref name="clearOption" scoped="" ref="0x406a3010"/>
        <function-ref name="getEtx" scoped="" ref="0x406a30ec"/>
        <function-ref name="getOrigin" scoped="" ref="0x406a31c8"/>
        <function-ref name="setType" scoped="" ref="0x406a32a4"/>
        <function-ref name="setOption" scoped="" ref="0x406a3380"/>
        <function-ref name="matchPacket" scoped="" ref="0x406a345c"/>
        <function-ref name="getThl" scoped="" ref="0x406a3538"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406a3614"/>
        <function-ref name="matchInstance" scoped="" ref="0x406a36f0"/>
        <function-ref name="getType" scoped="" ref="0x406a384c"/>
        <function-ref name="setThl" scoped="" ref="0x406a3928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4069aa9c" loc="79:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4069aa9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4069ac5c"/>
        <function-ref name="stop" scoped="" ref="0x4069ad38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x406a1e70" loc="96:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x406a1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x406a00d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406ac010" loc="41:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406ac1d0"/>
        <function-ref name="stopDone" scoped="" ref="0x406ac2ac"/>
        <function-ref name="start" scoped="" ref="0x406ac388"/>
        <function-ref name="stop" scoped="" ref="0x406ac464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406aa0fc" loc="46:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406aa0fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406aa2bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406aa438" loc="48:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406aa438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406aa5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406aa6d4"/>
        <function-ref name="getPayload" scoped="" ref="0x406aa7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406aa88c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406aa968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406ac8a0" loc="43:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406ac8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406aca60"/>
        <function-ref name="getPayload" scoped="" ref="0x406acb3c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406acc18"/>
        <function-ref name="cancel" scoped="" ref="0x406accf4"/>
        <function-ref name="sendDone" scoped="" ref="0x406acdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406ab884" loc="45:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406ab884"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406aba44"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406bca10" loc="52:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406bca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406bcbd0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406bccac"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406bcd88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406bce64"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406ab22c" loc="44:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406ab22c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ab3ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406c1ef0" loc="51:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c1ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406a70d4"/>
        <function-ref name="noAck" scoped="" ref="0x406a71b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x406a728c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406cb0ec" loc="53:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406cb0ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406cb2ac"/>
        <function-ref name="setRetries" scoped="" ref="0x406cb388"/>
        <function-ref name="getRetries" scoped="" ref="0x406cb464"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x406cb540"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406cb61c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406b3d80" loc="49:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406b3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406a9010"/>
        <function-ref name="source" scoped="" ref="0x406a90ec"/>
        <function-ref name="address" scoped="" ref="0x406a91c8"/>
        <function-ref name="destination" scoped="" ref="0x406a92a4"/>
        <function-ref name="setSource" scoped="" ref="0x406a9380"/>
        <function-ref name="setDestination" scoped="" ref="0x406a945c"/>
        <function-ref name="type" scoped="" ref="0x406a9538"/>
        <function-ref name="setType" scoped="" ref="0x406a9614"/>
        <function-ref name="isForMe" scoped="" ref="0x406a96f0"/>
        <function-ref name="setGroup" scoped="" ref="0x406a97cc"/>
        <function-ref name="localGroup" scoped="" ref="0x406a98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406cca50" loc="54:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406cca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406ccc10"/>
        <function-ref name="setChannel" scoped="" ref="0x406cccec"/>
        <function-ref name="getChannel" scoped="" ref="0x406ccdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x406bd208" loc="56:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x406bd208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406bdc84"/>
        <function-ref name="clear" scoped="" ref="0x406c9044"/>
        <function-ref name="isValid" scoped="" ref="0x406bd8f8"/>
        <function-ref name="set" scoped="" ref="0x406c93d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406c9ad4" loc="57:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406c9ad4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406c6678"/>
        <function-ref name="clear" scoped="" ref="0x406c6a04"/>
        <function-ref name="isValid" scoped="" ref="0x406c62ec"/>
        <function-ref name="set" scoped="" ref="0x406c6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406d77c4" loc="45:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406d77c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406d7984"/>
        <function-ref name="stopDone" scoped="" ref="0x406d7a60"/>
        <function-ref name="start" scoped="" ref="0x406d7b3c"/>
        <function-ref name="stop" scoped="" ref="0x406d7c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x406de9f8" loc="66:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x406de9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406dd550"/>
        <function-ref name="get" scoped="" ref="0x406dd2b0"/>
        <function-ref name="isSet" scoped="" ref="0x406dd010"/>
        <function-ref name="set" scoped="" ref="0x406dd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406d8250" loc="71:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406d8250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406d8ccc"/>
        <function-ref name="clear" scoped="" ref="0x406ec07c"/>
        <function-ref name="isValid" scoped="" ref="0x406d8940"/>
        <function-ref name="set" scoped="" ref="0x406ec408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406d3734" loc="50:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406d3734"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406d38f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406d282c" loc="56:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406d282c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406d29ec"/>
        <function-ref name="payloadLength" scoped="" ref="0x406d2ac8"/>
        <function-ref name="getPayload" scoped="" ref="0x406d2ba4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406d2c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406d2d5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406d40fc" loc="47:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406d40fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406d42bc"/>
        <function-ref name="getPayload" scoped="" ref="0x406d4398"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406d4474"/>
        <function-ref name="cancel" scoped="" ref="0x406d4550"/>
        <function-ref name="sendDone" scoped="" ref="0x406d462c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406d30fc" loc="49:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406d30fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d32bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x406ce6c4" loc="65:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x406ce6c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406de2b0"/>
        <function-ref name="get" scoped="" ref="0x406de010"/>
        <function-ref name="isSet" scoped="" ref="0x406cecb4"/>
        <function-ref name="set" scoped="" ref="0x406de550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406d010c" loc="60:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406d010c"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406d02cc"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406d03a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406d0484"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406d0560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406d4a70" loc="48:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406d4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d4c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x406db970" loc="70:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406db970"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406da408"/>
        <function-ref name="clear" scoped="" ref="0x406da794"/>
        <function-ref name="isValid" scoped="" ref="0x406da07c"/>
        <function-ref name="set" scoped="" ref="0x406dab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406d9e38" loc="69:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406d9e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406db444"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x406df3c8" loc="64:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x406df3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406dfef8"/>
        <function-ref name="get" scoped="" ref="0x406dfc58"/>
        <function-ref name="isSet" scoped="" ref="0x406df9b8"/>
        <function-ref name="set" scoped="" ref="0x406ce1c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406d1b88" loc="59:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d1b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406d1d48"/>
        <function-ref name="noAck" scoped="" ref="0x406d1e24"/>
        <function-ref name="wasAcked" scoped="" ref="0x406d1f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406d3df8" loc="53:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406d3df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406d0704" loc="61:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406d0704"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406d08c4"/>
        <function-ref name="setRetries" scoped="" ref="0x406d09a0"/>
        <function-ref name="getRetries" scoped="" ref="0x406d0a7c"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x406d0b58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406d0c34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406d2eec" loc="57:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406d2eec"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406d10d4"/>
        <function-ref name="source" scoped="" ref="0x406d11b0"/>
        <function-ref name="address" scoped="" ref="0x406d128c"/>
        <function-ref name="destination" scoped="" ref="0x406d1368"/>
        <function-ref name="setSource" scoped="" ref="0x406d1444"/>
        <function-ref name="setDestination" scoped="" ref="0x406d1520"/>
        <function-ref name="type" scoped="" ref="0x406d15fc"/>
        <function-ref name="setType" scoped="" ref="0x406d16d8"/>
        <function-ref name="isForMe" scoped="" ref="0x406d17b4"/>
        <function-ref name="setGroup" scoped="" ref="0x406d1890"/>
        <function-ref name="localGroup" scoped="" ref="0x406d196c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406d0dec" loc="62:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406d0dec"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406cf050"/>
        <function-ref name="setChannel" scoped="" ref="0x406cf12c"/>
        <function-ref name="getChannel" scoped="" ref="0x406cf208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x406d9968" loc="67:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406d9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x406d9b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406d24f0" loc="54:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406d24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d26b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406ecd64" loc="41:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406ecd64"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406ecf24"/>
        <function-ref name="stopDone" scoped="" ref="0x406e9018"/>
        <function-ref name="start" scoped="" ref="0x406e90f4"/>
        <function-ref name="stop" scoped="" ref="0x406e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x406fe7f0" loc="80:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x406fe7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406fd338"/>
        <function-ref name="get" scoped="" ref="0x406fd098"/>
        <function-ref name="isSet" scoped="" ref="0x406fede0"/>
        <function-ref name="set" scoped="" ref="0x406fd5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x406f5eb0" loc="60:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x406f5eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406e30b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x406f15ec" loc="62:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x406f15ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406f182c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406f1908"/>
        <function-ref name="request" scoped="" ref="0x406f19e4"/>
        <function-ref name="granted" scoped="" ref="0x406f1ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x406f1b9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406e8ca0" loc="47:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406e8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406e8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406e960c" loc="44:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406e960c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e97cc"/>
        <function-ref name="getPayload" scoped="" ref="0x406e98a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e9984"/>
        <function-ref name="cancel" scoped="" ref="0x406e9a60"/>
        <function-ref name="sendDone" scoped="" ref="0x406e9b3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406e8668" loc="46:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406e8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e8828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40702584" loc="64:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40702584"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40702744"/>
        <function-ref name="address" scoped="" ref="0x40702820"/>
        <function-ref name="destination" scoped="" ref="0x407028fc"/>
        <function-ref name="setSource" scoped="" ref="0x407029d8"/>
        <function-ref name="setDestination" scoped="" ref="0x40702ab4"/>
        <function-ref name="pan" scoped="" ref="0x40702b90"/>
        <function-ref name="setPan" scoped="" ref="0x40702c6c"/>
        <function-ref name="isForMe" scoped="" ref="0x40702d48"/>
        <function-ref name="localPan" scoped="" ref="0x40702e24"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x406f8118" loc="65:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x406f8118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406f82d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406f83b4"/>
        <function-ref name="getPayload" scoped="" ref="0x406f8490"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f856c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406f8648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x406ff560" loc="79:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x406ff560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406fe0a8"/>
        <function-ref name="get" scoped="" ref="0x406ffdf0"/>
        <function-ref name="isSet" scoped="" ref="0x406ffb50"/>
        <function-ref name="set" scoped="" ref="0x406fe348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406f8dc4" loc="69:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406f8dc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406f4010"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406f40ec"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406f41c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406f42a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x406e5b24" loc="54:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406e5b24"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e5ce4"/>
        <function-ref name="payloadLength" scoped="" ref="0x406e5dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x406e5e9c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e4010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406e40ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406e8010" loc="45:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x406fb970" loc="84:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406fb970"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406fa578"/>
        <function-ref name="clear" scoped="" ref="0x406fa904"/>
        <function-ref name="isValid" scoped="" ref="0x406fa1ec"/>
        <function-ref name="set" scoped="" ref="0x406fac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406fde40" loc="83:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406fde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fb444"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4070126c" loc="78:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4070126c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40701d9c"/>
        <function-ref name="get" scoped="" ref="0x40701afc"/>
        <function-ref name="isSet" scoped="" ref="0x4070185c"/>
        <function-ref name="set" scoped="" ref="0x406ff060"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406f8864" loc="68:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f8864"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406f8a24"/>
        <function-ref name="noAck" scoped="" ref="0x406f8b00"/>
        <function-ref name="wasAcked" scoped="" ref="0x406f8bdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406f531c" loc="58:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406f531c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f54dc"/>
        <function-ref name="getPayload" scoped="" ref="0x406f55b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f5694"/>
        <function-ref name="cancel" scoped="" ref="0x406f5770"/>
        <function-ref name="sendDone" scoped="" ref="0x406f584c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406e7380" loc="50:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406e7380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e7540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406f4448" loc="70:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406f4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406f4608"/>
        <function-ref name="setRetries" scoped="" ref="0x406f46e4"/>
        <function-ref name="getRetries" scoped="" ref="0x406f47c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x406f489c"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406f4978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406f4b30" loc="76:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406f4b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406f4cf0"/>
        <function-ref name="setChannel" scoped="" ref="0x406f4dcc"/>
        <function-ref name="getChannel" scoped="" ref="0x406f4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406e7d70" loc="53:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406e7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406e5010"/>
        <function-ref name="source" scoped="" ref="0x406e50ec"/>
        <function-ref name="address" scoped="" ref="0x406e51c8"/>
        <function-ref name="destination" scoped="" ref="0x406e52a4"/>
        <function-ref name="setSource" scoped="" ref="0x406e5380"/>
        <function-ref name="setDestination" scoped="" ref="0x406e545c"/>
        <function-ref name="type" scoped="" ref="0x406e5538"/>
        <function-ref name="setType" scoped="" ref="0x406e5614"/>
        <function-ref name="isForMe" scoped="" ref="0x406e56f0"/>
        <function-ref name="setGroup" scoped="" ref="0x406e57cc"/>
        <function-ref name="localGroup" scoped="" ref="0x406e58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4070e3b8" loc="85:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4070e3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4070ee34"/>
        <function-ref name="clear" scoped="" ref="0x4070d1e0"/>
        <function-ref name="isValid" scoped="" ref="0x4070eaa8"/>
        <function-ref name="set" scoped="" ref="0x4070d56c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406f5a80" loc="59:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406f5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406f5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x406fd970" loc="81:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406fd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x406fdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406e7a20" loc="51:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406e7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e7be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x4071180c" loc="51:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x4071180c"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x407119cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x40712344" loc="47:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40712344"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x40712504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x4071e8b4" loc="50:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4071e8b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4071ea74"/>
        <function-ref name="checkFrame" scoped="" ref="0x4071eb50"/>
        <function-ref name="source" scoped="" ref="0x4071ec2c"/>
        <function-ref name="destination" scoped="" ref="0x4071ed08"/>
        <function-ref name="setSource" scoped="" ref="0x4071ede4"/>
        <function-ref name="setDestination" scoped="" ref="0x4071eec0"/>
        <function-ref name="setGroup" scoped="" ref="0x40711010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40723bd8" loc="49:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40723bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40723d98"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40723e74"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40716010"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x407160ec"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x407161c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40735110" loc="61:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40735110"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407352d0"/>
        <function-ref name="wait" scoped="" ref="0x407353ac"/>
        <function-ref name="cancel" scoped="" ref="0x40735488"/>
        <function-ref name="isFree" scoped="" ref="0x40735564"/>
        <function-ref name="getNow" scoped="" ref="0x40735640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x4073117c" loc="62:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x4073117c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4073133c"/>
        <function-ref name="payloadLength" scoped="" ref="0x40731418"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407314f4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407315d0"/>
        <function-ref name="headerLength" scoped="" ref="0x407316ac"/>
        <function-ref name="metadataLength" scoped="" ref="0x40731788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40731b00" loc="64:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40731b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40738678"/>
        <function-ref name="clear" scoped="" ref="0x40738a04"/>
        <function-ref name="isValid" scoped="" ref="0x407382ec"/>
        <function-ref name="set" scoped="" ref="0x40738d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x40709010" loc="43:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x40709010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407091d0"/>
        <function-ref name="headerLength" scoped="" ref="0x407092ac"/>
        <function-ref name="metadataLength" scoped="" ref="0x40709388"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40709464"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40709540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40713698" loc="46:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40713698"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40713858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40708040" loc="44:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40708040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40708200"/>
        <function-ref name="createAckPacket" scoped="" ref="0x407082dc"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407083b8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40708494"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40708570"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4070864c"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40708728"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40708804"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40739c24" loc="60:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40739c24"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40739de4"/>
        <function-ref name="getDSN" scoped="" ref="0x40739ec0"/>
        <function-ref name="setFCF" scoped="" ref="0x4071d010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4071d0ec"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4071d1c8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4071d2a4"/>
        <function-ref name="setDSN" scoped="" ref="0x4071d380"/>
        <function-ref name="createAckReply" scoped="" ref="0x4071d45c"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4071d538"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4071d614"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4071d6f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4071d7cc"/>
        <function-ref name="localAddr" scoped="" ref="0x4071d8a8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4071da04"/>
        <function-ref name="localPan" scoped="" ref="0x4071dae0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4071dbbc"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4071dc98"/>
        <function-ref name="setFramePending" scoped="" ref="0x4071dd74"/>
        <function-ref name="setDestPan" scoped="" ref="0x4071de50"/>
        <function-ref name="isForMe" scoped="" ref="0x4071c010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4071c0ec"/>
        <function-ref name="getFCF" scoped="" ref="0x4071c1c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4071c2a4"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4071c380"/>
        <function-ref name="getFramePending" scoped="" ref="0x4071c45c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x407146d4" loc="45:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x407146d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40714894"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40714970"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40714a4c"/>
        <function-ref name="getSender" scoped="" ref="0x40714b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x4070f2e8" loc="48:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4070f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4070f4a8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4070f584"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4070f660"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4070f73c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4076f010" loc="41:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4076f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4076f1e0"/>
        <function-ref name="wait" scoped="" ref="0x4076f2bc"/>
        <function-ref name="cancel" scoped="" ref="0x4076f398"/>
        <function-ref name="isFree" scoped="" ref="0x4076f474"/>
        <function-ref name="getNow" scoped="" ref="0x4076f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4076f888" loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4076f888"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4031313c"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4031313c"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403da39c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40788cc4"/>
        <function-ref name="fired" scoped="" ref="0x407884f0"/>
        <function-ref name="startAt" scoped="" ref="0x407889a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4078874c"/>
        <function-ref name="getAlarm" scoped="" ref="0x40788f20"/>
        <function-ref name="start" scoped="" ref="0x40788010"/>
        <function-ref name="stop" scoped="" ref="0x40788294"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x413b8674" loc="43:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x413b8674"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x413b8844"/>
        <function-ref name="wait" scoped="" ref="0x413b8920"/>
        <function-ref name="cancel" scoped="" ref="0x413b89fc"/>
        <function-ref name="isFree" scoped="" ref="0x413b8ad8"/>
        <function-ref name="getNow" scoped="" ref="0x413b8bb4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x413b8e30" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413b8e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403da39c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413b5238"/>
        <function-ref name="fired" scoped="" ref="0x413b6a24"/>
        <function-ref name="startAt" scoped="" ref="0x413b6edc"/>
        <function-ref name="isRunning" scoped="" ref="0x413b6c80"/>
        <function-ref name="getAlarm" scoped="" ref="0x413b5494"/>
        <function-ref name="start" scoped="" ref="0x413b6544"/>
        <function-ref name="stop" scoped="" ref="0x413b67c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x413b5698" loc="49:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x413b5698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x413b5858"/>
        <function-ref name="suspend" scoped="" ref="0x413b5934"/>
        <function-ref name="resume" scoped="" ref="0x413b5a10"/>
        <function-ref name="run" scoped="" ref="0x413b5aec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40789d98" loc="40:/opt/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40789d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40786010"/>
        <function-ref name="suspend" scoped="" ref="0x407860ec"/>
        <function-ref name="resume" scoped="" ref="0x407861c8"/>
        <function-ref name="run" scoped="" ref="0x407862a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407e1b84" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407e1b84"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e1d44"/>
        <function-ref name="cancel" scoped="" ref="0x407e1e20"/>
        <function-ref name="sendDone" scoped="" ref="0x407e1efc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407e0090" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407e0090"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e0250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x407e2934" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x407e2934"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x407e2b04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407e3304" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407e3304"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e34c4"/>
        <function-ref name="payloadLength" scoped="" ref="0x407e35a0"/>
        <function-ref name="getPayload" scoped="" ref="0x407e367c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e3758"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407e3834"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407e3a00" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407e3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e3bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x407e3cac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e3d88"/>
        <function-ref name="cancel" scoped="" ref="0x407e3e64"/>
        <function-ref name="sendDone" scoped="" ref="0x407e2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x407e2598" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x407e2598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e2768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407e141c" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407e141c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e15dc"/>
        <function-ref name="payloadLength" scoped="" ref="0x407e16b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e1794"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407e1870"/>
        <function-ref name="headerLength" scoped="" ref="0x407e194c"/>
        <function-ref name="metadataLength" scoped="" ref="0x407e1a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x407e03ac" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x407e03ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407e056c"/>
        <function-ref name="checkFrame" scoped="" ref="0x407e0648"/>
        <function-ref name="source" scoped="" ref="0x407e0724"/>
        <function-ref name="destination" scoped="" ref="0x407e0800"/>
        <function-ref name="setSource" scoped="" ref="0x407e08dc"/>
        <function-ref name="setDestination" scoped="" ref="0x407e09b8"/>
        <function-ref name="setGroup" scoped="" ref="0x407e0a94"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407e21dc" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407e21dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e23ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x407e2cf0" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x407e2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407e472c" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407e472c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407e48ec"/>
        <function-ref name="source" scoped="" ref="0x407e49c8"/>
        <function-ref name="address" scoped="" ref="0x407e4aa4"/>
        <function-ref name="destination" scoped="" ref="0x407e4b80"/>
        <function-ref name="setSource" scoped="" ref="0x407e4c5c"/>
        <function-ref name="setDestination" scoped="" ref="0x407e4d38"/>
        <function-ref name="type" scoped="" ref="0x407e4e14"/>
        <function-ref name="setType" scoped="" ref="0x407e4ef0"/>
        <function-ref name="isForMe" scoped="" ref="0x407e3010"/>
        <function-ref name="setGroup" scoped="" ref="0x407e30ec"/>
        <function-ref name="localGroup" scoped="" ref="0x407e31c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x407e10c0" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x407e10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e1290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x413f9ccc" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x413f9ccc"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413f9e8c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x413f97f8" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x413f97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413f99b8"/>
        <function-ref name="cancel" scoped="" ref="0x413f9a94"/>
        <function-ref name="sendDone" scoped="" ref="0x413f9b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x413fa598" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x413fa598"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x413fa768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x413fb010" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x413fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413fb1d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x413fb2ac"/>
        <function-ref name="getPayload" scoped="" ref="0x413fb388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fb464"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413fb540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413fb70c" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413fb70c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413fb8dc"/>
        <function-ref name="getPayload" scoped="" ref="0x413fb9b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fba94"/>
        <function-ref name="cancel" scoped="" ref="0x413fbb70"/>
        <function-ref name="sendDone" scoped="" ref="0x413fbc4c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x413fa1fc" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x413fa1fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413fa3cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x413aebd0" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x413aebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413aed90"/>
        <function-ref name="payloadLength" scoped="" ref="0x413aee6c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fc010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413fc0ec"/>
        <function-ref name="headerLength" scoped="" ref="0x413fc1c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x413fc2a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x413f7010" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x413f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413f7250"/>
        <function-ref name="checkFrame" scoped="" ref="0x413f732c"/>
        <function-ref name="source" scoped="" ref="0x413f7408"/>
        <function-ref name="destination" scoped="" ref="0x413f74e4"/>
        <function-ref name="setSource" scoped="" ref="0x413f75c0"/>
        <function-ref name="setDestination" scoped="" ref="0x413f769c"/>
        <function-ref name="setGroup" scoped="" ref="0x413f7778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x413f78b4" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x413f78b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x413f7a74"/>
        <function-ref name="changed" scoped="" ref="0x413f7b50"/>
        <function-ref name="amGroup" scoped="" ref="0x413f7c2c"/>
        <function-ref name="setAddress" scoped="" ref="0x413f7d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x413f9090" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x413f9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413f9250"/>
        <function-ref name="payloadLength" scoped="" ref="0x413f932c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413f9408"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413f94e4"/>
        <function-ref name="headerLength" scoped="" ref="0x413f95c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x413f969c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x413fbe18" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x413fbe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x413fa954" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x413fa954"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413fab24"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413fc3e0" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413fc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413fc5a0"/>
        <function-ref name="source" scoped="" ref="0x413fc67c"/>
        <function-ref name="address" scoped="" ref="0x413fc758"/>
        <function-ref name="destination" scoped="" ref="0x413fc834"/>
        <function-ref name="setSource" scoped="" ref="0x413fc910"/>
        <function-ref name="setDestination" scoped="" ref="0x413fc9ec"/>
        <function-ref name="type" scoped="" ref="0x413fcac8"/>
        <function-ref name="setType" scoped="" ref="0x413fcba4"/>
        <function-ref name="isForMe" scoped="" ref="0x413fcc80"/>
        <function-ref name="setGroup" scoped="" ref="0x413fcd5c"/>
        <function-ref name="localGroup" scoped="" ref="0x413fce38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x413fad10" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x413fad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413faee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x407d5524" loc="54:/opt/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407d5524"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x407d56e4"/>
        <function-ref name="changed" scoped="" ref="0x407d57c0"/>
        <function-ref name="amGroup" scoped="" ref="0x407d589c"/>
        <function-ref name="setAddress" scoped="" ref="0x407d5978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407f5ed4" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407f5ed4"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407f40b8"/>
        <function-ref name="cancel" scoped="" ref="0x407f4194"/>
        <function-ref name="sendDone" scoped="" ref="0x407f4270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x407f43ac" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407f43ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407f456c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407f4648"/>
        <function-ref name="request" scoped="" ref="0x407f4724"/>
        <function-ref name="granted" scoped="" ref="0x407f4800"/>
        <function-ref name="isOwner" scoped="" ref="0x407f48dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x407f59d0" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x407f59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407f5b90"/>
        <function-ref name="cancel" scoped="" ref="0x407f5c6c"/>
        <function-ref name="sendDone" scoped="" ref="0x407f5d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40837080" loc="86:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40837080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40837250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4083732c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x408378f0" loc="89:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x408378f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40837ac0"/>
        <function-ref name="configure" scoped="" ref="0x40837b9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40804960" loc="85:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40804960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40804b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40804c0c"/>
        <function-ref name="request" scoped="" ref="0x40804ce8"/>
        <function-ref name="granted" scoped="" ref="0x40804dc4"/>
        <function-ref name="isOwner" scoped="" ref="0x40804ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40837468" loc="87:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40837468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40837628"/>
        <function-ref name="userId" scoped="" ref="0x40837704"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414179e0" loc="44:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414179e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41417ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41417cfc" loc="45:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41417cfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41417ebc"/>
        <function-ref name="isEmpty" scoped="" ref="0x41415010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414150ec"/>
        <function-ref name="dequeue" scoped="" ref="0x414151c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41414470" loc="52:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41414470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41414640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4141471c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41414cf0" loc="56:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41414cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41414ec0"/>
        <function-ref name="configure" scoped="" ref="0x41413010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4141316c" loc="57:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4141316c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4141332c"/>
        <function-ref name="isEmpty" scoped="" ref="0x41413408"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414134e4"/>
        <function-ref name="dequeue" scoped="" ref="0x414135c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41415c88" loc="51:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41415c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41415e58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41414010"/>
        <function-ref name="request" scoped="" ref="0x414140ec"/>
        <function-ref name="granted" scoped="" ref="0x414141c8"/>
        <function-ref name="isOwner" scoped="" ref="0x414142a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41414858" loc="53:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41414858"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41414a18"/>
        <function-ref name="userId" scoped="" ref="0x41414af4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4141373c" loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4141373c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414138fc"/>
        <function-ref name="runTask" scoped="" ref="0x414139d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4084dedc" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4084dedc"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4084c0b8"/>
        <function-ref name="cancel" scoped="" ref="0x4084c194"/>
        <function-ref name="sendDone" scoped="" ref="0x4084c270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4084c3cc" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4084c3cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4084c58c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40834998" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40834998"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40834b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4083596c" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4083596c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40835b2c"/>
        <function-ref name="payloadLength" scoped="" ref="0x40835c08"/>
        <function-ref name="getPayload" scoped="" ref="0x40835ce4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40835dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40835e9c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x4084d774" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4084d774"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4084d934"/>
        <function-ref name="payloadLength" scoped="" ref="0x4084da10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4084daec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4084dbc8"/>
        <function-ref name="headerLength" scoped="" ref="0x4084dca4"/>
        <function-ref name="metadataLength" scoped="" ref="0x4084dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40834cc4" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40834cc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40834e84"/>
        <function-ref name="getDSN" scoped="" ref="0x4084e010"/>
        <function-ref name="setFCF" scoped="" ref="0x4084e0ec"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4084e1c8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4084e2a4"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4084e380"/>
        <function-ref name="setDSN" scoped="" ref="0x4084e45c"/>
        <function-ref name="createAckReply" scoped="" ref="0x4084e538"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4084e614"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4084e6f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4084e7cc"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4084e8a8"/>
        <function-ref name="localAddr" scoped="" ref="0x4084e984"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4084eae0"/>
        <function-ref name="localPan" scoped="" ref="0x4084ebbc"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4084ec98"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4084ed74"/>
        <function-ref name="setFramePending" scoped="" ref="0x4084ee50"/>
        <function-ref name="setDestPan" scoped="" ref="0x4084d010"/>
        <function-ref name="isForMe" scoped="" ref="0x4084d0ec"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4084d1c8"/>
        <function-ref name="getFCF" scoped="" ref="0x4084d2a4"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4084d380"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4084d45c"/>
        <function-ref name="getFramePending" scoped="" ref="0x4084d538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40834010" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40834010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408341d0"/>
        <function-ref name="getPayload" scoped="" ref="0x408342ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40834388"/>
        <function-ref name="cancel" scoped="" ref="0x40834464"/>
        <function-ref name="sendDone" scoped="" ref="0x40834540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4083469c" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4083469c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083485c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4087d50c" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4087d50c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4087d6cc"/>
        <function-ref name="cancel" scoped="" ref="0x4087d7a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4087d884"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4087d9e0" loc="70:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4087d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4087dba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40848cfc" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40848cfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40848ebc"/>
        <function-ref name="payloadLength" scoped="" ref="0x40862010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408620ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408621c8"/>
        <function-ref name="headerLength" scoped="" ref="0x408622a4"/>
        <function-ref name="metadataLength" scoped="" ref="0x40862380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x408629b0" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x408629b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40862b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4087dcfc" loc="71:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4087dcfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4087debc"/>
        <function-ref name="payloadLength" scoped="" ref="0x4087c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4087c0ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4087c1c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4087c2a4"/>
        <function-ref name="metadataLength" scoped="" ref="0x4087c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x408624dc" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x408624dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4086269c"/>
        <function-ref name="cancel" scoped="" ref="0x40862778"/>
        <function-ref name="sendDone" scoped="" ref="0x40862854"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4084850c" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4084850c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408486cc"/>
        <function-ref name="cancel" scoped="" ref="0x408487a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40848884"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x408489e0" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x408489e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40848ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40862ccc" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40862ccc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40862e8c"/>
        <function-ref name="payloadLength" scoped="" ref="0x4087d010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4087d0ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4087d1c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4087d2a4"/>
        <function-ref name="metadataLength" scoped="" ref="0x4087d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x408d14e0" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x408d14e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x408d16a0"/>
        <function-ref name="address" scoped="" ref="0x408d177c"/>
        <function-ref name="destination" scoped="" ref="0x408d1858"/>
        <function-ref name="setSource" scoped="" ref="0x408d1934"/>
        <function-ref name="setDestination" scoped="" ref="0x408d1a10"/>
        <function-ref name="pan" scoped="" ref="0x408d1aec"/>
        <function-ref name="setPan" scoped="" ref="0x408d1bc8"/>
        <function-ref name="isForMe" scoped="" ref="0x408d1ca4"/>
        <function-ref name="localPan" scoped="" ref="0x408d1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408d1ebc" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408d1ebc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d00b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d0194"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d0270"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d034c"/>
        <function-ref name="headerLength" scoped="" ref="0x408d0428"/>
        <function-ref name="metadataLength" scoped="" ref="0x408d0504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40879a6c" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40879a6c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40879c2c"/>
        <function-ref name="getDSN" scoped="" ref="0x40879d08"/>
        <function-ref name="setFCF" scoped="" ref="0x40879de4"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40879ec0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x408d2010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x408d20ec"/>
        <function-ref name="setDSN" scoped="" ref="0x408d21c8"/>
        <function-ref name="createAckReply" scoped="" ref="0x408d22a4"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x408d2380"/>
        <function-ref name="isDataFrame" scoped="" ref="0x408d245c"/>
        <function-ref name="getAckRequired" scoped="" ref="0x408d2538"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x408d2614"/>
        <function-ref name="localAddr" scoped="" ref="0x408d26f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408d284c"/>
        <function-ref name="localPan" scoped="" ref="0x408d2928"/>
        <function-ref name="setDestAddr" scoped="" ref="0x408d2a04"/>
        <function-ref name="createAckFrame" scoped="" ref="0x408d2ae0"/>
        <function-ref name="setFramePending" scoped="" ref="0x408d2bbc"/>
        <function-ref name="setDestPan" scoped="" ref="0x408d2c98"/>
        <function-ref name="isForMe" scoped="" ref="0x408d2d74"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408d2e50"/>
        <function-ref name="getFCF" scoped="" ref="0x408d1010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408d10ec"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408d11c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x408d12a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408d0690" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408d0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d0850"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d092c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d0a08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d0ae4"/>
        <function-ref name="headerLength" scoped="" ref="0x408d0bc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x408d0c9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x41425328" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x41425328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x414254e8"/>
        <function-ref name="address" scoped="" ref="0x414255c4"/>
        <function-ref name="destination" scoped="" ref="0x414256a0"/>
        <function-ref name="setSource" scoped="" ref="0x4142577c"/>
        <function-ref name="setDestination" scoped="" ref="0x41425858"/>
        <function-ref name="pan" scoped="" ref="0x41425934"/>
        <function-ref name="setPan" scoped="" ref="0x41425a10"/>
        <function-ref name="isForMe" scoped="" ref="0x41425aec"/>
        <function-ref name="localPan" scoped="" ref="0x41425bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41425d04" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41425d04"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41425ec4"/>
        <function-ref name="payloadLength" scoped="" ref="0x41424010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414240ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414241c8"/>
        <function-ref name="headerLength" scoped="" ref="0x414242a4"/>
        <function-ref name="metadataLength" scoped="" ref="0x41424380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x4142b8bc" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4142b8bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4142ba7c"/>
        <function-ref name="getDSN" scoped="" ref="0x4142bb58"/>
        <function-ref name="setFCF" scoped="" ref="0x4142bc34"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4142bd10"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4142bdec"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4142bec8"/>
        <function-ref name="setDSN" scoped="" ref="0x41426010"/>
        <function-ref name="createAckReply" scoped="" ref="0x414260ec"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x414261c8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x414262a4"/>
        <function-ref name="getAckRequired" scoped="" ref="0x41426380"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4142645c"/>
        <function-ref name="localAddr" scoped="" ref="0x41426538"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x41426694"/>
        <function-ref name="localPan" scoped="" ref="0x41426770"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4142684c"/>
        <function-ref name="createAckFrame" scoped="" ref="0x41426928"/>
        <function-ref name="setFramePending" scoped="" ref="0x41426a04"/>
        <function-ref name="setDestPan" scoped="" ref="0x41426ae0"/>
        <function-ref name="isForMe" scoped="" ref="0x41426bbc"/>
        <function-ref name="setAckRequired" scoped="" ref="0x41426c98"/>
        <function-ref name="getFCF" scoped="" ref="0x41426d74"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x41426e50"/>
        <function-ref name="getDestAddr" scoped="" ref="0x41425010"/>
        <function-ref name="getFramePending" scoped="" ref="0x414250ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x414244ec" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x414244ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x414246ac"/>
        <function-ref name="changed" scoped="" ref="0x41424788"/>
        <function-ref name="amGroup" scoped="" ref="0x41424864"/>
        <function-ref name="setAddress" scoped="" ref="0x41424940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41424a9c" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41424a9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41424c5c"/>
        <function-ref name="payloadLength" scoped="" ref="0x41424d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41424e14"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41424ef0"/>
        <function-ref name="headerLength" scoped="" ref="0x41423010"/>
        <function-ref name="metadataLength" scoped="" ref="0x414230ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408cd438" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408cd438"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408cd5f8"/>
        <function-ref name="cancel" scoped="" ref="0x408cd6d4"/>
        <function-ref name="sendDone" scoped="" ref="0x408cd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408cd90c" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408cd90c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cdacc"/>
        <function-ref name="header" scoped="" ref="0x408cdba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408ceac0" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408ceac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408cec80"/>
        <function-ref name="cancel" scoped="" ref="0x408ced5c"/>
        <function-ref name="sendDone" scoped="" ref="0x408cee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408cdd04" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408cdd04"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408cdec4"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4090a010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4090a0ec"/>
        <function-ref name="getSender" scoped="" ref="0x4090a1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408cd010" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cd1d0"/>
        <function-ref name="header" scoped="" ref="0x408cd2ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4148f734" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4148f734"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4148f8f4"/>
        <function-ref name="cancel" scoped="" ref="0x4148f9d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4148faac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4148fc08" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4148fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4148fdc8"/>
        <function-ref name="header" scoped="" ref="0x4148fea4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x4148ec0c" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148ec0c"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4148edcc"/>
        <function-ref name="clearAll" scoped="" ref="0x4148eea8"/>
        <function-ref name="get" scoped="" ref="0x4148d010"/>
        <function-ref name="set" scoped="" ref="0x4148d0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41492a94" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41492a94"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41492c54"/>
        <function-ref name="cancel" scoped="" ref="0x41492d30"/>
        <function-ref name="sendDone" scoped="" ref="0x41492e0c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x4148e5a0" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4148e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4148e760"/>
        <function-ref name="insertNode" scoped="" ref="0x4148e83c"/>
        <function-ref name="getNode" scoped="" ref="0x4148e918"/>
        <function-ref name="evicted" scoped="" ref="0x4148e9f4"/>
        <function-ref name="getIndex" scoped="" ref="0x4148ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4148f010" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4148f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4148f1d0"/>
        <function-ref name="header" scoped="" ref="0x4148f2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4148f3e8" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4148f3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4148f5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x4148e010" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4148e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4148e1d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4148e2ac"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4148e388"/>
        <function-ref name="getSender" scoped="" ref="0x4148e464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408ebc90" loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408ebc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408ebe50"/>
        <function-ref name="insertNode" scoped="" ref="0x408e8010"/>
        <function-ref name="getNode" scoped="" ref="0x408e80ec"/>
        <function-ref name="evicted" scoped="" ref="0x408e81c8"/>
        <function-ref name="getIndex" scoped="" ref="0x408e82a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x408e5670" loc="43:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e5830"/>
        <function-ref name="clearAll" scoped="" ref="0x408e590c"/>
        <function-ref name="get" scoped="" ref="0x408e59e8"/>
        <function-ref name="set" scoped="" ref="0x408e5ac4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408e8c48" loc="42:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408e8c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408e8e08"/>
        <function-ref name="insertNode" scoped="" ref="0x408e8ee4"/>
        <function-ref name="getNode" scoped="" ref="0x408e5010"/>
        <function-ref name="evicted" scoped="" ref="0x408e50ec"/>
        <function-ref name="getIndex" scoped="" ref="0x408e51c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408e88d0" loc="41:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408e88d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e8a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4148df24" loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148df24"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4148c0fc"/>
        <function-ref name="clearAll" scoped="" ref="0x4148c1d8"/>
        <function-ref name="get" scoped="" ref="0x4148c2b4"/>
        <function-ref name="set" scoped="" ref="0x4148c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409017a8" loc="85:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409017a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40901968"/>
        <function-ref name="cancel" scoped="" ref="0x40901a44"/>
        <function-ref name="sendDone" scoped="" ref="0x40901b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40901c7c" loc="86:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40901c7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40901e3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x408ff344" loc="93:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x408ff344"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408ff504"/>
        <function-ref name="noAck" scoped="" ref="0x408ff5e0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408ff6bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40908168" loc="77:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40908168"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40908328"/>
        <function-ref name="cancel" scoped="" ref="0x40908404"/>
        <function-ref name="sendDone" scoped="" ref="0x409084e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40901010" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40901010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409011d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409012ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40901388"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40901464"/>
        <function-ref name="headerLength" scoped="" ref="0x40901540"/>
        <function-ref name="metadataLength" scoped="" ref="0x4090161c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40900010" loc="87:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40900010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409001d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409002ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40900388"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40900464"/>
        <function-ref name="headerLength" scoped="" ref="0x40900540"/>
        <function-ref name="metadataLength" scoped="" ref="0x4090061c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40900c4c" loc="92:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40900c4c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40900e0c"/>
        <function-ref name="setRetries" scoped="" ref="0x40900ee8"/>
        <function-ref name="getRetries" scoped="" ref="0x408ff010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408ff0ec"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408ff1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4090863c" loc="78:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4090863c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409087fc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40900758" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40900758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40900918"/>
        <function-ref name="noAck" scoped="" ref="0x409009f4"/>
        <function-ref name="wasAcked" scoped="" ref="0x40900ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40908938" loc="79:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40908938"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40908af8"/>
        <function-ref name="setRetries" scoped="" ref="0x40908bd4"/>
        <function-ref name="getRetries" scoped="" ref="0x40908cb0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40908d8c"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40908e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4091a5b4" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4091a5b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4091a774"/>
        <function-ref name="stopDone" scoped="" ref="0x4091a850"/>
        <function-ref name="start" scoped="" ref="0x4091a92c"/>
        <function-ref name="stop" scoped="" ref="0x4091aa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4092b640" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4092b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4092b800"/>
        <function-ref name="cancel" scoped="" ref="0x4092b8dc"/>
        <function-ref name="sendDone" scoped="" ref="0x4092b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4092bb14" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4092bb14"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092bcd4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4091ab64" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4091ab64"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4091ad24"/>
        <function-ref name="cancel" scoped="" ref="0x4091ae00"/>
        <function-ref name="sendDone" scoped="" ref="0x4091aedc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4091934c" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4091934c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091950c"/>
        <function-ref name="payloadLength" scoped="" ref="0x409195e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409196c4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409197a0"/>
        <function-ref name="headerLength" scoped="" ref="0x4091987c"/>
        <function-ref name="metadataLength" scoped="" ref="0x40919958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40919a94" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40919a94"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40919c54"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40919d30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40919e0c"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40919ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4092b090" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4092b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4092b250"/>
        <function-ref name="stopDone" scoped="" ref="0x4092b32c"/>
        <function-ref name="start" scoped="" ref="0x4092b408"/>
        <function-ref name="stop" scoped="" ref="0x4092b4e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40919050" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40919050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40919210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4092be30" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4092be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092a010"/>
        <function-ref name="payloadLength" scoped="" ref="0x4092a0ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4092a1c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4092a2a4"/>
        <function-ref name="headerLength" scoped="" ref="0x4092a380"/>
        <function-ref name="metadataLength" scoped="" ref="0x4092a45c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x414791e4" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x414791e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x414793a4"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41479480"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4147955c"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41479638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40926a1c" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40926a1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40926bdc"/>
        <function-ref name="stopDone" scoped="" ref="0x40926cb8"/>
        <function-ref name="start" scoped="" ref="0x40926d94"/>
        <function-ref name="stop" scoped="" ref="0x40926e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40966cc4" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40966cc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40966e84"/>
        <function-ref name="turnOn" scoped="" ref="0x40964010"/>
        <function-ref name="setChannel" scoped="" ref="0x409640ec"/>
        <function-ref name="done" scoped="" ref="0x409641c8"/>
        <function-ref name="standby" scoped="" ref="0x409642a4"/>
        <function-ref name="getChannel" scoped="" ref="0x40964380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40966010" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40966010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409661d0"/>
        <function-ref name="cancel" scoped="" ref="0x409662ac"/>
        <function-ref name="sendDone" scoped="" ref="0x40966388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40964970" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40964970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40964b30"/>
        <function-ref name="header" scoped="" ref="0x40964c0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409664e4" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409664e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409666a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x409644bc" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409644bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4096467c"/>
        <function-ref name="ready" scoped="" ref="0x40964758"/>
        <function-ref name="sendDone" scoped="" ref="0x40964834"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x409667e0" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x409667e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x409669a0"/>
        <function-ref name="setChannel" scoped="" ref="0x40966a7c"/>
        <function-ref name="getChannel" scoped="" ref="0x40966b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41475398" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41475398"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41475558"/>
        <function-ref name="stopDone" scoped="" ref="0x41475634"/>
        <function-ref name="start" scoped="" ref="0x41475710"/>
        <function-ref name="stop" scoped="" ref="0x414757ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x41475948" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x41475948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41475b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4147494c" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4147494c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x41474b0c"/>
        <function-ref name="turnOn" scoped="" ref="0x41474be8"/>
        <function-ref name="setChannel" scoped="" ref="0x41474cc4"/>
        <function-ref name="done" scoped="" ref="0x41474da0"/>
        <function-ref name="standby" scoped="" ref="0x41474e7c"/>
        <function-ref name="getChannel" scoped="" ref="0x41473010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41475c64" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41475c64"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41475e24"/>
        <function-ref name="cancel" scoped="" ref="0x41475f00"/>
        <function-ref name="sendDone" scoped="" ref="0x41474010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41472428" loc="189:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41472428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414725e8"/>
        <function-ref name="runTask" scoped="" ref="0x414726c4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41473b90" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41473b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41473d50"/>
        <function-ref name="header" scoped="" ref="0x41473e2c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x41472840" loc="144:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x41472840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41472a00"/>
        <function-ref name="runTask" scoped="" ref="0x41472adc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4147416c" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4147416c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4147432c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41472010" loc="322:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41472010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414721d0"/>
        <function-ref name="runTask" scoped="" ref="0x414722ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x414736dc" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414736dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4147389c"/>
        <function-ref name="ready" scoped="" ref="0x41473978"/>
        <function-ref name="sendDone" scoped="" ref="0x41473a54"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41474468" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41474468"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41474628"/>
        <function-ref name="setChannel" scoped="" ref="0x41474704"/>
        <function-ref name="getChannel" scoped="" ref="0x414747e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4147314c" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4147314c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4147330c"/>
        <function-ref name="suspend" scoped="" ref="0x414733e8"/>
        <function-ref name="resume" scoped="" ref="0x414734c4"/>
        <function-ref name="run" scoped="" ref="0x414735a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40961ef0" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40961ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409600d4"/>
        <function-ref name="ready" scoped="" ref="0x409601b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4096028c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409603e8" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409603e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409605a8"/>
        <function-ref name="header" scoped="" ref="0x40960684"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409607c0" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409607c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40960980"/>
        <function-ref name="wait" scoped="" ref="0x40960a5c"/>
        <function-ref name="cancel" scoped="" ref="0x40960b38"/>
        <function-ref name="isFree" scoped="" ref="0x40960c14"/>
        <function-ref name="getNow" scoped="" ref="0x40960cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40960e4c" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40960e4c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4097b050"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4097b12c"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4097b208"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4097b2e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40961ac8" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40961ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40961c88"/>
        <function-ref name="header" scoped="" ref="0x40961d64"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40961614" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40961614"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409617d4"/>
        <function-ref name="ready" scoped="" ref="0x409618b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4096198c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x414a0010" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x414a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414a01d0"/>
        <function-ref name="ready" scoped="" ref="0x414a02ac"/>
        <function-ref name="sendDone" scoped="" ref="0x414a0388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x414a04e4" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x414a04e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414a06a4"/>
        <function-ref name="header" scoped="" ref="0x414a0780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x414a08bc" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x414a08bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x414a0a7c"/>
        <function-ref name="wait" scoped="" ref="0x414a0b58"/>
        <function-ref name="cancel" scoped="" ref="0x414a0c34"/>
        <function-ref name="isFree" scoped="" ref="0x414a0d10"/>
        <function-ref name="getNow" scoped="" ref="0x414a0dec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x414a0f28" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x414a0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4149e0fc"/>
        <function-ref name="rand32" scoped="" ref="0x4149e1d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4149e334" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4149e334"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4149e4f4"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4149e5d0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4149e6ac"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4149e788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x414a2b90" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x414a2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414a2d50"/>
        <function-ref name="header" scoped="" ref="0x414a2e2c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x414a26dc" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414a26dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414a289c"/>
        <function-ref name="ready" scoped="" ref="0x414a2978"/>
        <function-ref name="sendDone" scoped="" ref="0x414a2a54"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x4149e904" loc="78:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x4149e904"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4149eac4"/>
        <function-ref name="runTask" scoped="" ref="0x4149eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4097e380" loc="46:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4097e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4097e540"/>
        <function-ref name="rand32" scoped="" ref="0x4097e61c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4097daec" loc="45:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4097daec"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097e0f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4098294c" loc="44:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4098294c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40982b0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4097ad60" loc="48:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4097ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4097af20"/>
        <function-ref name="rand32" scoped="" ref="0x40979010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4097a500" loc="47:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4097a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097aad4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4097a010" loc="46:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4097a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40990354" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40990354"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40990514"/>
        <function-ref name="ready" scoped="" ref="0x409905f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409906cc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40990828" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40990828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409909e8"/>
        <function-ref name="header" scoped="" ref="0x40990ac4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40990c00" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40990c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40990dc0"/>
        <function-ref name="wait" scoped="" ref="0x40990e9c"/>
        <function-ref name="cancel" scoped="" ref="0x409b7010"/>
        <function-ref name="isFree" scoped="" ref="0x409b70ec"/>
        <function-ref name="getNow" scoped="" ref="0x409b71c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x409b7c44" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x409b7c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409b7e04"/>
        <function-ref name="get" scoped="" ref="0x409b7ee0"/>
        <function-ref name="setValue" scoped="" ref="0x409b6010"/>
        <function-ref name="set" scoped="" ref="0x409b60ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409b7324" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409b7324"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409b74e4"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409b75c0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409b769c"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409b7778"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409b7854"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409b7930"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409b7a0c"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409b7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40991a1c" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40991a1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40991bdc"/>
        <function-ref name="header" scoped="" ref="0x40991cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40991568" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40991568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40991728"/>
        <function-ref name="ready" scoped="" ref="0x40991804"/>
        <function-ref name="sendDone" scoped="" ref="0x409918e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40991df4" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40991df4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40990010"/>
        <function-ref name="noAck" scoped="" ref="0x409900ec"/>
        <function-ref name="wasAcked" scoped="" ref="0x409901c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409b2968" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409b2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409b2b28"/>
        <function-ref name="stopDone" scoped="" ref="0x409b2c04"/>
        <function-ref name="start" scoped="" ref="0x409b2ce0"/>
        <function-ref name="stop" scoped="" ref="0x409b2dbc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409c76dc" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409c76dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c789c"/>
        <function-ref name="request" scoped="" ref="0x409c7978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409c5b34" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409c5b34"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c5cf4"/>
        <function-ref name="ready" scoped="" ref="0x409c5dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x409c5eac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409c4030" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409c4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c41f0"/>
        <function-ref name="header" scoped="" ref="0x409c42cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409c86c4" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409c86c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409c8884"/>
        <function-ref name="turnOn" scoped="" ref="0x409c8960"/>
        <function-ref name="setChannel" scoped="" ref="0x409c8a3c"/>
        <function-ref name="done" scoped="" ref="0x409c8b18"/>
        <function-ref name="standby" scoped="" ref="0x409c8bf4"/>
        <function-ref name="getChannel" scoped="" ref="0x409c8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409c7ab4" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409c7ab4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c7c74"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c7d50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c7e2c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c7f08"/>
        <function-ref name="headerLength" scoped="" ref="0x409c6010"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c60ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409c534c" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409c534c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409c558c"/>
        <function-ref name="turnOn" scoped="" ref="0x409c5668"/>
        <function-ref name="setChannel" scoped="" ref="0x409c5744"/>
        <function-ref name="done" scoped="" ref="0x409c5820"/>
        <function-ref name="standby" scoped="" ref="0x409c58fc"/>
        <function-ref name="getChannel" scoped="" ref="0x409c59d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409c6248" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409c6248"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409c6408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409c7304" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409c7304"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c74c4"/>
        <function-ref name="header" scoped="" ref="0x409c75a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x409c5030" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x409c5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c51f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409c6594" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409c6594"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409c6754"/>
        <function-ref name="stopDone" scoped="" ref="0x409c6830"/>
        <function-ref name="start" scoped="" ref="0x409c690c"/>
        <function-ref name="stop" scoped="" ref="0x409c69e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409c4820" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409c4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c49e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c4abc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c4b98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c4c74"/>
        <function-ref name="headerLength" scoped="" ref="0x409c4d50"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c4e2c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409c83c8" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409c83c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c8588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409c2010" loc="64:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409c2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409c21d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x409c6b44" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x409c6b44"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c6d04"/>
        <function-ref name="cancel" scoped="" ref="0x409c6de0"/>
        <function-ref name="sendDone" scoped="" ref="0x409c6ebc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409c8e0c" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409c8e0c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c7010"/>
        <function-ref name="ready" scoped="" ref="0x409c70ec"/>
        <function-ref name="sendDone" scoped="" ref="0x409c71c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409c4428" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409c4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c45e8"/>
        <function-ref name="request" scoped="" ref="0x409c46c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409b2ef8" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409b2ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c80d4"/>
        <function-ref name="cancel" scoped="" ref="0x409c81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x409c828c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x409f0010" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x409f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f01d0"/>
        <function-ref name="get" scoped="" ref="0x409f02ac"/>
        <function-ref name="setValue" scoped="" ref="0x409f0388"/>
        <function-ref name="set" scoped="" ref="0x409f0464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409f2778" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409f2778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f2938"/>
        <function-ref name="payloadLength" scoped="" ref="0x409f2a14"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f2af0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409f2bcc"/>
        <function-ref name="headerLength" scoped="" ref="0x409f2ca8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409f2d84"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409f1824" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409f1824"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f19e4"/>
        <function-ref name="payloadLength" scoped="" ref="0x409f1ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f1b9c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409f1c78"/>
        <function-ref name="headerLength" scoped="" ref="0x409f1d54"/>
        <function-ref name="metadataLength" scoped="" ref="0x409f1e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409f31c0" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f31c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409f3c3c"/>
        <function-ref name="clear" scoped="" ref="0x409f2010"/>
        <function-ref name="isValid" scoped="" ref="0x409f38b0"/>
        <function-ref name="set" scoped="" ref="0x409f239c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x409f1010" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409f1600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409bfa74" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409bfa74"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409be578"/>
        <function-ref name="clear" scoped="" ref="0x409be904"/>
        <function-ref name="isValid" scoped="" ref="0x409be1ec"/>
        <function-ref name="set" scoped="" ref="0x409bec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x414bf19c" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x414bf19c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414bf35c"/>
        <function-ref name="get" scoped="" ref="0x414bf438"/>
        <function-ref name="setValue" scoped="" ref="0x414bf514"/>
        <function-ref name="set" scoped="" ref="0x414bf5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x414c192c" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x414c192c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414c1aec"/>
        <function-ref name="payloadLength" scoped="" ref="0x414c1bc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414c1ca4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414c1d80"/>
        <function-ref name="headerLength" scoped="" ref="0x414c1e5c"/>
        <function-ref name="metadataLength" scoped="" ref="0x414bf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x414be8cc" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x414be8cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414bea8c"/>
        <function-ref name="payloadLength" scoped="" ref="0x414beb68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414bec44"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414bed20"/>
        <function-ref name="headerLength" scoped="" ref="0x414bedfc"/>
        <function-ref name="metadataLength" scoped="" ref="0x414beed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x414c23a8" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x414c23a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414c2e24"/>
        <function-ref name="clear" scoped="" ref="0x414c11c4"/>
        <function-ref name="isValid" scoped="" ref="0x414c2a98"/>
        <function-ref name="set" scoped="" ref="0x414c1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x414bf7d4" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x414bf7d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414bfdc4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x414be0b8" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x414be0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414be6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x414c7cd4" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414c7cd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414c3770"/>
        <function-ref name="clear" scoped="" ref="0x414c3afc"/>
        <function-ref name="isValid" scoped="" ref="0x414c33e4"/>
        <function-ref name="set" scoped="" ref="0x414c3e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409f8ad4" loc="20:/opt/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409f8ad4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409f50e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409ec7e4" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409ec7e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ec9a4"/>
        <function-ref name="payloadLength" scoped="" ref="0x409eca80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409ecb5c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409ecc38"/>
        <function-ref name="headerLength" scoped="" ref="0x409ecd14"/>
        <function-ref name="metadataLength" scoped="" ref="0x409ecdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409eb010" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409eb1d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409eb2ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409eb388"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409eb464"/>
        <function-ref name="headerLength" scoped="" ref="0x409eb540"/>
        <function-ref name="metadataLength" scoped="" ref="0x409eb61c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x409ec244" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x409ec244"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ec414"/>
        <function-ref name="get" scoped="" ref="0x409ec4f0"/>
        <function-ref name="setValue" scoped="" ref="0x409ec5cc"/>
        <function-ref name="set" scoped="" ref="0x409ec6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409fc7ac" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409fc7ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409fc96c"/>
        <function-ref name="stopDone" scoped="" ref="0x409fca48"/>
        <function-ref name="start" scoped="" ref="0x409fcb24"/>
        <function-ref name="stop" scoped="" ref="0x409fcc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a1b524" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a1b524"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a1b6e4"/>
        <function-ref name="request" scoped="" ref="0x40a1b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a19994" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a19994"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a19b54"/>
        <function-ref name="ready" scoped="" ref="0x40a19c30"/>
        <function-ref name="sendDone" scoped="" ref="0x40a19d0c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a19e68" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a19e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a18050"/>
        <function-ref name="header" scoped="" ref="0x40a1812c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409fb524" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409fb524"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409fb6e4"/>
        <function-ref name="turnOn" scoped="" ref="0x409fb7c0"/>
        <function-ref name="setChannel" scoped="" ref="0x409fb89c"/>
        <function-ref name="done" scoped="" ref="0x409fb978"/>
        <function-ref name="standby" scoped="" ref="0x409fba54"/>
        <function-ref name="getChannel" scoped="" ref="0x409fbb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a1b8fc" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a1b8fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1babc"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a1bb98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a1bc74"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a1bd50"/>
        <function-ref name="headerLength" scoped="" ref="0x40a1be2c"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a1bf08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40a191ac" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40a191ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a193ec"/>
        <function-ref name="turnOn" scoped="" ref="0x40a194c8"/>
        <function-ref name="setChannel" scoped="" ref="0x40a195a4"/>
        <function-ref name="done" scoped="" ref="0x40a19680"/>
        <function-ref name="standby" scoped="" ref="0x40a1975c"/>
        <function-ref name="getChannel" scoped="" ref="0x40a19838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40a1a090" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a1a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a1a250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a1b14c" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a1b14c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a1b30c"/>
        <function-ref name="header" scoped="" ref="0x40a1b3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40a1ae60" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40a1ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a19050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a1a3dc" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a1a3dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a1a59c"/>
        <function-ref name="stopDone" scoped="" ref="0x40a1a678"/>
        <function-ref name="start" scoped="" ref="0x40a1a754"/>
        <function-ref name="stop" scoped="" ref="0x40a1a830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a18680" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a18680"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a18840"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a1891c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a189f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a18ad4"/>
        <function-ref name="headerLength" scoped="" ref="0x40a18bb0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a18c8c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409fb228" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409fb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fb3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a18de8" loc="64:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a18de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a17010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40a1a98c" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40a1a98c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1ab4c"/>
        <function-ref name="cancel" scoped="" ref="0x40a1ac28"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1ad04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409fbc6c" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409fbc6c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fbe2c"/>
        <function-ref name="ready" scoped="" ref="0x409fbf08"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40a18288" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40a18288"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a18448"/>
        <function-ref name="request" scoped="" ref="0x40a18524"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409fcd3c" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409fcd3c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fcefc"/>
        <function-ref name="cancel" scoped="" ref="0x409fb010"/>
        <function-ref name="sendDone" scoped="" ref="0x409fb0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a126d0" loc="45:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a126d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a12890"/>
        <function-ref name="request" scoped="" ref="0x40a1296c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a0f7c4" loc="49:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a0f7c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0e31c"/>
        <function-ref name="get" scoped="" ref="0x40a0e07c"/>
        <function-ref name="isSet" scoped="" ref="0x40a0fdb4"/>
        <function-ref name="set" scoped="" ref="0x40a0e5bc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a25010" loc="64:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a251d0"/>
        <function-ref name="get" scoped="" ref="0x40a252ac"/>
        <function-ref name="setValue" scoped="" ref="0x40a25388"/>
        <function-ref name="set" scoped="" ref="0x40a25464"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a2829c" loc="61:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a2829c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a28d18"/>
        <function-ref name="clear" scoped="" ref="0x40a260c8"/>
        <function-ref name="isValid" scoped="" ref="0x40a2898c"/>
        <function-ref name="set" scoped="" ref="0x40a26454"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a15550" loc="42:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a15550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a15710"/>
        <function-ref name="turnOn" scoped="" ref="0x40a157ec"/>
        <function-ref name="setChannel" scoped="" ref="0x40a158c8"/>
        <function-ref name="done" scoped="" ref="0x40a159a4"/>
        <function-ref name="standby" scoped="" ref="0x40a15a80"/>
        <function-ref name="getChannel" scoped="" ref="0x40a15b5c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a25c9c" loc="66:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a25c9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a25e5c"/>
        <function-ref name="wait" scoped="" ref="0x40a24010"/>
        <function-ref name="cancel" scoped="" ref="0x40a240ec"/>
        <function-ref name="isFree" scoped="" ref="0x40a241c8"/>
        <function-ref name="getNow" scoped="" ref="0x40a242a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a11524" loc="48:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a11524"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0f07c"/>
        <function-ref name="get" scoped="" ref="0x40a11db4"/>
        <function-ref name="isSet" scoped="" ref="0x40a11b14"/>
        <function-ref name="set" scoped="" ref="0x40a0f31c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a12b18" loc="46:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a12b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a12cd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a12db4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a12e90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a11010"/>
        <function-ref name="headerLength" scoped="" ref="0x40a110ec"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a111c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a298e8" loc="60:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a298e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a29b28"/>
        <function-ref name="headerLength" scoped="" ref="0x40a29c04"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a29ce0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a29dbc"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a29e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a122a4" loc="44:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a122a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a12464"/>
        <function-ref name="header" scoped="" ref="0x40a12540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a2cec8" loc="55:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a2cec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403da39c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a2932c"/>
        <function-ref name="fired" scoped="" ref="0x40a2aaac"/>
        <function-ref name="startAt" scoped="" ref="0x40a29010"/>
        <function-ref name="isRunning" scoped="" ref="0x40a2ad08"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a29588"/>
        <function-ref name="start" scoped="" ref="0x40a2a5cc"/>
        <function-ref name="stop" scoped="" ref="0x40a2a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a0eac8" loc="50:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0d628"/>
        <function-ref name="get" scoped="" ref="0x40a0d388"/>
        <function-ref name="isSet" scoped="" ref="0x40a0d0e8"/>
        <function-ref name="set" scoped="" ref="0x40a0d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a2c4e0" loc="54:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a15cf4" loc="43:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a15cf4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a15eb4"/>
        <function-ref name="ready" scoped="" ref="0x40a12010"/>
        <function-ref name="sendDone" scoped="" ref="0x40a120ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a0ddb4" loc="51:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0ddb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2d908"/>
        <function-ref name="get" scoped="" ref="0x40a2d668"/>
        <function-ref name="isSet" scoped="" ref="0x40a2d3c8"/>
        <function-ref name="set" scoped="" ref="0x40a2dba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a256a4" loc="65:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a256a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a25864"/>
        <function-ref name="get" scoped="" ref="0x40a25940"/>
        <function-ref name="setValue" scoped="" ref="0x40a25a1c"/>
        <function-ref name="set" scoped="" ref="0x40a25af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a26964" loc="63:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a26964"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a26b24"/>
        <function-ref name="get" scoped="" ref="0x40a26c00"/>
        <function-ref name="setValue" scoped="" ref="0x40a26cdc"/>
        <function-ref name="set" scoped="" ref="0x40a26db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a2c010" loc="52:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a2c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a2c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a1fb04" loc="52:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a1fb04"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a1fcc4"/>
        <function-ref name="request" scoped="" ref="0x40a1fda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a32010" loc="74:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a32010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a32700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a3ec98" loc="56:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a3ec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3d808"/>
        <function-ref name="get" scoped="" ref="0x40a3d568"/>
        <function-ref name="isSet" scoped="" ref="0x40a3d2c8"/>
        <function-ref name="set" scoped="" ref="0x40a3daa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a4f228" loc="80:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a4f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4f3e8"/>
        <function-ref name="get" scoped="" ref="0x40a4f4c4"/>
        <function-ref name="setValue" scoped="" ref="0x40a4f5a0"/>
        <function-ref name="set" scoped="" ref="0x40a4f67c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40a20628" loc="47:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40a20628"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4031313c"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4031313c"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a207e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a4e0ac" loc="83:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a4e0ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a4ec28"/>
        <function-ref name="clear" scoped="" ref="0x40a4d010"/>
        <function-ref name="isValid" scoped="" ref="0x40a4e89c"/>
        <function-ref name="set" scoped="" ref="0x40a4d39c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40a367f8" loc="70:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a367f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a369b8"/>
        <function-ref name="isInput" scoped="" ref="0x40a36a94"/>
        <function-ref name="toggle" scoped="" ref="0x40a36b70"/>
        <function-ref name="isOutput" scoped="" ref="0x40a36c4c"/>
        <function-ref name="get" scoped="" ref="0x40a36d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a36e04"/>
        <function-ref name="set" scoped="" ref="0x40a36ee0"/>
        <function-ref name="clr" scoped="" ref="0x40a35010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a4ddb8" loc="86:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a4ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a4b010"/>
        <function-ref name="wait" scoped="" ref="0x40a4b0ec"/>
        <function-ref name="cancel" scoped="" ref="0x40a4b1c8"/>
        <function-ref name="isFree" scoped="" ref="0x40a4b2a4"/>
        <function-ref name="getNow" scoped="" ref="0x40a4b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a2098c" loc="49:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a2098c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a20b4c"/>
        <function-ref name="turnOn" scoped="" ref="0x40a20c28"/>
        <function-ref name="setChannel" scoped="" ref="0x40a20d04"/>
        <function-ref name="done" scoped="" ref="0x40a20de0"/>
        <function-ref name="standby" scoped="" ref="0x40a20ebc"/>
        <function-ref name="getChannel" scoped="" ref="0x40a1f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40a32a50" loc="75:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a32a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a31060"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a1e978" loc="55:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a1e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3e550"/>
        <function-ref name="get" scoped="" ref="0x40a3e2b0"/>
        <function-ref name="isSet" scoped="" ref="0x40a3e010"/>
        <function-ref name="set" scoped="" ref="0x40a3e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a1e010" loc="53:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a1e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1e1d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a1e2ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a1e388"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a1e464"/>
        <function-ref name="headerLength" scoped="" ref="0x40a1e540"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a1e61c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40a33e28" loc="69:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a33e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a36010"/>
        <function-ref name="isInput" scoped="" ref="0x40a360ec"/>
        <function-ref name="toggle" scoped="" ref="0x40a361c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a362a4"/>
        <function-ref name="get" scoped="" ref="0x40a36380"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a3645c"/>
        <function-ref name="set" scoped="" ref="0x40a36538"/>
        <function-ref name="clr" scoped="" ref="0x40a36614"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a31370" loc="77:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a31370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a31530"/>
        <function-ref name="headerLength" scoped="" ref="0x40a3160c"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a316e8"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a317c4"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a318a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a1f6d8" loc="51:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a1f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a1f898"/>
        <function-ref name="header" scoped="" ref="0x40a1f974"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40a88bbc" loc="847:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40a88bbc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a88d7c"/>
        <function-ref name="runTask" scoped="" ref="0x40a88e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a3b010" loc="57:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a3b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3bb40"/>
        <function-ref name="get" scoped="" ref="0x40a3b8a0"/>
        <function-ref name="isSet" scoped="" ref="0x40a3b600"/>
        <function-ref name="set" scoped="" ref="0x40a3bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a20010" loc="46:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a20010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4031313c"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4031313c"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a201d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a3730c" loc="65:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a3730c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a374cc"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a375a8"/>
        <function-ref name="request" scoped="" ref="0x40a37684"/>
        <function-ref name="granted" scoped="" ref="0x40a37760"/>
        <function-ref name="isOwner" scoped="" ref="0x40a3783c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40a39874" loc="64:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a39874"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a39ab4"/>
        <function-ref name="isInput" scoped="" ref="0x40a39b90"/>
        <function-ref name="toggle" scoped="" ref="0x40a39c6c"/>
        <function-ref name="isOutput" scoped="" ref="0x40a39d48"/>
        <function-ref name="get" scoped="" ref="0x40a39e24"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a39f00"/>
        <function-ref name="set" scoped="" ref="0x40a37010"/>
        <function-ref name="clr" scoped="" ref="0x40a370ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a3a2ec" loc="58:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a3a2ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3ae1c"/>
        <function-ref name="get" scoped="" ref="0x40a3ab7c"/>
        <function-ref name="isSet" scoped="" ref="0x40a3a8dc"/>
        <function-ref name="set" scoped="" ref="0x40a390e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a1f1a8" loc="50:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a1f1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1f368"/>
        <function-ref name="ready" scoped="" ref="0x40a1f444"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1f520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40a307d8" loc="72:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a307d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a30998"/>
        <function-ref name="disable" scoped="" ref="0x40a30a74"/>
        <function-ref name="captured" scoped="" ref="0x40a30b50"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a30c2c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40a337dc" loc="67:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a337dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a3399c"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a33a78"/>
        <function-ref name="splitRead" scoped="" ref="0x40a33b54"/>
        <function-ref name="write" scoped="" ref="0x40a33c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a4f8bc" loc="81:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a4f8bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4fa7c"/>
        <function-ref name="get" scoped="" ref="0x40a4fb58"/>
        <function-ref name="setValue" scoped="" ref="0x40a4fc34"/>
        <function-ref name="set" scoped="" ref="0x40a4fd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a31b10" loc="79:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a31b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a31cd0"/>
        <function-ref name="get" scoped="" ref="0x40a31dac"/>
        <function-ref name="setValue" scoped="" ref="0x40a31e88"/>
        <function-ref name="set" scoped="" ref="0x40a4f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a39480" loc="59:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a39480"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a39640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a4d7c0" loc="85:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a4d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a4d980"/>
        <function-ref name="suspend" scoped="" ref="0x40a4da5c"/>
        <function-ref name="resume" scoped="" ref="0x40a4db38"/>
        <function-ref name="run" scoped="" ref="0x40a4dc14"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40aa9bb0" loc="46:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40aa9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aa9d70"/>
        <function-ref name="isInput" scoped="" ref="0x40aa9e4c"/>
        <function-ref name="toggle" scoped="" ref="0x40aa9f28"/>
        <function-ref name="isOutput" scoped="" ref="0x40acc018"/>
        <function-ref name="get" scoped="" ref="0x40acc0f4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40acc1d0"/>
        <function-ref name="set" scoped="" ref="0x40acc2ac"/>
        <function-ref name="clr" scoped="" ref="0x40acc388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40aa9208" loc="45:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40aa9208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aa93c8"/>
        <function-ref name="isInput" scoped="" ref="0x40aa94a4"/>
        <function-ref name="toggle" scoped="" ref="0x40aa9580"/>
        <function-ref name="isOutput" scoped="" ref="0x40aa965c"/>
        <function-ref name="get" scoped="" ref="0x40aa9738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aa9814"/>
        <function-ref name="set" scoped="" ref="0x40aa98f0"/>
        <function-ref name="clr" scoped="" ref="0x40aa99cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40accd30" loc="49:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40accd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ac911c"/>
        <function-ref name="fired" scoped="" ref="0x40acb924"/>
        <function-ref name="startAt" scoped="" ref="0x40acbddc"/>
        <function-ref name="isRunning" scoped="" ref="0x40acbb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ac9378"/>
        <function-ref name="start" scoped="" ref="0x40acb444"/>
        <function-ref name="stop" scoped="" ref="0x40acb6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40aaa4c4" loc="42:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40aaa4c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aaa684"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aaa760"/>
        <function-ref name="request" scoped="" ref="0x40aaa83c"/>
        <function-ref name="granted" scoped="" ref="0x40aaa918"/>
        <function-ref name="isOwner" scoped="" ref="0x40aaa9f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40aaea84" loc="41:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40aaea84"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aaec44"/>
        <function-ref name="isInput" scoped="" ref="0x40aaed20"/>
        <function-ref name="toggle" scoped="" ref="0x40aaedfc"/>
        <function-ref name="isOutput" scoped="" ref="0x40aaeed8"/>
        <function-ref name="get" scoped="" ref="0x40aaa010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aaa0ec"/>
        <function-ref name="set" scoped="" ref="0x40aaa1c8"/>
        <function-ref name="clr" scoped="" ref="0x40aaa2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40acc574" loc="48:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40acc574"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40acc734"/>
        <function-ref name="disable" scoped="" ref="0x40acc810"/>
        <function-ref name="captured" scoped="" ref="0x40acc8ec"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40acc9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40aaaba0" loc="43:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40aaaba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40aaad60"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40aaae3c"/>
        <function-ref name="splitRead" scoped="" ref="0x40aaaf18"/>
        <function-ref name="write" scoped="" ref="0x40aa9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40ac9750" loc="50:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ac9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403da108"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ac9d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40ac3b0c" loc="46:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40ac3b0c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac3ccc"/>
        <function-ref name="isInput" scoped="" ref="0x40ac3da8"/>
        <function-ref name="toggle" scoped="" ref="0x40ac3e84"/>
        <function-ref name="isOutput" scoped="" ref="0x40abf010"/>
        <function-ref name="get" scoped="" ref="0x40abf0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x40abf1c8"/>
        <function-ref name="set" scoped="" ref="0x40abf2a4"/>
        <function-ref name="clr" scoped="" ref="0x40abf380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40ac1e98" loc="45:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40ac1e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40ac3810"/>
        <function-ref name="test" scoped="" ref="0x40ac3358"/>
        <function-ref name="get" scoped="" ref="0x40ac44ac"/>
        <function-ref name="captured" scoped="" ref="0x40ac498c"/>
        <function-ref name="reset" scoped="" ref="0x40ac4c10"/>
        <function-ref name="isOn" scoped="" ref="0x40ac35b4"/>
        <function-ref name="set" scoped="" ref="0x40ac4708"/>
        <function-ref name="start" scoped="" ref="0x40ac4e6c"/>
        <function-ref name="stop" scoped="" ref="0x40ac30fc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40abf580" loc="47:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40abf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40abf740"/>
        <function-ref name="isInput" scoped="" ref="0x40abf81c"/>
        <function-ref name="toggle" scoped="" ref="0x40abf8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40abf9d4"/>
        <function-ref name="get" scoped="" ref="0x40abfab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40abfb8c"/>
        <function-ref name="set" scoped="" ref="0x40abfc68"/>
        <function-ref name="clr" scoped="" ref="0x40abfd44"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40ac8ae4" loc="40:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40ac8ae4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ac8ca4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40ac848c" loc="39:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40ac848c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40ac864c"/>
        <function-ref name="disable" scoped="" ref="0x40ac8728"/>
        <function-ref name="captured" scoped="" ref="0x40ac8804"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ac88e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40ad2404" loc="84:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40ad2404"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad25c4"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad26a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40adac00" loc="82:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40adac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40adadc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ada010" loc="81:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ada010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ada1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ad9010" loc="83:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ad9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ad91d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ad92ac"/>
        <function-ref name="splitRead" scoped="" ref="0x40ad9388"/>
        <function-ref name="write" scoped="" ref="0x40ad9464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad2b10" loc="85:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad2cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad2dac"/>
        <function-ref name="request" scoped="" ref="0x40ad2e88"/>
        <function-ref name="granted" scoped="" ref="0x40ad8010"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad80ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40af72e4" loc="296:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40af72e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40af74a4"/>
        <function-ref name="runTask" scoped="" ref="0x40af7580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40ad1968" loc="94:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40ad1968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad1b28"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad1c04"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40ace7ac" loc="99:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40ace7ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ace96c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40acea48"/>
        <function-ref name="request" scoped="" ref="0x40aceb24"/>
        <function-ref name="granted" scoped="" ref="0x40acec00"/>
        <function-ref name="isOwner" scoped="" ref="0x40acecdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40ad1010" loc="92:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40ad1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40ad11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ad8c2c" loc="91:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ad8c2c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ad8dec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40ae5b54" loc="98:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40ae5b54"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40ae5d14"/>
        <function-ref name="sleep" scoped="" ref="0x40ace1c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40ae5ecc"/>
        <function-ref name="dataReady" scoped="" ref="0x40ace2a4"/>
        <function-ref name="initMaster" scoped="" ref="0x40acf0ec"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40acf1c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40acf2a4"/>
        <function-ref name="read" scoped="" ref="0x40acf380"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40acf45c"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40acf538"/>
        <function-ref name="setClock" scoped="" ref="0x40acf614"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40acf6f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40acf7cc"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40acf928"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40acfa04"/>
        <function-ref name="write" scoped="" ref="0x40acfae0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40acfbbc"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40acfc98"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40acfd74"/>
        <function-ref name="getClock" scoped="" ref="0x40acfe50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40ace010"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40ae5df0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40acf010"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40ace0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ad137c" loc="93:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ad137c"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ad153c"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ad1618"/>
        <function-ref name="splitRead" scoped="" ref="0x40ad16f4"/>
        <function-ref name="write" scoped="" ref="0x40ad17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad00fc" loc="95:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad00fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad02bc"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad0398"/>
        <function-ref name="request" scoped="" ref="0x40ad0474"/>
        <function-ref name="granted" scoped="" ref="0x40ad0550"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad062c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40acee88" loc="100:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40acee88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ae406c"/>
        <function-ref name="userId" scoped="" ref="0x40ae4148"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40ae4308" loc="101:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40ae4308"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40ae44c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40b052e0" loc="76:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40b052e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b054a0"/>
        <function-ref name="sleep" scoped="" ref="0x40b2a84c"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b05658"/>
        <function-ref name="dataReady" scoped="" ref="0x40b2a928"/>
        <function-ref name="initMaster" scoped="" ref="0x40b05810"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b058ec"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b059c8"/>
        <function-ref name="read" scoped="" ref="0x40b05aa4"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b05b80"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b05c5c"/>
        <function-ref name="setClock" scoped="" ref="0x40b05d38"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b05e14"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b05ef0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b2a090"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b2a16c"/>
        <function-ref name="write" scoped="" ref="0x40b2a248"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b2a324"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b2a400"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b2a4dc"/>
        <function-ref name="getClock" scoped="" ref="0x40b2a5b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b2a694"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b0557c"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b05734"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b2a770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40b24f14" loc="81:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40b24f14"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b220f4"/>
        <function-ref name="isInput" scoped="" ref="0x40b221d0"/>
        <function-ref name="toggle" scoped="" ref="0x40b222ac"/>
        <function-ref name="isOutput" scoped="" ref="0x40b22388"/>
        <function-ref name="get" scoped="" ref="0x40b22464"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b22540"/>
        <function-ref name="set" scoped="" ref="0x40b2261c"/>
        <function-ref name="clr" scoped="" ref="0x40b226f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40b25bac" loc="79:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40b25bac"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b25d6c"/>
        <function-ref name="isInput" scoped="" ref="0x40b25e48"/>
        <function-ref name="toggle" scoped="" ref="0x40b25f24"/>
        <function-ref name="isOutput" scoped="" ref="0x40b24018"/>
        <function-ref name="get" scoped="" ref="0x40b240f4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b241d0"/>
        <function-ref name="set" scoped="" ref="0x40b242ac"/>
        <function-ref name="clr" scoped="" ref="0x40b24388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40b25210" loc="78:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40b25210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b253d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b254ac"/>
        <function-ref name="toggle" scoped="" ref="0x40b25588"/>
        <function-ref name="isOutput" scoped="" ref="0x40b25664"/>
        <function-ref name="get" scoped="" ref="0x40b25740"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b2581c"/>
        <function-ref name="set" scoped="" ref="0x40b258f8"/>
        <function-ref name="clr" scoped="" ref="0x40b259d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40b23d00" loc="75:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b23d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b23ec0"/>
        <function-ref name="stop" scoped="" ref="0x40b25010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40b228f8" loc="82:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40b228f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b22ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40b29560" loc="74:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40b29560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b29720"/>
        <function-ref name="sleep" scoped="" ref="0x40b26ae0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b298d8"/>
        <function-ref name="dataReady" scoped="" ref="0x40b26bbc"/>
        <function-ref name="initMaster" scoped="" ref="0x40b29a90"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b29b6c"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b29c48"/>
        <function-ref name="read" scoped="" ref="0x40b29d24"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b29e00"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b29edc"/>
        <function-ref name="setClock" scoped="" ref="0x40b26010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b260ec"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b261c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b26324"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b26400"/>
        <function-ref name="write" scoped="" ref="0x40b264dc"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b265b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b26694"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b26770"/>
        <function-ref name="getClock" scoped="" ref="0x40b2684c"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b26928"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b297fc"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b299b4"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b26a04"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40b2456c" loc="80:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40b2456c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b2472c"/>
        <function-ref name="isInput" scoped="" ref="0x40b24808"/>
        <function-ref name="toggle" scoped="" ref="0x40b248e4"/>
        <function-ref name="isOutput" scoped="" ref="0x40b249c0"/>
        <function-ref name="get" scoped="" ref="0x40b24a9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b24b78"/>
        <function-ref name="set" scoped="" ref="0x40b24c54"/>
        <function-ref name="clr" scoped="" ref="0x40b24d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b49c3c" loc="86:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b49c3c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b49e0c"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b49ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b484c8" loc="89:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b484c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b48698"/>
        <function-ref name="configure" scoped="" ref="0x40b48774"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b49530" loc="85:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b49530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b49700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b497dc"/>
        <function-ref name="request" scoped="" ref="0x40b498b8"/>
        <function-ref name="granted" scoped="" ref="0x40b49994"/>
        <function-ref name="isOwner" scoped="" ref="0x40b49a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b48040" loc="87:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b48040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b48200"/>
        <function-ref name="userId" scoped="" ref="0x40b482dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414e4010" loc="44:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414e41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x414e432c" loc="45:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x414e432c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x414e44ec"/>
        <function-ref name="isEmpty" scoped="" ref="0x414e45c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414e46a4"/>
        <function-ref name="dequeue" scoped="" ref="0x414e4780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x414e3968" loc="52:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x414e3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x414e3b38"/>
        <function-ref name="immediateRequested" scoped="" ref="0x414e3c14"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x414e220c" loc="56:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x414e220c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x414e23dc"/>
        <function-ref name="configure" scoped="" ref="0x414e24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x414e2614" loc="57:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x414e2614"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x414e27d4"/>
        <function-ref name="isEmpty" scoped="" ref="0x414e28b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414e298c"/>
        <function-ref name="dequeue" scoped="" ref="0x414e2a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414e325c" loc="51:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414e325c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414e342c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414e3508"/>
        <function-ref name="request" scoped="" ref="0x414e35e4"/>
        <function-ref name="granted" scoped="" ref="0x414e36c0"/>
        <function-ref name="isOwner" scoped="" ref="0x414e379c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x414e3d50" loc="53:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x414e3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x414e3f10"/>
        <function-ref name="userId" scoped="" ref="0x414e2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x414e2be4" loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x414e2be4"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414e2da4"/>
        <function-ref name="runTask" scoped="" ref="0x414e2e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b60aec" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b60aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b60cac"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b60d88"/>
        <function-ref name="getControlA" scoped="" ref="0x40b60e64"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b3f010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b3f0ec"/>
        <function-ref name="setControlB" scoped="" ref="0x40b3f1c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b3f2a4"/>
        <function-ref name="getControlB" scoped="" ref="0x40b3f380"/>
        <function-ref name="setControlC" scoped="" ref="0x40b3f45c"/>
        <function-ref name="setControlA" scoped="" ref="0x40b3f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b3f85c" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b3f85c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b5e26c"/>
        <function-ref name="test" scoped="" ref="0x40b3ece4"/>
        <function-ref name="get" scoped="" ref="0x40b3fe4c"/>
        <function-ref name="captured" scoped="" ref="0x40b3e34c"/>
        <function-ref name="reset" scoped="" ref="0x40b3e5d0"/>
        <function-ref name="isOn" scoped="" ref="0x40b5e010"/>
        <function-ref name="set" scoped="" ref="0x40b3e0c8"/>
        <function-ref name="start" scoped="" ref="0x40b3e82c"/>
        <function-ref name="stop" scoped="" ref="0x40b3ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b5e940" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b5e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b5de60"/>
        <function-ref name="fired" scoped="" ref="0x40b5d4f0"/>
        <function-ref name="get" scoped="" ref="0x40b5d010"/>
        <function-ref name="reset" scoped="" ref="0x40b5d74c"/>
        <function-ref name="isOn" scoped="" ref="0x40b5c0fc"/>
        <function-ref name="set" scoped="" ref="0x40b5d26c"/>
        <function-ref name="start" scoped="" ref="0x40b5d9a8"/>
        <function-ref name="stop" scoped="" ref="0x40b5dc04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b444f8" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b444f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b41e38"/>
        <function-ref name="test" scoped="" ref="0x40b41980"/>
        <function-ref name="get" scoped="" ref="0x40b44ae8"/>
        <function-ref name="setScale" scoped="" ref="0x40b400a8"/>
        <function-ref name="getScale" scoped="" ref="0x40b4032c"/>
        <function-ref name="reset" scoped="" ref="0x40b4126c"/>
        <function-ref name="overflow" scoped="" ref="0x40b41010"/>
        <function-ref name="isOn" scoped="" ref="0x40b41bdc"/>
        <function-ref name="set" scoped="" ref="0x40b44d44"/>
        <function-ref name="start" scoped="" ref="0x40b414c8"/>
        <function-ref name="stop" scoped="" ref="0x40b41724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b56010" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b56010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b561d0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b562ac"/>
        <function-ref name="getControlA" scoped="" ref="0x40b56388"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b56464"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b56540"/>
        <function-ref name="setControlB" scoped="" ref="0x40b5661c"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b566f8"/>
        <function-ref name="getControlB" scoped="" ref="0x40b567d4"/>
        <function-ref name="setControlC" scoped="" ref="0x40b568b0"/>
        <function-ref name="setControlA" scoped="" ref="0x40b5698c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b53a30" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b53a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b52e94"/>
        <function-ref name="fired" scoped="" ref="0x40b52524"/>
        <function-ref name="get" scoped="" ref="0x40b52044"/>
        <function-ref name="reset" scoped="" ref="0x40b52780"/>
        <function-ref name="isOn" scoped="" ref="0x40b51118"/>
        <function-ref name="set" scoped="" ref="0x40b522a0"/>
        <function-ref name="start" scoped="" ref="0x40b529dc"/>
        <function-ref name="stop" scoped="" ref="0x40b52c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b56cb0" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b56cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b53610"/>
        <function-ref name="test" scoped="" ref="0x40b53158"/>
        <function-ref name="get" scoped="" ref="0x40b552c8"/>
        <function-ref name="captured" scoped="" ref="0x40b557a8"/>
        <function-ref name="reset" scoped="" ref="0x40b55a2c"/>
        <function-ref name="isOn" scoped="" ref="0x40b533b4"/>
        <function-ref name="set" scoped="" ref="0x40b55524"/>
        <function-ref name="start" scoped="" ref="0x40b55c88"/>
        <function-ref name="stop" scoped="" ref="0x40b55ee4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b51510" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b51510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b76980"/>
        <function-ref name="fired" scoped="" ref="0x40b76010"/>
        <function-ref name="get" scoped="" ref="0x40b51b00"/>
        <function-ref name="reset" scoped="" ref="0x40b7626c"/>
        <function-ref name="isOn" scoped="" ref="0x40b76bdc"/>
        <function-ref name="set" scoped="" ref="0x40b51d5c"/>
        <function-ref name="start" scoped="" ref="0x40b764c8"/>
        <function-ref name="stop" scoped="" ref="0x40b76724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b75010" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b75010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b744c8"/>
        <function-ref name="fired" scoped="" ref="0x40b75ae0"/>
        <function-ref name="get" scoped="" ref="0x40b75600"/>
        <function-ref name="reset" scoped="" ref="0x40b75d3c"/>
        <function-ref name="isOn" scoped="" ref="0x40b74724"/>
        <function-ref name="set" scoped="" ref="0x40b7585c"/>
        <function-ref name="start" scoped="" ref="0x40b74010"/>
        <function-ref name="stop" scoped="" ref="0x40b7426c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b5cd18" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b5cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b57724"/>
        <function-ref name="test" scoped="" ref="0x40b5726c"/>
        <function-ref name="get" scoped="" ref="0x40b58344"/>
        <function-ref name="setScale" scoped="" ref="0x40b57980"/>
        <function-ref name="getScale" scoped="" ref="0x40b57c04"/>
        <function-ref name="reset" scoped="" ref="0x40b58a80"/>
        <function-ref name="overflow" scoped="" ref="0x40b58824"/>
        <function-ref name="isOn" scoped="" ref="0x40b574c8"/>
        <function-ref name="set" scoped="" ref="0x40b585a0"/>
        <function-ref name="start" scoped="" ref="0x40b58cdc"/>
        <function-ref name="stop" scoped="" ref="0x40b57010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40baec98" loc="30:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40baec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bd0098"/>
        <function-ref name="fired" scoped="" ref="0x40bd18a8"/>
        <function-ref name="startAt" scoped="" ref="0x40bd1d60"/>
        <function-ref name="isRunning" scoped="" ref="0x40bd1b04"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bd02f4"/>
        <function-ref name="start" scoped="" ref="0x40bd13c8"/>
        <function-ref name="stop" scoped="" ref="0x40bd164c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ba6ba0" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ba6ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4030ef18"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4030ef18"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ba6d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ba5010" loc="47:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ba5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bc6980"/>
        <function-ref name="test" scoped="" ref="0x40bc64c8"/>
        <function-ref name="get" scoped="" ref="0x40ba5600"/>
        <function-ref name="setScale" scoped="" ref="0x40bc6bdc"/>
        <function-ref name="getScale" scoped="" ref="0x40bc6e60"/>
        <function-ref name="reset" scoped="" ref="0x40ba5d3c"/>
        <function-ref name="overflow" scoped="" ref="0x40ba5ae0"/>
        <function-ref name="isOn" scoped="" ref="0x40bc6724"/>
        <function-ref name="set" scoped="" ref="0x40ba585c"/>
        <function-ref name="start" scoped="" ref="0x40bc6010"/>
        <function-ref name="stop" scoped="" ref="0x40bc626c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4151d7bc" loc="55:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4151d7bc"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4030ed24"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4030ed24"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4151cb88"/>
        <function-ref name="fired" scoped="" ref="0x4151c3b4"/>
        <function-ref name="startAt" scoped="" ref="0x4151c86c"/>
        <function-ref name="isRunning" scoped="" ref="0x4151c610"/>
        <function-ref name="getAlarm" scoped="" ref="0x4151cde4"/>
        <function-ref name="start" scoped="" ref="0x4151deac"/>
        <function-ref name="stop" scoped="" ref="0x4151c158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x41518188" loc="58:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x41518188"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x415165f0"/>
        <function-ref name="fired" scoped="" ref="0x41518c58"/>
        <function-ref name="get" scoped="" ref="0x41518778"/>
        <function-ref name="reset" scoped="" ref="0x41518eb4"/>
        <function-ref name="isOn" scoped="" ref="0x4151684c"/>
        <function-ref name="set" scoped="" ref="0x415189d4"/>
        <function-ref name="start" scoped="" ref="0x41516138"/>
        <function-ref name="stop" scoped="" ref="0x41516394"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x4151a0b8" loc="57:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x4151a0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x415199d0"/>
        <function-ref name="test" scoped="" ref="0x41519518"/>
        <function-ref name="get" scoped="" ref="0x4151a6a8"/>
        <function-ref name="setScale" scoped="" ref="0x41519c2c"/>
        <function-ref name="getScale" scoped="" ref="0x41519eb0"/>
        <function-ref name="reset" scoped="" ref="0x4151ade4"/>
        <function-ref name="overflow" scoped="" ref="0x4151ab88"/>
        <function-ref name="isOn" scoped="" ref="0x41519774"/>
        <function-ref name="set" scoped="" ref="0x4151a904"/>
        <function-ref name="start" scoped="" ref="0x41519060"/>
        <function-ref name="stop" scoped="" ref="0x415192bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bcf3dc" loc="39:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bcf3dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bcf9cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bca46c" loc="24:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bca46c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bcab5c"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bc9044"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bcadb8"/>
        <function-ref name="overflow" scoped="" ref="0x40bc92a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bc84f0" loc="45:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bc84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bc8be0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be60c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bc8e3c"/>
        <function-ref name="overflow" scoped="" ref="0x40be6324"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40be65f0" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40be65f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40be5f10"/>
        <function-ref name="test" scoped="" ref="0x40be5a58"/>
        <function-ref name="get" scoped="" ref="0x40be6be0"/>
        <function-ref name="setScale" scoped="" ref="0x40be3188"/>
        <function-ref name="getScale" scoped="" ref="0x40be340c"/>
        <function-ref name="reset" scoped="" ref="0x40be5344"/>
        <function-ref name="overflow" scoped="" ref="0x40be50e8"/>
        <function-ref name="isOn" scoped="" ref="0x40be5cb4"/>
        <function-ref name="set" scoped="" ref="0x40be6e3c"/>
        <function-ref name="start" scoped="" ref="0x40be55a0"/>
        <function-ref name="stop" scoped="" ref="0x40be57fc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40be1c78" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40be1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfc37c"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bfc834"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bfc5d8"/>
        <function-ref name="overflow" scoped="" ref="0x40bfca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40be2b00" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40be2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be1210"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be16c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be146c"/>
        <function-ref name="overflow" scoped="" ref="0x40be1924"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bfa8d8" loc="48:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bfa8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfaec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40bf9210" loc="49:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bf9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bf9900"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bf9db8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bf9b5c"/>
        <function-ref name="overflow" scoped="" ref="0x40bf8044"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40bf5188" loc="36:/opt/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40bf5188"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40bf5878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cf2010" loc="142:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cf2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf21d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40cf1228" loc="145:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40cf1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40cf13e8"/>
        <function-ref name="setRoot" scoped="" ref="0x40cf14c4"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40cf15a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cd2b1c" loc="126:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cd2b1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cd2cdc"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd2db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd2e94"/>
        <function-ref name="cancel" scoped="" ref="0x40cd1010"/>
        <function-ref name="sendDone" scoped="" ref="0x40cd10ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40cee6dc" loc="156:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40cee6dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40cee89c"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40cee978"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40ceea54"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40ceeb30"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40ceec0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40cd3010" loc="116:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40cd3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40cd31d0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40cd32ac"/>
        <function-ref name="setType" scoped="" ref="0x40cd3388"/>
        <function-ref name="getOrigin" scoped="" ref="0x40cd3464"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40cd3540"/>
        <function-ref name="getType" scoped="" ref="0x40cd361c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40cce870" loc="129:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40cce870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40ccea30"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40cceb0c"/>
        <function-ref name="txNoAck" scoped="" ref="0x40ccebe8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40ccecc4"/>
        <function-ref name="evicted" scoped="" ref="0x40cceda0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40ccee7c"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40ccd010"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40ccd0ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x40cf32ec" loc="140:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x40cf32ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
              <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40cf38c0"/>
        <function-ref name="flush" scoped="" ref="0x40cf3d90"/>
        <function-ref name="lookup" scoped="" ref="0x40cf3b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40cd465c" loc="114:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40cd465c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40cd482c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cd4968" loc="115:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cd4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd4b28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cd4c04"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd4ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd4dbc"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cd4e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40cd42c0" loc="113:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40cd42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cd4490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40cee304" loc="149:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40cee304"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40cee4c4"/>
        <function-ref name="rand32" scoped="" ref="0x40cee5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cd57d4" loc="111:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cd57d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cd59a4"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd5a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd5b5c"/>
        <function-ref name="cancel" scoped="" ref="0x40cd5c38"/>
        <function-ref name="sendDone" scoped="" ref="0x40cd5d14"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x40cd1784" loc="128:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x40cd1784"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cce1ec"/>
        <function-ref name="fired" scoped="" ref="0x40cd0508"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cd0bc8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cd0988"/>
        <function-ref name="getdt" scoped="" ref="0x40cce66c"/>
        <function-ref name="gett0" scoped="" ref="0x40cce42c"/>
        <function-ref name="isRunning" scoped="" ref="0x40cd0748"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cd1dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cd0ec8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cd0060"/>
        <function-ref name="stop" scoped="" ref="0x40cd02c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40ceed68" loc="162:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40ceed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ceef28"/>
        <function-ref name="stopDone" scoped="" ref="0x40ced018"/>
        <function-ref name="start" scoped="" ref="0x40ced0f4"/>
        <function-ref name="stop" scoped="" ref="0x40ced1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40ced34c" loc="234:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40ced34c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ced50c"/>
        <function-ref name="runTask" scoped="" ref="0x40ced5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40ccdf08" loc="137:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40ccdf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c20d84"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c1f044"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40cf9bc8"/>
        <function-ref name="enqueue" scoped="" ref="0x40cf7278"/>
        <function-ref name="element" scoped="" ref="0x40cf75ac"/>
        <function-ref name="maxSize" scoped="" ref="0x40cf9988"/>
        <function-ref name="dequeue" scoped="" ref="0x40cf9f14"/>
        <function-ref name="empty" scoped="" ref="0x40cf9508"/>
        <function-ref name="size" scoped="" ref="0x40cf9748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x40cf2628" loc="144:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40cf2628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40cf27e8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40cf28c4"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40cf29a0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40cf2a7c"/>
        <function-ref name="getEtx" scoped="" ref="0x40cf2b58"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40cf2c34"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40cf2d10"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40cf2dec"/>
        <function-ref name="getParent" scoped="" ref="0x40cf2ec8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40cf1010"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40cf10ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ccd7d8" loc="131:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ccd7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ccd998"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ccda74"/>
        <function-ref name="getPayload" scoped="" ref="0x40ccdb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ccdc2c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ccdd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cd5070" loc="109:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cd5070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cd5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cd5ee0" loc="112:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cd5ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cd40d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40cd26f4" loc="118:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40cd26f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40cd28b4"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40cd2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x40ccd228" loc="130:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40ccd228"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40ccd3e8"/>
        <function-ref name="routeFound" scoped="" ref="0x40ccd4c4"/>
        <function-ref name="nextHop" scoped="" ref="0x40ccd5a0"/>
        <function-ref name="noRoute" scoped="" ref="0x40ccd67c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cef750" loc="148:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cef750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cef910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cef9ec"/>
        <function-ref name="led1On" scoped="" ref="0x40cefac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cefba4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cefc80"/>
        <function-ref name="get" scoped="" ref="0x40cefd5c"/>
        <function-ref name="led1Off" scoped="" ref="0x40cefe38"/>
        <function-ref name="led2On" scoped="" ref="0x40cee1c8"/>
        <function-ref name="set" scoped="" ref="0x40cee010"/>
        <function-ref name="led2Off" scoped="" ref="0x40ceff14"/>
        <function-ref name="led0On" scoped="" ref="0x40cee0ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40cd1228" loc="127:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cd13e8"/>
        <function-ref name="noAck" scoped="" ref="0x40cd14c4"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cd15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40cd3758" loc="117:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40cd3758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40cd3918"/>
        <function-ref name="option" scoped="" ref="0x40cd39f4"/>
        <function-ref name="setEtx" scoped="" ref="0x40cd3ad0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40cd3bac"/>
        <function-ref name="clearOption" scoped="" ref="0x40cd3c88"/>
        <function-ref name="getEtx" scoped="" ref="0x40cd3d64"/>
        <function-ref name="getOrigin" scoped="" ref="0x40cd3e40"/>
        <function-ref name="setType" scoped="" ref="0x40cd3f1c"/>
        <function-ref name="setOption" scoped="" ref="0x40cd2010"/>
        <function-ref name="matchPacket" scoped="" ref="0x40cd20ec"/>
        <function-ref name="getThl" scoped="" ref="0x40cd21c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40cd22a4"/>
        <function-ref name="matchInstance" scoped="" ref="0x40cd2380"/>
        <function-ref name="getType" scoped="" ref="0x40cd24dc"/>
        <function-ref name="setThl" scoped="" ref="0x40cd25b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x40cf798c" loc="138:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x40cf798c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c20d84"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c1f044"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cf6a40"/>
        <function-ref name="maxSize" scoped="" ref="0x40cf6490"/>
        <function-ref name="empty" scoped="" ref="0x40cf6010"/>
        <function-ref name="put" scoped="" ref="0x40cf66d0"/>
        <function-ref name="size" scoped="" ref="0x40cf6250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40cf1b78" loc="147:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cf1b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cf1d38"/>
        <function-ref name="source" scoped="" ref="0x40cf1e14"/>
        <function-ref name="address" scoped="" ref="0x40cf1ef0"/>
        <function-ref name="destination" scoped="" ref="0x40cef010"/>
        <function-ref name="setSource" scoped="" ref="0x40cef0ec"/>
        <function-ref name="setDestination" scoped="" ref="0x40cef1c8"/>
        <function-ref name="type" scoped="" ref="0x40cef2a4"/>
        <function-ref name="setType" scoped="" ref="0x40cef380"/>
        <function-ref name="isForMe" scoped="" ref="0x40cef45c"/>
        <function-ref name="setGroup" scoped="" ref="0x40cef538"/>
        <function-ref name="localGroup" scoped="" ref="0x40cef614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cd536c" loc="110:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cd536c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cd552c"/>
        <function-ref name="stop" scoped="" ref="0x40cd5608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x40cf232c" loc="143:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x40cf232c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf24ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40cf6e50" loc="139:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40cf6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
            <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cf5ea4"/>
        <function-ref name="maxSize" scoped="" ref="0x40cf58f4"/>
        <function-ref name="empty" scoped="" ref="0x40cf5474"/>
        <function-ref name="put" scoped="" ref="0x40cf5b34"/>
        <function-ref name="size" scoped="" ref="0x40cf56b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40cf176c" loc="146:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40cf176c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40cf1a3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40ce87c4" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40ce87c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
            <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ce7800"/>
        <function-ref name="maxSize" scoped="" ref="0x40ce7250"/>
        <function-ref name="empty" scoped="" ref="0x40ce8d98"/>
        <function-ref name="put" scoped="" ref="0x40ce7490"/>
        <function-ref name="size" scoped="" ref="0x40ce7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41589898" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41589898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
            <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415888d0"/>
        <function-ref name="maxSize" scoped="" ref="0x41588320"/>
        <function-ref name="empty" scoped="" ref="0x41589e6c"/>
        <function-ref name="put" scoped="" ref="0x41588560"/>
        <function-ref name="size" scoped="" ref="0x415880e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41589514" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41589514"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415896d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40d01a1c" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40d01a1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c20d84"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c1f044"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cffa40"/>
        <function-ref name="maxSize" scoped="" ref="0x40cff490"/>
        <function-ref name="empty" scoped="" ref="0x40cff010"/>
        <function-ref name="put" scoped="" ref="0x40cff6d0"/>
        <function-ref name="size" scoped="" ref="0x40cff250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41580c40" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41580c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c20d84"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c1f044"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415cec74"/>
        <function-ref name="maxSize" scoped="" ref="0x415ce6c4"/>
        <function-ref name="empty" scoped="" ref="0x415ce244"/>
        <function-ref name="put" scoped="" ref="0x415ce904"/>
        <function-ref name="size" scoped="" ref="0x415ce484"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415808bc" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415808bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41580a7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40cfd508" loc="43:/opt/tinyos/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40cfd508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c20d84"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c1f044"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40d1c250"/>
        <function-ref name="enqueue" scoped="" ref="0x40d1c8e8"/>
        <function-ref name="element" scoped="" ref="0x40d1cc1c"/>
        <function-ref name="maxSize" scoped="" ref="0x40d1c010"/>
        <function-ref name="dequeue" scoped="" ref="0x40d1c59c"/>
        <function-ref name="empty" scoped="" ref="0x40cfdadc"/>
        <function-ref name="size" scoped="" ref="0x40cfdd1c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x40d2e288" loc="39:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x40d2e288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
              <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40d2e85c"/>
        <function-ref name="flush" scoped="" ref="0x40d2ed2c"/>
        <function-ref name="lookup" scoped="" ref="0x40d2eac4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x415c06bc" loc="46:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x415c06bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
              <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x415c0c90"/>
        <function-ref name="flush" scoped="" ref="0x415be18c"/>
        <function-ref name="lookup" scoped="" ref="0x415c0ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415c031c" loc="45:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415c031c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415c04dc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x415be3c0" loc="49:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x415be3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x415be580"/>
        <function-ref name="option" scoped="" ref="0x415be65c"/>
        <function-ref name="setEtx" scoped="" ref="0x415be738"/>
        <function-ref name="setOrigin" scoped="" ref="0x415be814"/>
        <function-ref name="clearOption" scoped="" ref="0x415be8f0"/>
        <function-ref name="getEtx" scoped="" ref="0x415be9cc"/>
        <function-ref name="getOrigin" scoped="" ref="0x415beaa8"/>
        <function-ref name="setType" scoped="" ref="0x415beb84"/>
        <function-ref name="setOption" scoped="" ref="0x415bec60"/>
        <function-ref name="matchPacket" scoped="" ref="0x415bed3c"/>
        <function-ref name="getThl" scoped="" ref="0x415bee18"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x415beef4"/>
        <function-ref name="matchInstance" scoped="" ref="0x415bd010"/>
        <function-ref name="getType" scoped="" ref="0x415bd16c"/>
        <function-ref name="setThl" scoped="" ref="0x415bd248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d2dc54" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d2dc54"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d2b644"/>
        <function-ref name="fired" scoped="" ref="0x40d2c954"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d2b044"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d2cdd4"/>
        <function-ref name="getdt" scoped="" ref="0x40d2bac4"/>
        <function-ref name="gett0" scoped="" ref="0x40d2b884"/>
        <function-ref name="isRunning" scoped="" ref="0x40d2cb94"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d2c244"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d2b344"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d2c4ac"/>
        <function-ref name="stop" scoped="" ref="0x40d2c714"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d29838" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d29838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d5521c"/>
        <function-ref name="fired" scoped="" ref="0x40d28534"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d28bf4"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d289b4"/>
        <function-ref name="getdt" scoped="" ref="0x40d5569c"/>
        <function-ref name="gett0" scoped="" ref="0x40d5545c"/>
        <function-ref name="isRunning" scoped="" ref="0x40d28774"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d29e0c"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d28ef4"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d2808c"/>
        <function-ref name="stop" scoped="" ref="0x40d282f4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d47010" loc="57:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d47010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d471d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40d4d8e0" loc="47:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40d4d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40d4daa0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40d4db7c"/>
        <function-ref name="txNoAck" scoped="" ref="0x40d4dc58"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40d4dd34"/>
        <function-ref name="evicted" scoped="" ref="0x40d4de10"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40d4deec"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40d4c010"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40d4c0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d4c590" loc="49:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d4c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4c750"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4c82c"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4c908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4c9e4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4cac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40d4b38c" loc="54:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d4b38c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4b54c"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4b628"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4b704"/>
        <function-ref name="cancel" scoped="" ref="0x40d4b7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4b8bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d4ee80" loc="45:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d4ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4d06c"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4d148"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4d224"/>
        <function-ref name="cancel" scoped="" ref="0x40d4d300"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4d3dc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40d47700" loc="59:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40d47700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40d47940"/>
        <function-ref name="rand32" scoped="" ref="0x40d47a1c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d4a80c" loc="56:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d4a80c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4a9cc"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4aaa8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4ab84"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4ac60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4ad3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d4c254" loc="48:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d4c254"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d4c414"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x40d4badc" loc="55:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x40d4badc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d4bc9c"/>
        <function-ref name="source" scoped="" ref="0x40d4bd78"/>
        <function-ref name="address" scoped="" ref="0x40d4be54"/>
        <function-ref name="destination" scoped="" ref="0x40d4a010"/>
        <function-ref name="setSource" scoped="" ref="0x40d4a0ec"/>
        <function-ref name="setDestination" scoped="" ref="0x40d4a1c8"/>
        <function-ref name="type" scoped="" ref="0x40d4a2a4"/>
        <function-ref name="setType" scoped="" ref="0x40d4a380"/>
        <function-ref name="isForMe" scoped="" ref="0x40d4a45c"/>
        <function-ref name="setGroup" scoped="" ref="0x40d4a538"/>
        <function-ref name="localGroup" scoped="" ref="0x40d4a614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d4d560" loc="46:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d4d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d4d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x40d4b010" loc="50:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40d4b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40d4b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d4ea1c" loc="44:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d4ea1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d4ebdc"/>
        <function-ref name="stop" scoped="" ref="0x40d4ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x40d473c4" loc="58:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d473c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40d47584"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d5390c" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d5390c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d53acc"/>
        <function-ref name="getPayload" scoped="" ref="0x40d53ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d53c84"/>
        <function-ref name="cancel" scoped="" ref="0x40d53d60"/>
        <function-ref name="sendDone" scoped="" ref="0x40d53e3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d9f010" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d9f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d9f1d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d9f2ac"/>
        <function-ref name="getPayload" scoped="" ref="0x40d9f388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d9f464"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d9f540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d9f67c" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d9f67c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d9f83c"/>
        <function-ref name="source" scoped="" ref="0x40d9f918"/>
        <function-ref name="address" scoped="" ref="0x40d9f9f4"/>
        <function-ref name="destination" scoped="" ref="0x40d9fad0"/>
        <function-ref name="setSource" scoped="" ref="0x40d9fbac"/>
        <function-ref name="setDestination" scoped="" ref="0x40d9fc88"/>
        <function-ref name="type" scoped="" ref="0x40d9fd64"/>
        <function-ref name="setType" scoped="" ref="0x40d9fe40"/>
        <function-ref name="isForMe" scoped="" ref="0x40d9ff1c"/>
        <function-ref name="setGroup" scoped="" ref="0x40de7010"/>
        <function-ref name="localGroup" scoped="" ref="0x40de70ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40de7248" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40de7248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40de7408"/>
        <function-ref name="noAck" scoped="" ref="0x40de74e4"/>
        <function-ref name="wasAcked" scoped="" ref="0x40de75c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415abc04" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415abc04"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415abdc4"/>
        <function-ref name="getPayload" scoped="" ref="0x415abea0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415a8010"/>
        <function-ref name="cancel" scoped="" ref="0x415a80ec"/>
        <function-ref name="sendDone" scoped="" ref="0x415a81c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x415a8304" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415a8304"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x415a84c4"/>
        <function-ref name="payloadLength" scoped="" ref="0x415a85a0"/>
        <function-ref name="getPayload" scoped="" ref="0x415a867c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415a8758"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415a8834"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x415a8970" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415a8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415a8b30"/>
        <function-ref name="source" scoped="" ref="0x415a8c0c"/>
        <function-ref name="address" scoped="" ref="0x415a8ce8"/>
        <function-ref name="destination" scoped="" ref="0x415a8dc4"/>
        <function-ref name="setSource" scoped="" ref="0x415a8ea0"/>
        <function-ref name="setDestination" scoped="" ref="0x415a7010"/>
        <function-ref name="type" scoped="" ref="0x415a70ec"/>
        <function-ref name="setType" scoped="" ref="0x415a71c8"/>
        <function-ref name="isForMe" scoped="" ref="0x415a72a4"/>
        <function-ref name="setGroup" scoped="" ref="0x415a7380"/>
        <function-ref name="localGroup" scoped="" ref="0x415a745c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x415a75b8" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x415a75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x415a7778"/>
        <function-ref name="noAck" scoped="" ref="0x415a7854"/>
        <function-ref name="wasAcked" scoped="" ref="0x415a7930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415f5e84" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415f5e84"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415f106c"/>
        <function-ref name="getPayload" scoped="" ref="0x415f1148"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415f1224"/>
        <function-ref name="cancel" scoped="" ref="0x415f1300"/>
        <function-ref name="sendDone" scoped="" ref="0x415f13dc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x415f1548" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x415f1548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415f1708"/>
        <function-ref name="getPayload" scoped="" ref="0x415f17e4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415f18c0"/>
        <function-ref name="cancel" scoped="" ref="0x415f199c"/>
        <function-ref name="sendDone" scoped="" ref="0x415f1a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x415f1bb4" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415f1bb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415f1d74"/>
        <function-ref name="source" scoped="" ref="0x415f1e50"/>
        <function-ref name="address" scoped="" ref="0x415f0010"/>
        <function-ref name="destination" scoped="" ref="0x415f00ec"/>
        <function-ref name="setSource" scoped="" ref="0x415f01c8"/>
        <function-ref name="setDestination" scoped="" ref="0x415f02a4"/>
        <function-ref name="type" scoped="" ref="0x415f0380"/>
        <function-ref name="setType" scoped="" ref="0x415f045c"/>
        <function-ref name="isForMe" scoped="" ref="0x415f0538"/>
        <function-ref name="setGroup" scoped="" ref="0x415f0614"/>
        <function-ref name="localGroup" scoped="" ref="0x415f06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dbb7b0" loc="43:/opt/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dbb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dbb970"/>
        <function-ref name="getPayload" scoped="" ref="0x40dbba4c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dbbb28"/>
        <function-ref name="cancel" scoped="" ref="0x40dbbc04"/>
        <function-ref name="sendDone" scoped="" ref="0x40dbbce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40df1d30" loc="48:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40df1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df1f00"/>
        <function-ref name="getPayload" scoped="" ref="0x40df0010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df00ec"/>
        <function-ref name="cancel" scoped="" ref="0x40df01c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40df02a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40df15f4" loc="46:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40df15f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df17c4"/>
        <function-ref name="getPayload" scoped="" ref="0x40df18a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df197c"/>
        <function-ref name="cancel" scoped="" ref="0x40df1a58"/>
        <function-ref name="sendDone" scoped="" ref="0x40df1b34"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40def010" loc="50:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40def010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40def1d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40def2ac"/>
        <function-ref name="getPayload" scoped="" ref="0x40def388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40def464"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40def540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40def6bc" loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40def6bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40def87c"/>
        <function-ref name="runTask" scoped="" ref="0x40def958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40defad4" loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40defad4"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40defc94"/>
        <function-ref name="runTask" scoped="" ref="0x40defd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40df03e0" loc="49:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40df03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40df05a0"/>
        <function-ref name="source" scoped="" ref="0x40df067c"/>
        <function-ref name="address" scoped="" ref="0x40df0758"/>
        <function-ref name="destination" scoped="" ref="0x40df0834"/>
        <function-ref name="setSource" scoped="" ref="0x40df0910"/>
        <function-ref name="setDestination" scoped="" ref="0x40df09ec"/>
        <function-ref name="type" scoped="" ref="0x40df0ac8"/>
        <function-ref name="setType" scoped="" ref="0x40df0ba4"/>
        <function-ref name="isForMe" scoped="" ref="0x40df0c80"/>
        <function-ref name="setGroup" scoped="" ref="0x40df0d5c"/>
        <function-ref name="localGroup" scoped="" ref="0x40df0e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e17b78" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e17b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e17d38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e17e14"/>
        <function-ref name="getPayload" scoped="" ref="0x40e17ef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e16010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e160ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e1787c" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e1787c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e17a3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e16228" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e16228"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e163e8"/>
        <function-ref name="source" scoped="" ref="0x40e164c4"/>
        <function-ref name="address" scoped="" ref="0x40e165a0"/>
        <function-ref name="destination" scoped="" ref="0x40e1667c"/>
        <function-ref name="setSource" scoped="" ref="0x40e16758"/>
        <function-ref name="setDestination" scoped="" ref="0x40e16834"/>
        <function-ref name="type" scoped="" ref="0x40e16910"/>
        <function-ref name="setType" scoped="" ref="0x40e169ec"/>
        <function-ref name="isForMe" scoped="" ref="0x40e16ac8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e16ba4"/>
        <function-ref name="localGroup" scoped="" ref="0x40e16c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e0e1f4" loc="47:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e0e1f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e0e3b4"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e0e490"/>
        <function-ref name="getPayload" scoped="" ref="0x40e0e56c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e0e648"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e0e724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e12ed8" loc="46:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e12ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e0e0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e0e860" loc="48:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e0e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e0ea20"/>
        <function-ref name="source" scoped="" ref="0x40e0eafc"/>
        <function-ref name="address" scoped="" ref="0x40e0ebd8"/>
        <function-ref name="destination" scoped="" ref="0x40e0ecb4"/>
        <function-ref name="setSource" scoped="" ref="0x40e0ed90"/>
        <function-ref name="setDestination" scoped="" ref="0x40e0ee6c"/>
        <function-ref name="type" scoped="" ref="0x40e0d010"/>
        <function-ref name="setType" scoped="" ref="0x40e0d0ec"/>
        <function-ref name="isForMe" scoped="" ref="0x40e0d1c8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e0d2a4"/>
        <function-ref name="localGroup" scoped="" ref="0x40e0d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40e7e420" loc="110:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40e7e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40e7e5e0"/>
        <function-ref name="setRoot" scoped="" ref="0x40e7e6bc"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40e7e798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x40ea6310" loc="271:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x40ea6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ea64d0"/>
        <function-ref name="runTask" scoped="" ref="0x40ea65ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40ea714c" loc="125:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40ea714c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40ea730c"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40ea73e8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40ea74c4"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40ea75a0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40ea767c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40eb0efc" loc="119:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40eb0efc"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40eaf0d4"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40eaf1b0"/>
        <function-ref name="txNoAck" scoped="" ref="0x40eaf28c"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40eaf368"/>
        <function-ref name="evicted" scoped="" ref="0x40eaf444"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40eaf520"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40eaf5fc"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40eaf6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x40e7d894" loc="113:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x40e7d894"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x40e7da54"/>
        <function-ref name="setEtx" scoped="" ref="0x40e7db30"/>
        <function-ref name="clearOption" scoped="" ref="0x40e7dc0c"/>
        <function-ref name="getEtx" scoped="" ref="0x40e7dce8"/>
        <function-ref name="setOption" scoped="" ref="0x40e7ddc4"/>
        <function-ref name="setParent" scoped="" ref="0x40e7dea0"/>
        <function-ref name="getParent" scoped="" ref="0x40eb0010"/>
        <function-ref name="getOption" scoped="" ref="0x40eb00ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40ead400" loc="121:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40ead400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ead5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40ead69c"/>
        <function-ref name="start" scoped="" ref="0x40ead778"/>
        <function-ref name="stop" scoped="" ref="0x40ead854"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40ea8c94" loc="124:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40ea8c94"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40ea8e54"/>
        <function-ref name="rand32" scoped="" ref="0x40ea7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40e7e8d4" loc="111:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40e7e8d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40e7ea94"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40e7eb70"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40e7ec4c"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40e7ed28"/>
        <function-ref name="getEtx" scoped="" ref="0x40e7ee04"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40e7eee0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40e7d010"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40e7d0ec"/>
        <function-ref name="getParent" scoped="" ref="0x40e7d1c8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40e7d2a4"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40e7d380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x40ea7ecc" loc="390:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x40ea7ecc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ea60b8"/>
        <function-ref name="runTask" scoped="" ref="0x40ea6194"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eb0228" loc="114:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eb0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eb03e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x40eb0574" loc="117:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x40eb0574"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eb0734"/>
        <function-ref name="getPayload" scoped="" ref="0x40eb0810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eb08ec"/>
        <function-ref name="cancel" scoped="" ref="0x40eb09c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40eb0aa4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x40eada38" loc="122:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x40eada38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40eab43c"/>
        <function-ref name="fired" scoped="" ref="0x40eac754"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40eace14"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eacbd4"/>
        <function-ref name="getdt" scoped="" ref="0x40eab8bc"/>
        <function-ref name="gett0" scoped="" ref="0x40eab67c"/>
        <function-ref name="isRunning" scoped="" ref="0x40eac994"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eac044"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40eab13c"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eac2ac"/>
        <function-ref name="stop" scoped="" ref="0x40eac514"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x40eabb68" loc="123:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x40eabb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ea8610"/>
        <function-ref name="fired" scoped="" ref="0x40eaa8e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ea8010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eaad60"/>
        <function-ref name="getdt" scoped="" ref="0x40ea8a90"/>
        <function-ref name="gett0" scoped="" ref="0x40ea8850"/>
        <function-ref name="isRunning" scoped="" ref="0x40eaab20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eaa1d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ea8310"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eaa438"/>
        <function-ref name="stop" scoped="" ref="0x40eaa6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x40ea77b8" loc="126:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40ea77b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40ea7978"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40ea7a54"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x40ea7b90" loc="128:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40ea7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40ea7d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x40eb0c00" loc="118:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x40eb0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40eb0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40eaf814" loc="120:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eaf814"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eaf9d4"/>
        <function-ref name="source" scoped="" ref="0x40eafab0"/>
        <function-ref name="address" scoped="" ref="0x40eafb8c"/>
        <function-ref name="destination" scoped="" ref="0x40eafc68"/>
        <function-ref name="setSource" scoped="" ref="0x40eafd44"/>
        <function-ref name="setDestination" scoped="" ref="0x40eafe20"/>
        <function-ref name="type" scoped="" ref="0x40eafefc"/>
        <function-ref name="setType" scoped="" ref="0x40ead010"/>
        <function-ref name="isForMe" scoped="" ref="0x40ead0ec"/>
        <function-ref name="setGroup" scoped="" ref="0x40ead1c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40ead2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e7d4bc" loc="112:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e7d4bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e7d67c"/>
        <function-ref name="stop" scoped="" ref="0x40e7d758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x40e7fe6c" loc="109:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x40e7fe6c"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40e7e050"/>
        <function-ref name="routeFound" scoped="" ref="0x40e7e12c"/>
        <function-ref name="nextHop" scoped="" ref="0x40e7e208"/>
        <function-ref name="noRoute" scoped="" ref="0x40e7e2e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ea1010" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ea1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ea0a90"/>
        <function-ref name="fired" scoped="" ref="0x40ea1cf4"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ea0490"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ea0250"/>
        <function-ref name="getdt" scoped="" ref="0x40ea0f10"/>
        <function-ref name="gett0" scoped="" ref="0x40ea0cd0"/>
        <function-ref name="isRunning" scoped="" ref="0x40ea0010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ea15e4"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ea0790"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ea184c"/>
        <function-ref name="stop" scoped="" ref="0x40ea1ab4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e9b0f4" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e9b0f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e9b2b4"/>
        <function-ref name="getPayload" scoped="" ref="0x40e9b390"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9b46c"/>
        <function-ref name="cancel" scoped="" ref="0x40e9b548"/>
        <function-ref name="sendDone" scoped="" ref="0x40e9b624"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e9b760" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e9b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e9b920"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e9b9fc"/>
        <function-ref name="getPayload" scoped="" ref="0x40e9bad8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9bbb4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e9bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e9bdcc" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e9bdcc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e9a010"/>
        <function-ref name="source" scoped="" ref="0x40e9a0ec"/>
        <function-ref name="address" scoped="" ref="0x40e9a1c8"/>
        <function-ref name="destination" scoped="" ref="0x40e9a2a4"/>
        <function-ref name="setSource" scoped="" ref="0x40e9a380"/>
        <function-ref name="setDestination" scoped="" ref="0x40e9a45c"/>
        <function-ref name="type" scoped="" ref="0x40e9a538"/>
        <function-ref name="setType" scoped="" ref="0x40e9a614"/>
        <function-ref name="isForMe" scoped="" ref="0x40e9a6f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40e9a7cc"/>
        <function-ref name="localGroup" scoped="" ref="0x40e9a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40e9aa04" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40e9aa04"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e9abc4"/>
        <function-ref name="noAck" scoped="" ref="0x40e9aca0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e9ad7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4162cd04" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4162cd04"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4162cec4"/>
        <function-ref name="getPayload" scoped="" ref="0x41628010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416280ec"/>
        <function-ref name="cancel" scoped="" ref="0x416281c8"/>
        <function-ref name="sendDone" scoped="" ref="0x416282a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x416283e0" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x416283e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416285a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4162867c"/>
        <function-ref name="getPayload" scoped="" ref="0x41628758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41628834"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41628910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41628a4c" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41628a4c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41628c0c"/>
        <function-ref name="source" scoped="" ref="0x41628ce8"/>
        <function-ref name="address" scoped="" ref="0x41628dc4"/>
        <function-ref name="destination" scoped="" ref="0x41628ea0"/>
        <function-ref name="setSource" scoped="" ref="0x41627010"/>
        <function-ref name="setDestination" scoped="" ref="0x416270ec"/>
        <function-ref name="type" scoped="" ref="0x416271c8"/>
        <function-ref name="setType" scoped="" ref="0x416272a4"/>
        <function-ref name="isForMe" scoped="" ref="0x41627380"/>
        <function-ref name="setGroup" scoped="" ref="0x4162745c"/>
        <function-ref name="localGroup" scoped="" ref="0x41627538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41627694" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41627694"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41627854"/>
        <function-ref name="noAck" scoped="" ref="0x41627930"/>
        <function-ref name="wasAcked" scoped="" ref="0x41627a0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41622060" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41622060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41622220"/>
        <function-ref name="getPayload" scoped="" ref="0x416222fc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416223d8"/>
        <function-ref name="cancel" scoped="" ref="0x416224b4"/>
        <function-ref name="sendDone" scoped="" ref="0x41622590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416226fc" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416226fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416228bc"/>
        <function-ref name="getPayload" scoped="" ref="0x41622998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41622a74"/>
        <function-ref name="cancel" scoped="" ref="0x41622b50"/>
        <function-ref name="sendDone" scoped="" ref="0x41622c2c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41622d68" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41622d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41622f28"/>
        <function-ref name="source" scoped="" ref="0x41621018"/>
        <function-ref name="address" scoped="" ref="0x416210f4"/>
        <function-ref name="destination" scoped="" ref="0x416211d0"/>
        <function-ref name="setSource" scoped="" ref="0x416212ac"/>
        <function-ref name="setDestination" scoped="" ref="0x41621388"/>
        <function-ref name="type" scoped="" ref="0x41621464"/>
        <function-ref name="setType" scoped="" ref="0x41621540"/>
        <function-ref name="isForMe" scoped="" ref="0x4162161c"/>
        <function-ref name="setGroup" scoped="" ref="0x416216f8"/>
        <function-ref name="localGroup" scoped="" ref="0x416217d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e98210" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e98210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e983d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e984ac"/>
        <function-ref name="getPayload" scoped="" ref="0x40e98588"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e98664"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e98740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e99efc" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e99efc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e980d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e9887c" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e9887c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e98a3c"/>
        <function-ref name="source" scoped="" ref="0x40e98b18"/>
        <function-ref name="address" scoped="" ref="0x40e98bf4"/>
        <function-ref name="destination" scoped="" ref="0x40e98cd0"/>
        <function-ref name="setSource" scoped="" ref="0x40e98dac"/>
        <function-ref name="setDestination" scoped="" ref="0x40e98e88"/>
        <function-ref name="type" scoped="" ref="0x40e97010"/>
        <function-ref name="setType" scoped="" ref="0x40e970ec"/>
        <function-ref name="isForMe" scoped="" ref="0x40e971c8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e972a4"/>
        <function-ref name="localGroup" scoped="" ref="0x40e97380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40eb9070" loc="46:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="SenseAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40eb9070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eb9230"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eb930c"/>
        <function-ref name="getPayload" scoped="" ref="0x40eb93e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eb94c4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eb95a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40eba9d4" loc="45:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="SenseAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40eba9d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ebab94"/>
        <function-ref name="getPayload" scoped="" ref="0x40ebac70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ebad4c"/>
        <function-ref name="cancel" scoped="" ref="0x40ebae28"/>
        <function-ref name="sendDone" scoped="" ref="0x40ebaf04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41665304" loc="38:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="SenseAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41665304"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416654c4"/>
        <function-ref name="payloadLength" scoped="" ref="0x416655a0"/>
        <function-ref name="getPayload" scoped="" ref="0x4166567c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41665758"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41665834"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41667c68" loc="37:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="SenseAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41667c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41667e28"/>
        <function-ref name="getPayload" scoped="" ref="0x41667f04"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41665010"/>
        <function-ref name="cancel" scoped="" ref="0x416650ec"/>
        <function-ref name="sendDone" scoped="" ref="0x416651c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x416621e4" loc="46:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="SenseAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x416621e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x416623a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ee30dc" loc="46:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ee30dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ee329c"/>
        <function-ref name="stopDone" scoped="" ref="0x40ee3378"/>
        <function-ref name="start" scoped="" ref="0x40ee3454"/>
        <function-ref name="stop" scoped="" ref="0x40ee3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ee396c" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ee396c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee3b2c"/>
        <function-ref name="getPayload" scoped="" ref="0x40ee3c08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ee3ce4"/>
        <function-ref name="cancel" scoped="" ref="0x40ee3dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ee3e9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ee163c" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ee163c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ee17fc"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ee18d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ee19b4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ee1a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ee1b6c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ee1300" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ee1300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ee14c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ee0ef8" loc="53:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ee0ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40edf0d4"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40edf1b0"/>
        <function-ref name="led1On" scoped="" ref="0x40edf28c"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40edf368"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40edf444"/>
        <function-ref name="get" scoped="" ref="0x40edf520"/>
        <function-ref name="led1Off" scoped="" ref="0x40edf5fc"/>
        <function-ref name="led2Off" scoped="" ref="0x40edf96c"/>
        <function-ref name="set" scoped="" ref="0x40edf6d8"/>
        <function-ref name="led0On" scoped="" ref="0x40edf7b4"/>
        <function-ref name="led2On" scoped="" ref="0x40edf890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40ee09e8" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ee09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ee0ba8"/>
        <function-ref name="noAck" scoped="" ref="0x40ee0c84"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ee0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ee1cfc" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ee1cfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ee1ebc"/>
        <function-ref name="source" scoped="" ref="0x40ee0010"/>
        <function-ref name="address" scoped="" ref="0x40ee00ec"/>
        <function-ref name="destination" scoped="" ref="0x40ee01c8"/>
        <function-ref name="setSource" scoped="" ref="0x40ee02a4"/>
        <function-ref name="setDestination" scoped="" ref="0x40ee0380"/>
        <function-ref name="type" scoped="" ref="0x40ee045c"/>
        <function-ref name="setType" scoped="" ref="0x40ee0538"/>
        <function-ref name="isForMe" scoped="" ref="0x40ee0614"/>
        <function-ref name="setGroup" scoped="" ref="0x40ee06f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ee07cc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f18050" loc="54:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f18050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f18210"/>
        <function-ref name="getPayload" scoped="" ref="0x40f182ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f183c8"/>
        <function-ref name="cancel" scoped="" ref="0x40f184a4"/>
        <function-ref name="sendDone" scoped="" ref="0x40f18580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f186dc" loc="55:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f186dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f1889c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40eded9c" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40eded9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40edd010"/>
        <function-ref name="getPayload" scoped="" ref="0x40edd0ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40edd1c8"/>
        <function-ref name="cancel" scoped="" ref="0x40edd2a4"/>
        <function-ref name="sendDone" scoped="" ref="0x40edd380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f194bc" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f194bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f1967c"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f19758"/>
        <function-ref name="getPayload" scoped="" ref="0x40f19834"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f19910"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f199ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40edd54c" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40edd54c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40edd71c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40f19b28" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f19b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f19ce8"/>
        <function-ref name="noAck" scoped="" ref="0x40f19dc4"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f19ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40edd858" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40edd858"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40edda18"/>
        <function-ref name="source" scoped="" ref="0x40eddaf4"/>
        <function-ref name="address" scoped="" ref="0x40eddbd0"/>
        <function-ref name="destination" scoped="" ref="0x40eddcac"/>
        <function-ref name="setSource" scoped="" ref="0x40eddd88"/>
        <function-ref name="setDestination" scoped="" ref="0x40edde64"/>
        <function-ref name="type" scoped="" ref="0x40f19010"/>
        <function-ref name="setType" scoped="" ref="0x40f190ec"/>
        <function-ref name="isForMe" scoped="" ref="0x40f191c8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f192a4"/>
        <function-ref name="localGroup" scoped="" ref="0x40f19380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f17c94" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f17c94"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f17e54"/>
        <function-ref name="stopDone" scoped="" ref="0x40f14010"/>
        <function-ref name="start" scoped="" ref="0x40f140ec"/>
        <function-ref name="stop" scoped="" ref="0x40f141c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f14bac" loc="52:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f14bac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403e9828"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f14d6c"/>
        <function-ref name="getPayload" scoped="" ref="0x40f14e48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f14f24"/>
        <function-ref name="cancel" scoped="" ref="0x40f13018"/>
        <function-ref name="sendDone" scoped="" ref="0x40f130f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f1791c" loc="49:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f1791c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f17adc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f145e8" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f145e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403e9828"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f147a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f12630" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f12630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f127f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f128cc"/>
        <function-ref name="led1On" scoped="" ref="0x40f129a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f12a84"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f12b60"/>
        <function-ref name="get" scoped="" ref="0x40f12c3c"/>
        <function-ref name="led1Off" scoped="" ref="0x40f12d18"/>
        <function-ref name="led2Off" scoped="" ref="0x40f0e0ec"/>
        <function-ref name="set" scoped="" ref="0x40f12df4"/>
        <function-ref name="led0On" scoped="" ref="0x40f12ed0"/>
        <function-ref name="led2On" scoped="" ref="0x40f0e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40f12150" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40f12150"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403e9828"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40f12310"/>
        <function-ref name="offset" scoped="" ref="0x40f123ec"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40f124c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f33558" loc="66:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f33558"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f33718"/>
        <function-ref name="stopDone" scoped="" ref="0x40f337f4"/>
        <function-ref name="start" scoped="" ref="0x40f338d0"/>
        <function-ref name="stop" scoped="" ref="0x40f339ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40f660d0" loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40f660d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f66290"/>
        <function-ref name="runTask" scoped="" ref="0x40f6636c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40f2b334" loc="74:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40f2b334"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f2b4f4"/>
        <function-ref name="stop" scoped="" ref="0x40f2b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40f4e010" loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40f4e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f4e1d0"/>
        <function-ref name="runTask" scoped="" ref="0x40f4e2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f331e0" loc="65:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f331e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f333a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40f25268" loc="75:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40f25268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40f25428"/>
        <function-ref name="flush" scoped="" ref="0x40f25504"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40f6898c" loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40f6898c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f68b4c"/>
        <function-ref name="runTask" scoped="" ref="0x40f68c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40f29d64" loc="72:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40f29d64"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40f29f24"/>
        <function-ref name="resetSend" scoped="" ref="0x40f2d018"/>
        <function-ref name="dataReceived" scoped="" ref="0x40f2d0f4"/>
        <function-ref name="resetReceive" scoped="" ref="0x40f2d1d0"/>
        <function-ref name="putData" scoped="" ref="0x40f2d2ac"/>
        <function-ref name="putDone" scoped="" ref="0x40f2d388"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40f2d464"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f2d5cc" loc="73:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f2d5cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f2d78c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f2d868"/>
        <function-ref name="led1On" scoped="" ref="0x40f2d944"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f2da20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f2dafc"/>
        <function-ref name="get" scoped="" ref="0x40f2dbd8"/>
        <function-ref name="led1Off" scoped="" ref="0x40f2dcb4"/>
        <function-ref name="led2Off" scoped="" ref="0x40f2b0ec"/>
        <function-ref name="set" scoped="" ref="0x40f2dd90"/>
        <function-ref name="led0On" scoped="" ref="0x40f2de6c"/>
        <function-ref name="led2On" scoped="" ref="0x40f2b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40f64c00" loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40f64c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f64dc0"/>
        <function-ref name="runTask" scoped="" ref="0x40f64e9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40f2fd08" loc="67:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40f2fd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40f2fec8"/>
        <function-ref name="nextByte" scoped="" ref="0x40f32010"/>
        <function-ref name="startSend" scoped="" ref="0x40f320ec"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40f321c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40f2cd40" loc="68:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40f2cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40f2cf00"/>
        <function-ref name="byteReceived" scoped="" ref="0x40f31010"/>
        <function-ref name="endPacket" scoped="" ref="0x40f310ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40fd4010" loc="275:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40fd4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fd41d0"/>
        <function-ref name="runTask" scoped="" ref="0x40fd42ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f9dd28" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f9dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403e9828"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f9def8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fd6010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fd60ec"/>
        <function-ref name="cancel" scoped="" ref="0x40fd61c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40fd62a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40fd4428" loc="158:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40fd4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fd45e8"/>
        <function-ref name="runTask" scoped="" ref="0x40fd46c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f9d98c" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f9d98c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403e9828"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f9db5c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40fd64c0" loc="54:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40fd64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403e9828"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40fd6690"/>
        <function-ref name="offset" scoped="" ref="0x40fd676c"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40fd6848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fd53e0" loc="57:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fd53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fd55a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fd567c"/>
        <function-ref name="led1On" scoped="" ref="0x40fd5758"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fd5834"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fd5910"/>
        <function-ref name="get" scoped="" ref="0x40fd59ec"/>
        <function-ref name="led1Off" scoped="" ref="0x40fd5ac8"/>
        <function-ref name="led2On" scoped="" ref="0x40fd5e38"/>
        <function-ref name="set" scoped="" ref="0x40fd5c80"/>
        <function-ref name="led2Off" scoped="" ref="0x40fd5ba4"/>
        <function-ref name="led0On" scoped="" ref="0x40fd5d5c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40fd6e38" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40fd6e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40fd5010"/>
        <function-ref name="nextByte" scoped="" ref="0x40fd50ec"/>
        <function-ref name="startSend" scoped="" ref="0x40fd51c8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40fd52a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40fd6984" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40fd6984"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40fd6b44"/>
        <function-ref name="byteReceived" scoped="" ref="0x40fd6c20"/>
        <function-ref name="endPacket" scoped="" ref="0x40fd6cfc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40fc8610" loc="50:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40fc8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fc87d0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40fc88ac"/>
        <function-ref name="receive" scoped="" ref="0x40fc8988"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40fc8a64"/>
        <function-ref name="receiveDone" scoped="" ref="0x40fc8b40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40fc8c1c"/>
        <function-ref name="sendDone" scoped="" ref="0x40fc8cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40fd2680" loc="48:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40fd2680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40fd2840"/>
        <function-ref name="resetSend" scoped="" ref="0x40fd291c"/>
        <function-ref name="dataReceived" scoped="" ref="0x40fd29f8"/>
        <function-ref name="resetReceive" scoped="" ref="0x40fd2ad4"/>
        <function-ref name="putData" scoped="" ref="0x40fd2bb0"/>
        <function-ref name="putDone" scoped="" ref="0x40fd2c8c"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40fd2d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fc8e60" loc="51:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fc8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fce050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fce12c"/>
        <function-ref name="led1On" scoped="" ref="0x40fce208"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fce2e4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fce3c0"/>
        <function-ref name="get" scoped="" ref="0x40fce49c"/>
        <function-ref name="led1Off" scoped="" ref="0x40fce578"/>
        <function-ref name="led2Off" scoped="" ref="0x40fce8e8"/>
        <function-ref name="set" scoped="" ref="0x40fce654"/>
        <function-ref name="led0On" scoped="" ref="0x40fce730"/>
        <function-ref name="led2On" scoped="" ref="0x40fce80c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40fef7d4" loc="42:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40fef7d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fef994"/>
        <function-ref name="receive" scoped="" ref="0x40fefa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40fd1a44" loc="41:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40fd1a44"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fd1c04"/>
        <function-ref name="receivedByte" scoped="" ref="0x40fd1ce0"/>
        <function-ref name="receive" scoped="" ref="0x40fd1dbc"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40fd1e98"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ff3010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40ff30ec"/>
        <function-ref name="sendDone" scoped="" ref="0x40ff31c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fd15e4" loc="40:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fd15e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fd17a4"/>
        <function-ref name="stop" scoped="" ref="0x40fd1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40fee5d4" loc="41:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40fee5d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fee794"/>
        <function-ref name="receive" scoped="" ref="0x40fee870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40feea34" loc="42:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40feea34"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40feebf4"/>
        <function-ref name="receivedByte" scoped="" ref="0x40feecd0"/>
        <function-ref name="receive" scoped="" ref="0x40feedac"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40feee88"/>
        <function-ref name="receiveDone" scoped="" ref="0x40fed010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40fed0ec"/>
        <function-ref name="sendDone" scoped="" ref="0x40fed1c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40fed510" loc="43:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40fed510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fedc00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40fec0fc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40fede5c"/>
        <function-ref name="overflow" scoped="" ref="0x40fec358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fee188" loc="40:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fee188"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fee348"/>
        <function-ref name="stop" scoped="" ref="0x40fee424"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40feba10" loc="50:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40feba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40febbd0"/>
        <function-ref name="receive" scoped="" ref="0x40febcac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40fff6b4" loc="53:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40fff6b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fff874"/>
        <function-ref name="stop" scoped="" ref="0x40fff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40feb2fc" loc="48:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40feb2fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40feb4bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40febe08" loc="51:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40febe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fff010"/>
        <function-ref name="receivedByte" scoped="" ref="0x40fff0ec"/>
        <function-ref name="receive" scoped="" ref="0x40fff1c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40fff2a4"/>
        <function-ref name="receiveDone" scoped="" ref="0x40fff380"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40fff45c"/>
        <function-ref name="sendDone" scoped="" ref="0x40fff538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ffeae0" loc="56:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ffeae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ffd1ec"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ffd6a4"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ffd448"/>
        <function-ref name="overflow" scoped="" ref="0x40ffd900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40fffee4" loc="55:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40fffee4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40ffe0b8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40ffe194"/>
        <function-ref name="rxDone" scoped="" ref="0x40ffe270"/>
        <function-ref name="txDone" scoped="" ref="0x40ffe34c"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40ffe428"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40ffe504"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40ffe5e0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40ffe6bc"/>
        <function-ref name="tx" scoped="" ref="0x40ffe798"/>
        <function-ref name="rx" scoped="" ref="0x40ffe874"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40feb618" loc="49:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40feb618"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40feb7d8"/>
        <function-ref name="stop" scoped="" ref="0x40feb8b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40fffacc" loc="54:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40fffacc"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fffc8c"/>
        <function-ref name="stop" scoped="" ref="0x40fffd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x41025810" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x41025810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x410259d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41025aac"/>
        <function-ref name="rxDone" scoped="" ref="0x41025b88"/>
        <function-ref name="txDone" scoped="" ref="0x41025c64"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41025d40"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41025e1c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41025ef8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41024010"/>
        <function-ref name="tx" scoped="" ref="0x410240ec"/>
        <function-ref name="rx" scoped="" ref="0x410241c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x41024ddc" loc="53:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x41024ddc"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41023010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x410230ec"/>
        <function-ref name="rxDone" scoped="" ref="0x410231c8"/>
        <function-ref name="txDone" scoped="" ref="0x410232a4"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41023380"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4102345c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41023538"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41023614"/>
        <function-ref name="tx" scoped="" ref="0x410236f0"/>
        <function-ref name="rx" scoped="" ref="0x410237cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x41025340" loc="48:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x41025340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41025500"/>
        <function-ref name="stop" scoped="" ref="0x410255dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x4102441c" loc="51:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x4102441c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410245dc"/>
        <function-ref name="stop" scoped="" ref="0x410246b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x4102490c" loc="52:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x4102490c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41024acc"/>
        <function-ref name="stop" scoped="" ref="0x41024ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x41026df4" loc="47:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x41026df4"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41025010"/>
        <function-ref name="stop" scoped="" ref="0x410250ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x41020010" loc="114:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x41020010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x41020e44" loc="117:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x41020e44"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4101f050"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4101f12c"/>
        <function-ref name="rxDone" scoped="" ref="0x4101f208"/>
        <function-ref name="txDone" scoped="" ref="0x4101f2e4"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4101f3c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4101f49c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4101f578"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x4101f654"/>
        <function-ref name="tx" scoped="" ref="0x4101f730"/>
        <function-ref name="rx" scoped="" ref="0x4101f80c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x4101fa10" loc="119:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x4101fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4101fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x4101e890" loc="122:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x4101e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4101ea50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4101eb2c"/>
        <function-ref name="rxDone" scoped="" ref="0x4101ec08"/>
        <function-ref name="txDone" scoped="" ref="0x4101ece4"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4101edc0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4101ee9c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4101d010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x4101d0ec"/>
        <function-ref name="tx" scoped="" ref="0x4101d1c8"/>
        <function-ref name="rx" scoped="" ref="0x4101d2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x41020954" loc="116:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x41020954"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41020b14"/>
        <function-ref name="stop" scoped="" ref="0x41020bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x4101fe44" loc="120:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x4101fe44"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4101e050"/>
        <function-ref name="stop" scoped="" ref="0x4101e12c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x4101e3a0" loc="121:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x4101e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4101e560"/>
        <function-ref name="stop" scoped="" ref="0x4101e63c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x4101d498" loc="124:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4101d498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4101d658"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4101d734"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4101d810"/>
        <function-ref name="actualMicro" scoped="" ref="0x4101d8ec"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4101d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4101dba8" loc="125:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4101dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4101dd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x41020444" loc="115:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x41020444"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41020604"/>
        <function-ref name="stop" scoped="" ref="0x410206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ff1774" loc="24:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ff1774"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ff1e64"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4105d358"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4105d0fc"/>
        <function-ref name="overflow" scoped="" ref="0x4105d5b4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4105a0c8" loc="24:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4105a0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4105a7b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4105ac70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4105aa14"/>
        <function-ref name="overflow" scoped="" ref="0x4105aecc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x41054a98" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41054a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x41054c58"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41054d34"/>
        <function-ref name="getControlA" scoped="" ref="0x41054e10"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41054eec"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41053010"/>
        <function-ref name="setControlB" scoped="" ref="0x410530ec"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x410531c8"/>
        <function-ref name="getControlB" scoped="" ref="0x410532a4"/>
        <function-ref name="setControlC" scoped="" ref="0x41053380"/>
        <function-ref name="setControlA" scoped="" ref="0x4105345c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x41053780" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x41053780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4108b0fc"/>
        <function-ref name="test" scoped="" ref="0x41052c2c"/>
        <function-ref name="get" scoped="" ref="0x41053d70"/>
        <function-ref name="captured" scoped="" ref="0x41052294"/>
        <function-ref name="reset" scoped="" ref="0x41052518"/>
        <function-ref name="isOn" scoped="" ref="0x41052e88"/>
        <function-ref name="set" scoped="" ref="0x41052010"/>
        <function-ref name="start" scoped="" ref="0x41052774"/>
        <function-ref name="stop" scoped="" ref="0x410529d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4108b7d0" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4108b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4108ac38"/>
        <function-ref name="fired" scoped="" ref="0x4108a2c8"/>
        <function-ref name="get" scoped="" ref="0x4108bdc0"/>
        <function-ref name="reset" scoped="" ref="0x4108a524"/>
        <function-ref name="isOn" scoped="" ref="0x4108ae94"/>
        <function-ref name="set" scoped="" ref="0x4108a044"/>
        <function-ref name="start" scoped="" ref="0x4108a780"/>
        <function-ref name="stop" scoped="" ref="0x4108a9dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4105992c" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4105992c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4105426c"/>
        <function-ref name="test" scoped="" ref="0x41056d84"/>
        <function-ref name="get" scoped="" ref="0x41059f1c"/>
        <function-ref name="setScale" scoped="" ref="0x410544c8"/>
        <function-ref name="getScale" scoped="" ref="0x4105474c"/>
        <function-ref name="reset" scoped="" ref="0x41056670"/>
        <function-ref name="overflow" scoped="" ref="0x41056414"/>
        <function-ref name="isOn" scoped="" ref="0x41054010"/>
        <function-ref name="set" scoped="" ref="0x41056190"/>
        <function-ref name="start" scoped="" ref="0x410568cc"/>
        <function-ref name="stop" scoped="" ref="0x41056b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x41084cf4" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41084cf4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x41084eb4"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41083010"/>
        <function-ref name="getControlA" scoped="" ref="0x410830ec"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x410831c8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x410832a4"/>
        <function-ref name="setControlB" scoped="" ref="0x41083380"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4108345c"/>
        <function-ref name="getControlB" scoped="" ref="0x41083538"/>
        <function-ref name="setControlC" scoped="" ref="0x41083614"/>
        <function-ref name="setControlA" scoped="" ref="0x410836f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x410807b4" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x410807b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4107fc38"/>
        <function-ref name="fired" scoped="" ref="0x4107f2c8"/>
        <function-ref name="get" scoped="" ref="0x41080da4"/>
        <function-ref name="reset" scoped="" ref="0x4107f524"/>
        <function-ref name="isOn" scoped="" ref="0x4107fe94"/>
        <function-ref name="set" scoped="" ref="0x4107f044"/>
        <function-ref name="start" scoped="" ref="0x4107f780"/>
        <function-ref name="stop" scoped="" ref="0x4107f9dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x41083a14" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x41083a14"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x41080394"/>
        <function-ref name="test" scoped="" ref="0x41082ebc"/>
        <function-ref name="get" scoped="" ref="0x41082044"/>
        <function-ref name="captured" scoped="" ref="0x41082524"/>
        <function-ref name="reset" scoped="" ref="0x410827a8"/>
        <function-ref name="isOn" scoped="" ref="0x41080138"/>
        <function-ref name="set" scoped="" ref="0x410822a0"/>
        <function-ref name="start" scoped="" ref="0x41082a04"/>
        <function-ref name="stop" scoped="" ref="0x41082c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4107e2b4" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4107e2b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4107d724"/>
        <function-ref name="fired" scoped="" ref="0x4107ed84"/>
        <function-ref name="get" scoped="" ref="0x4107e8a4"/>
        <function-ref name="reset" scoped="" ref="0x4107d010"/>
        <function-ref name="isOn" scoped="" ref="0x4107d980"/>
        <function-ref name="set" scoped="" ref="0x4107eb00"/>
        <function-ref name="start" scoped="" ref="0x4107d26c"/>
        <function-ref name="stop" scoped="" ref="0x4107d4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4107dd78" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4107dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4107a26c"/>
        <function-ref name="fired" scoped="" ref="0x4107b88c"/>
        <function-ref name="get" scoped="" ref="0x4107b3ac"/>
        <function-ref name="reset" scoped="" ref="0x4107bae8"/>
        <function-ref name="isOn" scoped="" ref="0x4107a4c8"/>
        <function-ref name="set" scoped="" ref="0x4107b608"/>
        <function-ref name="start" scoped="" ref="0x4107bd44"/>
        <function-ref name="stop" scoped="" ref="0x4107a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41089ad8" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41089ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x410844c8"/>
        <function-ref name="test" scoped="" ref="0x41084010"/>
        <function-ref name="get" scoped="" ref="0x410860e8"/>
        <function-ref name="setScale" scoped="" ref="0x41084724"/>
        <function-ref name="getScale" scoped="" ref="0x410849a8"/>
        <function-ref name="reset" scoped="" ref="0x41086824"/>
        <function-ref name="overflow" scoped="" ref="0x410865c8"/>
        <function-ref name="isOn" scoped="" ref="0x4108426c"/>
        <function-ref name="set" scoped="" ref="0x41086344"/>
        <function-ref name="start" scoped="" ref="0x41086a80"/>
        <function-ref name="stop" scoped="" ref="0x41086cdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410b2010" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410b2010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4030ef18"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4030ef18"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410b21d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x410b23d4" loc="47:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410b23d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x410b0ce4"/>
        <function-ref name="test" scoped="" ref="0x410b082c"/>
        <function-ref name="get" scoped="" ref="0x410b29c4"/>
        <function-ref name="setScale" scoped="" ref="0x410af010"/>
        <function-ref name="getScale" scoped="" ref="0x410af294"/>
        <function-ref name="reset" scoped="" ref="0x410b0118"/>
        <function-ref name="overflow" scoped="" ref="0x410b2ea4"/>
        <function-ref name="isOn" scoped="" ref="0x410b0a88"/>
        <function-ref name="set" scoped="" ref="0x410b2c20"/>
        <function-ref name="start" scoped="" ref="0x410b0374"/>
        <function-ref name="stop" scoped="" ref="0x410b05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x410b4414" loc="45:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x410b4414"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410b4b04"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410ad010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x410b4d60"/>
        <function-ref name="overflow" scoped="" ref="0x410ad26c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x410ad538" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410ad538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x410ace6c"/>
        <function-ref name="test" scoped="" ref="0x410ac9b4"/>
        <function-ref name="get" scoped="" ref="0x410adb28"/>
        <function-ref name="setScale" scoped="" ref="0x410ab0fc"/>
        <function-ref name="getScale" scoped="" ref="0x410ab380"/>
        <function-ref name="reset" scoped="" ref="0x410ac2a0"/>
        <function-ref name="overflow" scoped="" ref="0x410ac044"/>
        <function-ref name="isOn" scoped="" ref="0x410acc10"/>
        <function-ref name="set" scoped="" ref="0x410add84"/>
        <function-ref name="start" scoped="" ref="0x410ac4fc"/>
        <function-ref name="stop" scoped="" ref="0x410ac758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x410e40b8" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x410e40b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410e47a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410e4c60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x410e4a04"/>
        <function-ref name="overflow" scoped="" ref="0x410e4ebc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x410e6f10" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x410e6f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410e5624"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410e5adc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x410e5880"/>
        <function-ref name="overflow" scoped="" ref="0x410e5d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x410df1fc" loc="47:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x410df1fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x410df3bc"/>
        <function-ref name="offset" scoped="" ref="0x410df498"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x410df574"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x410d8b08" loc="49:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410d8b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410d8cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x410d8da4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d8e80"/>
        <function-ref name="cancel" scoped="" ref="0x410c9010"/>
        <function-ref name="sendDone" scoped="" ref="0x410c90ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410c9228" loc="50:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410c9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410c93e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x410c94c4"/>
        <function-ref name="getPayload" scoped="" ref="0x410c95a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410c967c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410c9758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410c9894" loc="51:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410c9894"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410c9a54"/>
        <function-ref name="source" scoped="" ref="0x410c9b30"/>
        <function-ref name="address" scoped="" ref="0x410c9c0c"/>
        <function-ref name="destination" scoped="" ref="0x410c9ce8"/>
        <function-ref name="setSource" scoped="" ref="0x410c9dc4"/>
        <function-ref name="setDestination" scoped="" ref="0x410c9ea0"/>
        <function-ref name="type" scoped="" ref="0x41104010"/>
        <function-ref name="setType" scoped="" ref="0x411040ec"/>
        <function-ref name="isForMe" scoped="" ref="0x411041c8"/>
        <function-ref name="setGroup" scoped="" ref="0x411042a4"/>
        <function-ref name="localGroup" scoped="" ref="0x41104380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411044dc" loc="52:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411044dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4110469c"/>
        <function-ref name="noAck" scoped="" ref="0x41104778"/>
        <function-ref name="wasAcked" scoped="" ref="0x41104854"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416ad0c4" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416ad0c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416ad284"/>
        <function-ref name="getPayload" scoped="" ref="0x416ad360"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416ad43c"/>
        <function-ref name="cancel" scoped="" ref="0x416ad518"/>
        <function-ref name="sendDone" scoped="" ref="0x416ad5f4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416ad760" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416ad760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416ad920"/>
        <function-ref name="getPayload" scoped="" ref="0x416ad9fc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416adad8"/>
        <function-ref name="cancel" scoped="" ref="0x416adbb4"/>
        <function-ref name="sendDone" scoped="" ref="0x416adc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416addcc" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416addcc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416ac010"/>
        <function-ref name="source" scoped="" ref="0x416ac0ec"/>
        <function-ref name="address" scoped="" ref="0x416ac1c8"/>
        <function-ref name="destination" scoped="" ref="0x416ac2a4"/>
        <function-ref name="setSource" scoped="" ref="0x416ac380"/>
        <function-ref name="setDestination" scoped="" ref="0x416ac45c"/>
        <function-ref name="type" scoped="" ref="0x416ac538"/>
        <function-ref name="setType" scoped="" ref="0x416ac614"/>
        <function-ref name="isForMe" scoped="" ref="0x416ac6f0"/>
        <function-ref name="setGroup" scoped="" ref="0x416ac7cc"/>
        <function-ref name="localGroup" scoped="" ref="0x416ac8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410d0328" loc="44:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410d0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410d04e8"/>
        <function-ref name="getPayload" scoped="" ref="0x410d05c4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d06a0"/>
        <function-ref name="cancel" scoped="" ref="0x410d077c"/>
        <function-ref name="sendDone" scoped="" ref="0x410d0858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x410ce100" loc="48:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410ce2d0"/>
        <function-ref name="getPayload" scoped="" ref="0x410ce3ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410ce488"/>
        <function-ref name="cancel" scoped="" ref="0x410ce564"/>
        <function-ref name="sendDone" scoped="" ref="0x410ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410cf984" loc="46:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410cf984"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410cfb54"/>
        <function-ref name="getPayload" scoped="" ref="0x410cfc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410cfd0c"/>
        <function-ref name="cancel" scoped="" ref="0x410cfde8"/>
        <function-ref name="sendDone" scoped="" ref="0x410cfec4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x410cc3e0" loc="50:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410cc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410cc5a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410cc67c"/>
        <function-ref name="getPayload" scoped="" ref="0x410cc758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410cc834"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410cc910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x410cca8c" loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x410cca8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410ccc4c"/>
        <function-ref name="runTask" scoped="" ref="0x410ccd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x410ccea4" loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x410ccea4"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410cb078"/>
        <function-ref name="runTask" scoped="" ref="0x410cb154"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410ce77c" loc="49:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410ce77c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410ce93c"/>
        <function-ref name="source" scoped="" ref="0x410cea18"/>
        <function-ref name="address" scoped="" ref="0x410ceaf4"/>
        <function-ref name="destination" scoped="" ref="0x410cebd0"/>
        <function-ref name="setSource" scoped="" ref="0x410cecac"/>
        <function-ref name="setDestination" scoped="" ref="0x410ced88"/>
        <function-ref name="type" scoped="" ref="0x410cee64"/>
        <function-ref name="setType" scoped="" ref="0x410cc010"/>
        <function-ref name="isForMe" scoped="" ref="0x410cc0ec"/>
        <function-ref name="setGroup" scoped="" ref="0x410cc1c8"/>
        <function-ref name="localGroup" scoped="" ref="0x410cc2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41102b68" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="SenseAppC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41102b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
            <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41101c00"/>
        <function-ref name="maxSize" scoped="" ref="0x41101650"/>
        <function-ref name="empty" scoped="" ref="0x411011d0"/>
        <function-ref name="put" scoped="" ref="0x41101890"/>
        <function-ref name="size" scoped="" ref="0x41101410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416db570" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="SenseAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416db570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
            <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416da5c0"/>
        <function-ref name="maxSize" scoped="" ref="0x416da010"/>
        <function-ref name="empty" scoped="" ref="0x416dbb44"/>
        <function-ref name="put" scoped="" ref="0x416da250"/>
        <function-ref name="size" scoped="" ref="0x416dbd84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416db1ec" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="SenseAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416db1ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416db3ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x41100dc4" loc="43:/opt/tinyos/tos/system/QueueC.nc">
      <component-ref qname="SenseAppC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41100dc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
              <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x410ffa6c"/>
        <function-ref name="enqueue" scoped="" ref="0x410fd124"/>
        <function-ref name="element" scoped="" ref="0x410fd458"/>
        <function-ref name="maxSize" scoped="" ref="0x410ff82c"/>
        <function-ref name="dequeue" scoped="" ref="0x410ffdb8"/>
        <function-ref name="empty" scoped="" ref="0x410ff3ac"/>
        <function-ref name="size" scoped="" ref="0x410ff5ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410f799c" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410f799c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410f7b5c"/>
        <function-ref name="stop" scoped="" ref="0x410f7c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x410f226c" loc="52:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x410f226c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410f242c"/>
        <function-ref name="incrementCounter" scoped="" ref="0x410f2508"/>
        <function-ref name="reset" scoped="" ref="0x410f25e4"/>
        <function-ref name="start" scoped="" ref="0x410f26c0"/>
        <function-ref name="stop" scoped="" ref="0x410f279c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x410f3028" loc="51:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x410f3028"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x410f32c4"/>
        <function-ref name="stop" scoped="" ref="0x410f3634"/>
        <function-ref name="newData" scoped="" ref="0x410f33a0"/>
        <function-ref name="start" scoped="" ref="0x410f347c"/>
        <function-ref name="requestSeqno" scoped="" ref="0x410f3558"/>
        <function-ref name="requestData" scoped="" ref="0x410f31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410f64f0" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410f64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410f66b0"/>
        <function-ref name="stop" scoped="" ref="0x410f678c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x410f2cec" loc="53:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x410f2cec"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410f2eac"/>
        <function-ref name="stop" scoped="" ref="0x410ee010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x410e7b5c" loc="57:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x410e7b5c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410e7d1c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x410e740c" loc="56:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x410e740c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e75cc"/>
        <function-ref name="getPayload" scoped="" ref="0x410e76a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e7784"/>
        <function-ref name="cancel" scoped="" ref="0x410e7860"/>
        <function-ref name="sendDone" scoped="" ref="0x410e793c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x410e8978" loc="53:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410e8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e8b38"/>
        <function-ref name="getPayload" scoped="" ref="0x410e8c14"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e8cf0"/>
        <function-ref name="cancel" scoped="" ref="0x410e8dcc"/>
        <function-ref name="sendDone" scoped="" ref="0x410e8ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x410e9aa8" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x410e9aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410e9c68"/>
        <function-ref name="incrementCounter" scoped="" ref="0x410e9d44"/>
        <function-ref name="reset" scoped="" ref="0x410e9e20"/>
        <function-ref name="start" scoped="" ref="0x410e9efc"/>
        <function-ref name="stop" scoped="" ref="0x410e8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x410e9010" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x410e9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x410e92ac"/>
        <function-ref name="stop" scoped="" ref="0x410e961c"/>
        <function-ref name="newData" scoped="" ref="0x410e9388"/>
        <function-ref name="start" scoped="" ref="0x410e9464"/>
        <function-ref name="requestSeqno" scoped="" ref="0x410e9540"/>
        <function-ref name="requestData" scoped="" ref="0x410e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x410e7040" loc="54:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x410e7040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410e7200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410e7e84" loc="59:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410e7e84"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4112306c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41123148"/>
        <function-ref name="led1On" scoped="" ref="0x41123224"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41123300"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411233dc"/>
        <function-ref name="get" scoped="" ref="0x411234b8"/>
        <function-ref name="led1Off" scoped="" ref="0x41123594"/>
        <function-ref name="led2Off" scoped="" ref="0x41123904"/>
        <function-ref name="set" scoped="" ref="0x41123670"/>
        <function-ref name="led0On" scoped="" ref="0x4112374c"/>
        <function-ref name="led2On" scoped="" ref="0x41123828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410ee860" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410ee860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410eea20"/>
        <function-ref name="stop" scoped="" ref="0x410eeafc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x410e8560" loc="51:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x410e8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410e8720"/>
        <function-ref name="stop" scoped="" ref="0x410e87fc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41138010" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41138010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411381d0"/>
        <function-ref name="getPayload" scoped="" ref="0x411382ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41138388"/>
        <function-ref name="cancel" scoped="" ref="0x41138464"/>
        <function-ref name="sendDone" scoped="" ref="0x41138540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4113867c" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4113867c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4113883c"/>
        <function-ref name="payloadLength" scoped="" ref="0x41138918"/>
        <function-ref name="getPayload" scoped="" ref="0x411389f4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41138ad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41138bac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41138ce8" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41138ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41138ea8"/>
        <function-ref name="source" scoped="" ref="0x41136010"/>
        <function-ref name="address" scoped="" ref="0x411360ec"/>
        <function-ref name="destination" scoped="" ref="0x411361c8"/>
        <function-ref name="setSource" scoped="" ref="0x411362a4"/>
        <function-ref name="setDestination" scoped="" ref="0x41136380"/>
        <function-ref name="type" scoped="" ref="0x4113645c"/>
        <function-ref name="setType" scoped="" ref="0x41136538"/>
        <function-ref name="isForMe" scoped="" ref="0x41136614"/>
        <function-ref name="setGroup" scoped="" ref="0x411366f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411367cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41136928" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41136928"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41136ae8"/>
        <function-ref name="noAck" scoped="" ref="0x41136bc4"/>
        <function-ref name="wasAcked" scoped="" ref="0x41136ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416c9398" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416c9398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416c9558"/>
        <function-ref name="getPayload" scoped="" ref="0x416c9634"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416c9710"/>
        <function-ref name="cancel" scoped="" ref="0x416c97ec"/>
        <function-ref name="sendDone" scoped="" ref="0x416c98c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x416c9a04" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x416c9a04"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416c9bc4"/>
        <function-ref name="payloadLength" scoped="" ref="0x416c9ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x416c9d7c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416c9e58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x416c814c" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416c814c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416c830c"/>
        <function-ref name="source" scoped="" ref="0x416c83e8"/>
        <function-ref name="address" scoped="" ref="0x416c84c4"/>
        <function-ref name="destination" scoped="" ref="0x416c85a0"/>
        <function-ref name="setSource" scoped="" ref="0x416c867c"/>
        <function-ref name="setDestination" scoped="" ref="0x416c8758"/>
        <function-ref name="type" scoped="" ref="0x416c8834"/>
        <function-ref name="setType" scoped="" ref="0x416c8910"/>
        <function-ref name="isForMe" scoped="" ref="0x416c89ec"/>
        <function-ref name="setGroup" scoped="" ref="0x416c8ac8"/>
        <function-ref name="localGroup" scoped="" ref="0x416c8ba4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x416c8d00" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x416c8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x416c8ec0"/>
        <function-ref name="noAck" scoped="" ref="0x416c7010"/>
        <function-ref name="wasAcked" scoped="" ref="0x416c70ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4171aa80" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4171aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4171ac40"/>
        <function-ref name="getPayload" scoped="" ref="0x4171ad1c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4171adf8"/>
        <function-ref name="cancel" scoped="" ref="0x4171aed4"/>
        <function-ref name="sendDone" scoped="" ref="0x41716010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4171617c" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4171617c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4171633c"/>
        <function-ref name="getPayload" scoped="" ref="0x41716418"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417164f4"/>
        <function-ref name="cancel" scoped="" ref="0x417165d0"/>
        <function-ref name="sendDone" scoped="" ref="0x417166ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417167e8" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417167e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417169a8"/>
        <function-ref name="source" scoped="" ref="0x41716a84"/>
        <function-ref name="address" scoped="" ref="0x41716b60"/>
        <function-ref name="destination" scoped="" ref="0x41716c3c"/>
        <function-ref name="setSource" scoped="" ref="0x41716d18"/>
        <function-ref name="setDestination" scoped="" ref="0x41716df4"/>
        <function-ref name="type" scoped="" ref="0x41716ed0"/>
        <function-ref name="setType" scoped="" ref="0x41715010"/>
        <function-ref name="isForMe" scoped="" ref="0x417150ec"/>
        <function-ref name="setGroup" scoped="" ref="0x417151c8"/>
        <function-ref name="localGroup" scoped="" ref="0x417152a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4113454c" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4113454c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4113470c"/>
        <function-ref name="payloadLength" scoped="" ref="0x411347e8"/>
        <function-ref name="getPayload" scoped="" ref="0x411348c4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411349a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41134a7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41134250" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41134250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41134410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41134bb8" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41134bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41134d78"/>
        <function-ref name="source" scoped="" ref="0x41134e54"/>
        <function-ref name="address" scoped="" ref="0x41133010"/>
        <function-ref name="destination" scoped="" ref="0x411330ec"/>
        <function-ref name="setSource" scoped="" ref="0x411331c8"/>
        <function-ref name="setDestination" scoped="" ref="0x411332a4"/>
        <function-ref name="type" scoped="" ref="0x41133380"/>
        <function-ref name="setType" scoped="" ref="0x4113345c"/>
        <function-ref name="isForMe" scoped="" ref="0x41133538"/>
        <function-ref name="setGroup" scoped="" ref="0x41133614"/>
        <function-ref name="localGroup" scoped="" ref="0x411336f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41132b68" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41132b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41132d28"/>
        <function-ref name="getPayload" scoped="" ref="0x41132e04"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41132ee0"/>
        <function-ref name="cancel" scoped="" ref="0x41131010"/>
        <function-ref name="sendDone" scoped="" ref="0x411310ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41131228" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41131228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411313e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x411314c4"/>
        <function-ref name="getPayload" scoped="" ref="0x411315a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4113167c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41131758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41131894" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41131894"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41131a54"/>
        <function-ref name="source" scoped="" ref="0x41131b30"/>
        <function-ref name="address" scoped="" ref="0x41131c0c"/>
        <function-ref name="destination" scoped="" ref="0x41131ce8"/>
        <function-ref name="setSource" scoped="" ref="0x41131dc4"/>
        <function-ref name="setDestination" scoped="" ref="0x41131ea0"/>
        <function-ref name="type" scoped="" ref="0x41130010"/>
        <function-ref name="setType" scoped="" ref="0x411300ec"/>
        <function-ref name="isForMe" scoped="" ref="0x411301c8"/>
        <function-ref name="setGroup" scoped="" ref="0x411302a4"/>
        <function-ref name="localGroup" scoped="" ref="0x41130380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411304dc" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411304dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4113069c"/>
        <function-ref name="noAck" scoped="" ref="0x41130778"/>
        <function-ref name="wasAcked" scoped="" ref="0x41130854"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41708628" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41708628"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417087e8"/>
        <function-ref name="getPayload" scoped="" ref="0x417088c4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417089a0"/>
        <function-ref name="cancel" scoped="" ref="0x41708a7c"/>
        <function-ref name="sendDone" scoped="" ref="0x41708b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41708c94" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41708c94"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41708e54"/>
        <function-ref name="payloadLength" scoped="" ref="0x41706010"/>
        <function-ref name="getPayload" scoped="" ref="0x417060ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417061c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417062a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x417063e0" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417063e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417065a0"/>
        <function-ref name="source" scoped="" ref="0x4170667c"/>
        <function-ref name="address" scoped="" ref="0x41706758"/>
        <function-ref name="destination" scoped="" ref="0x41706834"/>
        <function-ref name="setSource" scoped="" ref="0x41706910"/>
        <function-ref name="setDestination" scoped="" ref="0x417069ec"/>
        <function-ref name="type" scoped="" ref="0x41706ac8"/>
        <function-ref name="setType" scoped="" ref="0x41706ba4"/>
        <function-ref name="isForMe" scoped="" ref="0x41706c80"/>
        <function-ref name="setGroup" scoped="" ref="0x41706d5c"/>
        <function-ref name="localGroup" scoped="" ref="0x41706e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41705010" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41705010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x417051d0"/>
        <function-ref name="noAck" scoped="" ref="0x417052ac"/>
        <function-ref name="wasAcked" scoped="" ref="0x41705388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41703d28" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41703d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41703ee8"/>
        <function-ref name="getPayload" scoped="" ref="0x41700010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417000ec"/>
        <function-ref name="cancel" scoped="" ref="0x417001c8"/>
        <function-ref name="sendDone" scoped="" ref="0x417002a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41700410" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41700410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417005d0"/>
        <function-ref name="getPayload" scoped="" ref="0x417006ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41700788"/>
        <function-ref name="cancel" scoped="" ref="0x41700864"/>
        <function-ref name="sendDone" scoped="" ref="0x41700940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41700a7c" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41700a7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41700c3c"/>
        <function-ref name="source" scoped="" ref="0x41700d18"/>
        <function-ref name="address" scoped="" ref="0x41700df4"/>
        <function-ref name="destination" scoped="" ref="0x41700ed0"/>
        <function-ref name="setSource" scoped="" ref="0x416ff010"/>
        <function-ref name="setDestination" scoped="" ref="0x416ff0ec"/>
        <function-ref name="type" scoped="" ref="0x416ff1c8"/>
        <function-ref name="setType" scoped="" ref="0x416ff2a4"/>
        <function-ref name="isForMe" scoped="" ref="0x416ff380"/>
        <function-ref name="setGroup" scoped="" ref="0x416ff45c"/>
        <function-ref name="localGroup" scoped="" ref="0x416ff538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4112e1f4" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4112e1f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4112e3b4"/>
        <function-ref name="payloadLength" scoped="" ref="0x4112e490"/>
        <function-ref name="getPayload" scoped="" ref="0x4112e56c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4112e648"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4112e724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4112fec8" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4112fec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4112e0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4112e860" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4112e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4112ea20"/>
        <function-ref name="source" scoped="" ref="0x4112eafc"/>
        <function-ref name="address" scoped="" ref="0x4112ebd8"/>
        <function-ref name="destination" scoped="" ref="0x4112ecb4"/>
        <function-ref name="setSource" scoped="" ref="0x4112ed90"/>
        <function-ref name="setDestination" scoped="" ref="0x4112ee6c"/>
        <function-ref name="type" scoped="" ref="0x4112d010"/>
        <function-ref name="setType" scoped="" ref="0x4112d0ec"/>
        <function-ref name="isForMe" scoped="" ref="0x4112d1c8"/>
        <function-ref name="setGroup" scoped="" ref="0x4112d2a4"/>
        <function-ref name="localGroup" scoped="" ref="0x4112d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4112c384" loc="46:/opt/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4112c384"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4112c544"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4112c6cc" loc="47:/opt/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4112c6cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4112c88c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4112c968"/>
        <function-ref name="led1On" scoped="" ref="0x4112ca44"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4112cb20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4112cbfc"/>
        <function-ref name="get" scoped="" ref="0x4112ccd8"/>
        <function-ref name="led1Off" scoped="" ref="0x4112cdb4"/>
        <function-ref name="led2Off" scoped="" ref="0x411291c8"/>
        <function-ref name="set" scoped="" ref="0x4112ce90"/>
        <function-ref name="led0On" scoped="" ref="0x41129010"/>
        <function-ref name="led2On" scoped="" ref="0x411290ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x411aa400" loc="51:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="SenseAppC.ChangerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x411aa400"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ada1c"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b3010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x411aa9d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x4112a65c" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="SenseAppC.ChangerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x4112a65c"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ada1c"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b3010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x411aa154"/>
        <function-ref name="get" scoped="" ref="0x4112ac4c"/>
        <function-ref name="set" scoped="" ref="0x4112aea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x41745a24" loc="62:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x41745a24"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41745be4"/>
        <function-ref name="runTask" scoped="" ref="0x41745cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x416f16d4" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x416f16d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x416f1970"/>
        <function-ref name="storeData" scoped="" ref="0x416f1ce0"/>
        <function-ref name="newData" scoped="" ref="0x416f1a4c"/>
        <function-ref name="start" scoped="" ref="0x416f1b28"/>
        <function-ref name="requestSeqno" scoped="" ref="0x416f1c04"/>
        <function-ref name="stop" scoped="" ref="0x416f1894"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x416f2d88" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x416f2d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ada1c"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b3010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x416f1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x416f1e3c" loc="52:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x416f1e3c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41745010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x417450ec"/>
        <function-ref name="led1On" scoped="" ref="0x417451c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x417452a4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41745380"/>
        <function-ref name="get" scoped="" ref="0x4174545c"/>
        <function-ref name="led1Off" scoped="" ref="0x41745538"/>
        <function-ref name="led0On" scoped="" ref="0x417458a8"/>
        <function-ref name="set" scoped="" ref="0x417456f0"/>
        <function-ref name="led2On" scoped="" ref="0x41745614"/>
        <function-ref name="led2Off" scoped="" ref="0x417457cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x416f2010" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x416f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ada1c"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b3010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x416f2adc"/>
        <function-ref name="get" scoped="" ref="0x416f2600"/>
        <function-ref name="set" scoped="" ref="0x416f285c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x416f4b18" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x416f4b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x416f4cd8"/>
        <function-ref name="stop" scoped="" ref="0x416f4db4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41180634" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41180634"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411807f4"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411808d0"/>
        <function-ref name="reset" scoped="" ref="0x411809ac"/>
        <function-ref name="start" scoped="" ref="0x41180a88"/>
        <function-ref name="stop" scoped="" ref="0x41180b64"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x411ac904" loc="55:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x411ac904"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411acad4"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411acbb0"/>
        <function-ref name="reset" scoped="" ref="0x411acc8c"/>
        <function-ref name="start" scoped="" ref="0x411acd68"/>
        <function-ref name="stop" scoped="" ref="0x411ace44"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x41734cb4" loc="62:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x41734cb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41734e74"/>
        <function-ref name="clear" scoped="" ref="0x41733010"/>
        <function-ref name="toggle" scoped="" ref="0x417330ec"/>
        <function-ref name="get" scoped="" ref="0x417331c8"/>
        <function-ref name="assign" scoped="" ref="0x417332a4"/>
        <function-ref name="setAll" scoped="" ref="0x41733380"/>
        <function-ref name="set" scoped="" ref="0x4173345c"/>
        <function-ref name="size" scoped="" ref="0x41733538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x41733694" loc="63:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x41733694"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41733854"/>
        <function-ref name="clear" scoped="" ref="0x41733930"/>
        <function-ref name="toggle" scoped="" ref="0x41733a0c"/>
        <function-ref name="get" scoped="" ref="0x41733ae8"/>
        <function-ref name="assign" scoped="" ref="0x41733bc4"/>
        <function-ref name="setAll" scoped="" ref="0x41733ca0"/>
        <function-ref name="set" scoped="" ref="0x41733d7c"/>
        <function-ref name="size" scoped="" ref="0x41733e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41732010" loc="64:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41732010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x417321d0"/>
        <function-ref name="rand32" scoped="" ref="0x417322ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41737470" loc="58:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41737470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41737640"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4173771c"/>
        <function-ref name="reset" scoped="" ref="0x417377f8"/>
        <function-ref name="start" scoped="" ref="0x417378d4"/>
        <function-ref name="stop" scoped="" ref="0x417379b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417370e4" loc="57:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417370e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417372a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x41731010" loc="154:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x41731010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417311d0"/>
        <function-ref name="runTask" scoped="" ref="0x417312ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x417323e8" loc="65:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x417323e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x417325a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41732684"/>
        <function-ref name="led1On" scoped="" ref="0x41732760"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4173283c"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41732918"/>
        <function-ref name="get" scoped="" ref="0x417329f4"/>
        <function-ref name="led1Off" scoped="" ref="0x41732ad0"/>
        <function-ref name="led0On" scoped="" ref="0x41732e40"/>
        <function-ref name="set" scoped="" ref="0x41732c88"/>
        <function-ref name="led2On" scoped="" ref="0x41732bac"/>
        <function-ref name="led2Off" scoped="" ref="0x41732d64"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41737ba4" loc="61:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41737ba4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41734610"/>
        <function-ref name="fired" scoped="" ref="0x417368e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41734010"/>
        <function-ref name="isOneShot" scoped="" ref="0x41736d60"/>
        <function-ref name="getdt" scoped="" ref="0x41734a90"/>
        <function-ref name="gett0" scoped="" ref="0x41734850"/>
        <function-ref name="isRunning" scoped="" ref="0x41736b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x417361d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41734310"/>
        <function-ref name="startOneShot" scoped="" ref="0x41736438"/>
        <function-ref name="stop" scoped="" ref="0x417366a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x417307a0" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x417307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4172d190"/>
        <function-ref name="fired" scoped="" ref="0x4172f4b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4172fb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x4172f938"/>
        <function-ref name="getdt" scoped="" ref="0x4172d610"/>
        <function-ref name="gett0" scoped="" ref="0x4172d3d0"/>
        <function-ref name="isRunning" scoped="" ref="0x4172f6f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41730d74"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4172fe78"/>
        <function-ref name="startOneShot" scoped="" ref="0x4172f010"/>
        <function-ref name="stop" scoped="" ref="0x4172f278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4172c240" loc="46:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4172c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4172c400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x4172c55c" loc="47:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x4172c55c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4172c71c"/>
        <function-ref name="clear" scoped="" ref="0x4172c7f8"/>
        <function-ref name="toggle" scoped="" ref="0x4172c8d4"/>
        <function-ref name="get" scoped="" ref="0x4172c9b0"/>
        <function-ref name="assign" scoped="" ref="0x4172ca8c"/>
        <function-ref name="setAll" scoped="" ref="0x4172cb68"/>
        <function-ref name="set" scoped="" ref="0x4172cc44"/>
        <function-ref name="size" scoped="" ref="0x4172cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4172b950" loc="46:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4172b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4172bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x4172bc6c" loc="47:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x4172bc6c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4172be2c"/>
        <function-ref name="clear" scoped="" ref="0x4172bf08"/>
        <function-ref name="toggle" scoped="" ref="0x4172a010"/>
        <function-ref name="get" scoped="" ref="0x4172a0ec"/>
        <function-ref name="assign" scoped="" ref="0x4172a1c8"/>
        <function-ref name="setAll" scoped="" ref="0x4172a2a4"/>
        <function-ref name="set" scoped="" ref="0x4172a380"/>
        <function-ref name="size" scoped="" ref="0x4172a45c"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x40404770" loc="43:/opt/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x40404018" loc="41:/opt/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x404043e0" loc="42:/opt/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40405168" loc="50:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fdd54" loc="50:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40405010" loc="50:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x403fe5e4" loc="44:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fe298" loc="44:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x403fe48c" loc="44:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x403fd384" loc="47:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fd010" loc="47:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x403fd22c" loc="47:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40400e74" loc="43:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40400d24" loc="43:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x403fd938" loc="49:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fd7e8" loc="49:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x403feb84" loc="46:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fea34" loc="46:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403b3b9c" loc="60:/opt/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x403b51b4" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403b5064" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x403b5e8c" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403b5d3c" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x403b8974" loc="104:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403b5690" loc="130:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40411b60" loc="48:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40411b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x404162c8" loc="60:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40411b60"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40416178" loc="60:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40411b60"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x404267ac" loc="49:/opt/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404267ac"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40426c18" loc="55:/opt/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4042d39c" loc="63:/opt/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404267ac"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4042d084" loc="63:/opt/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4042d244" loc="63:/opt/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404267ac"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4032c010" loc="67:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4032c4f8" loc="75:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x403f3268" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f4f28" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403f3110" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x403f9c98" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f9950" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403f9b24" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403f9424" loc="112:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x403f3e4c" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f3cfc" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x403fcb30" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fc7f0" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x403fc9d8" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4040d7d8" loc="50:/opt/tinyos/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040d7d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40412320" loc="97:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040d7d8"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40414634" loc="80:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x4040dc30" loc="61:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40414bfc" loc="89:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040d7d8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40414aac" loc="89:/opt/tinyos/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040d7d8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4041412c" loc="72:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x403b76f4" loc="95:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403b7b88" loc="105:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404038ac" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40403374" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40403578" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4040374c" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40409358" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40409010" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404091e4" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40402a6c" loc="123:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4040b51c" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4040b3cc" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404021bc" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4040be58" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40402064" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x403fb7a4" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
              <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fb284" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x403fb454" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403fb628" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4041d0ec" loc="61:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4041d4fc" loc="67:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4041d944" loc="72:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4041c194" loc="83:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x4041cddc" loc="100:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40424274" loc="117:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4041dd34" loc="77:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4042497c" loc="134:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4042482c" loc="134:/opt/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4041ece0" loc="56:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4041c5dc" loc="89:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x4041c9cc" loc="94:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x403bba30" loc="43:/opt/tinyos/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bba30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x40407b3c" loc="73:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bba30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x4040f960" loc="90:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bba30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4040f810" loc="90:/opt/tinyos/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bba30"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x4003563c"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x4003563c"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x4040e210" loc="101:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bba30"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4040e0c0" loc="101:/opt/tinyos/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40407740" loc="65:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4040f1b0" loc="81:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bba30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x403bbe88" loc="50:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x404072bc" loc="58:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404136f4" loc="44:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404136f4"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x404195ec" loc="69:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40413b50" loc="55:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404136f4"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40419160" loc="64:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404136f4"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x40419010" loc="64:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404136f4"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40417e70" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40417e70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404284f4" loc="136:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404213a0" loc="83:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4042047c" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4042014c" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40420324" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40421c84" loc="98:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40428df8" loc="151:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40428900" loc="144:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404217f8" loc="92:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4042249c" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4042234c" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40420e20" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40420af0" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40420cc8" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40422afc" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404229ac" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40421010" loc="78:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4045a6f8" loc="62:/opt/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4045e010" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4045fe50" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4046272c" loc="31:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40462d20" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40462bd0" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4045f3c4" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4045f274" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4045f8e8" loc="53:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4046a7e4" loc="44:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4046ab98" loc="45:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4046a0bc" loc="42:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404743d0" loc="47:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4046a448" loc="43:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40474010" loc="46:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4046d9c0" loc="40:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4046dd20" loc="41:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x400319f4" loc="57:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403252bc" loc="72:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40031e04" loc="65:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4038eb0c" loc="76:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403a4f04" loc="62:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4034db4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403a09d4" loc="52:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40571aac" loc="53:/opt/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40571aac"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4057d010" loc="61:/opt/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405833c0" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405833c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4058351c" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058351c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405839bc" loc="64:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058351c"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x405813a0" loc="76:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40583ea4" loc="71:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4058176c" loc="82:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405793ac" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405793ac"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40579508" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40579508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40586698" loc="109:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40579508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40578438" loc="78:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4058608c" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40579508"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40579508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40578d40" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40579508"/></type-var>
          </variable>
          <variable name="dt" ref="0x40578f20" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40579508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40578868" loc="88:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40586ae8" loc="116:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40579508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40579ae8" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40579508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40579998" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40579508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40578010" loc="73:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40598b70" loc="89:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405981b0" loc="85:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x4059ce6c" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40598734" loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405985e4" loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40599d4c" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40599bfc" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x405a7160" loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405a7010" loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x405992c4" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40599808" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405996b8" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x405ae288" loc="92:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x405af06c" loc="68:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x405af460" loc="74:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x405af90c" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405ae70c" loc="98:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x405afdb8" loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x405a25fc" loc="57:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037837c"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40378598"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x405a2bb0" loc="63:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037837c"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40378598"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x405a2a60" loc="63:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037837c"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40378598"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405a5120" loc="41:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a5120"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x405a4e7c" loc="74:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405a5f1c" loc="58:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405a55d0" loc="48:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a5120"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405a4300" loc="62:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405a32bc" loc="80:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405a5b18" loc="54:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a5120"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405a59c8" loc="54:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a5120"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405a46d0" loc="65:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405a4a90" loc="68:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x405913e4" loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405913e4"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x4059e9b4" loc="98:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4059e194" loc="87:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40591890" loc="61:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405913e4"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x4059ef08" loc="104:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4059edb8" loc="104:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x4059d378" loc="110:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405905d8" loc="75:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405901f0" loc="70:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4059e5c0" loc="93:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40591dcc" loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405913e4"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40591c7c" loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405913e4"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405909a8" loc="78:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40590d68" loc="81:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x40698160" loc="61:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40698010" loc="61:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x40695010" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40696834" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40696a14" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x40696c1c" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x40696e10" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x406988cc" loc="64:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40698594" loc="64:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x40698774" loc="64:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x40695bb0" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40695438" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40695640" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x40695848" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x40695a48" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x40696420" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40698ce0" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x40698ecc" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x406960cc" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x406962b8" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40676010" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40679adc" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40679cac" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40679e80" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4067772c" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406775dc" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40687160" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40687010" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40685184" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40686e04" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40685010" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4068684c" loc="106:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40687d50" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40687a24" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40687bf8" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x40689918" loc="96:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x406897c8" loc="96:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x4068b12c" loc="83:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x40689368" loc="95:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x4068c6e8" loc="71:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x4068c160" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x4068c010" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x4068cc0c" loc="78:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x4068b91c" loc="88:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4068b5d0" loc="88:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x4068b7c4" loc="88:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x40688458" loc="98:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40688308" loc="98:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40674a50" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x40674900" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x40689ed0" loc="97:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40689d80" loc="97:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x4068bee4" loc="93:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4068bd94" loc="93:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x40683778" loc="7:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x40683cf0" loc="14:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x40683ba0" loc="14:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x40691644" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40691304" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x406914ec" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x406813cc" loc="52:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40681064" loc="52:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40681274" loc="52:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40680c4c" loc="58:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40680914" loc="58:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40680af4" loc="58:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x4067e908" loc="61:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067e5bc" loc="61:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4067e7b0" loc="61:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40682c38" loc="49:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406828b0" loc="49:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40682ae0" loc="49:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40680564" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40680414" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x4067e1f0" loc="60:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067e0a0" loc="60:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40690334" loc="67:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40690010" loc="67:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x406901dc" loc="67:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x406824c0" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40682138" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40682368" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x4068e290" loc="70:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40690f24" loc="70:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x4068e138" loc="70:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x40681914" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406817c4" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x4067eebc" loc="63:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067ed6c" loc="63:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x40690b20" loc="69:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x406907cc" loc="69:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x406909c8" loc="69:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40691b94" loc="66:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40691a44" loc="66:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x40680010" loc="55:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40681cc4" loc="55:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x40681e98" loc="55:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x4068de80" loc="46:/opt/tinyos/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40400570"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x4069e5e8" loc="62:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069e498" loc="62:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x4069fa94" loc="55:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069f944" loc="55:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x4069eb60" loc="66:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069ea10" loc="66:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x4069f4f4" loc="52:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069f3a4" loc="52:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x4069d690" loc="72:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069d540" loc="72:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x4069d160" loc="69:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069d010" loc="69:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x4069e084" loc="58:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069fef8" loc="58:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x406a2f0c" loc="49:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406a2dbc" loc="49:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x406a8834" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x406a84d8" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x406a86dc" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x406beaf4" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406be774" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x406be99c" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x406bc560" loc="71:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bc410" loc="71:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x406be2d0" loc="57:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x406a7bfc" loc="52:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x406a7aac" loc="52:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x406c2330" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c21e0" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x406c2dc4" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c2c74" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x406c18ec" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c179c" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x406cd38c" loc="65:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406cd23c" loc="65:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x406c38d4" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c3554" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x406c377c" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x406bba90" loc="59:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bb940" loc="59:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x406bb45c" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bb0dc" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x406bb304" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x406cdc44" loc="71:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406cdaf4" loc="71:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x406b26cc" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b257c" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x406b8294" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b8144" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406a6254" loc="68:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406a68a8" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406a6758" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406b7b5c" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b7810" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406b7a04" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406b8e04" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b8ab8" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406b8cac" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x406b6180" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b6030" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x406b6c40" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b6928" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x406b6ae8" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e6bac"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x406b56a4" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b5554" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x406b335c" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b3010" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406b3204" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x406b3b7c" loc="195:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x406cc3c8" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x406cbe64" loc="42:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406cbd14" loc="42:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406cc894" loc="53:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x406c028c" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406c028c"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406c03e8" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406c03e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x406c752c" loc="63:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406c03e8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c73dc" loc="63:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x406c8010" loc="70:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c7e0c" loc="70:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x406c0a1c" loc="49:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c08cc" loc="49:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406c8a54" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406c03e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c8700" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x406c88fc" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406c03e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x406cf634" loc="35:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406cf634"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x406e0860" loc="51:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e0710" loc="51:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406e0288" loc="46:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406cf634"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e0138" loc="46:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x406cfc54" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406cfb04" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406df010" loc="57:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406cf634"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e0c54" loc="57:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x406e0e5c" loc="57:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406cf634"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x406d936c" loc="47:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d921c" loc="47:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406f28c8" loc="120:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x406f2010" loc="97:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x406e3974" loc="88:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406f2490" loc="102:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406f1010" loc="128:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x406f0e4c" loc="41:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f0cfc" loc="41:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406f02ec" loc="37:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406f08b4" loc="39:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f0764" loc="39:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406efda8" loc="45:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406efa20" loc="45:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406efc50" loc="45:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406ef654" loc="43:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ef2cc" loc="43:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406ef4fc" loc="43:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40703868" loc="49:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403e2664"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40703718" loc="49:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40702010" loc="51:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x403e2664"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40703c18" loc="51:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40703e3c" loc="51:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x403e2664"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x407032f0" loc="47:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407031a0" loc="47:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40702420" loc="53:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403e2664"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x406e4dc4" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406e488c" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x406e4a90" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406e4c64" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x406f505c" loc="122:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f6d00" loc="122:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406f6ed4" loc="122:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x406f67d4" loc="110:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406f783c" loc="83:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f76ec" loc="83:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406f6210" loc="97:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f7e8c" loc="97:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x406f60b8" loc="97:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40711660" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x40712180" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40712030" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x4071f8e8" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071f798" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x4071e5fc" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071e4ac" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40720c00" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40720ab0" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40716ed4" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40716d84" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4071f35c" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071f010" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4071f204" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40720670" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40720324" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40720518" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4071e05c" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071fcd8" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4071fecc" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x4070ff1c" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40724504" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x407239e4" loc="65:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40723894" loc="65:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40724b74" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40724a24" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40723288" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40723138" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40736a98" loc="60:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x407362a8" loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x403da39c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40736158" loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x403da39c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407366b8" loc="55:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x4071cbdc" loc="45:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40736f20" loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403da39c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x40732eb0" loc="70:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40732d60" loc="70:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x407345b4" loc="49:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40734464" loc="49:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40732294" loc="59:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40734dbc" loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40734a70" loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40734c64" loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40735ea4" loc="43:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40735d54" loc="43:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x407328d8" loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40732788" loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4070ab08" loc="46:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4070a63c" loc="40:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070a4ec" loc="40:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x407071d0" loc="52:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40707080" loc="52:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x407076e0" loc="59:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40707dcc" loc="65:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40707c7c" loc="65:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x4071344c" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407132fc" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40718e0c" loc="86:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40718984" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40718628" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4071882c" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40704b08" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407049b8" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x407191b4" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40719064" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40719a8c" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40719730" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40719934" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40709cac" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x407044f0" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407041e0" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40704398" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40718180" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40718030" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x407299b8" loc="131:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40729868" loc="131:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x4072ac10" loc="120:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072aac0" loc="120:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4071ada4" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071aa6c" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4071ac4c" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4072e160" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072e010" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40726c60" loc="156:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072691c" loc="156:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40726b08" loc="156:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4072fa60" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072f910" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x407293ec" loc="125:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407290c0" loc="125:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40729294" loc="125:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x4072d05c" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4072ecd4" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4072eed8" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x407264dc" loc="151:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072638c" loc="151:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x4072f3fc" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072f2ac" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x4072b010" loc="99:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072de2c" loc="99:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x4072d90c" loc="94:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4072d5b0" loc="94:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4072d7b4" loc="94:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x40739300" loc="178:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e28e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40725288" loc="162:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40725138" loc="162:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40725dfc" loc="173:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403e2664"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40727ee4" loc="146:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40727ba0" loc="146:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40727d8c" loc="146:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x4072e7d0" loc="81:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072e680" loc="81:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x4072a644" loc="115:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072a30c" loc="115:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x4072a4ec" loc="115:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40727168" loc="136:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40729e1c" loc="136:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40727010" loc="136:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40739898" loc="185:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40739748" loc="185:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4072b7c8" loc="105:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072b4b8" loc="105:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4072b670" loc="105:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4071a5f0" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071a4a0" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4072594c" loc="168:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407257fc" loc="168:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40727754" loc="141:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40727604" loc="141:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x4072be30" loc="110:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072bce0" loc="110:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40714010" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40715bf8" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40715dec" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40714470" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40715160" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40715010" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40715764" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40715614" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40710520" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407103d0" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x40712e78" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40712d28" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x407109dc" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x4070f084" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40710f04" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x4077c0bc" loc="59:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x4077c65c" loc="72:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x4077cc6c" loc="79:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x4077fcbc" loc="48:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40791b40" loc="46:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407919f0" loc="46:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4078eb30" loc="64:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4078e9e0" loc="64:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4078e478" loc="54:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4078e138" loc="54:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4078e320" loc="54:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40790a68" loc="42:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
              <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407908fc" loc="42:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40798010" loc="50:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40798810" loc="60:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40798448" loc="55:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4079cb04" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4079c7b8" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e6df4"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4079c9ac" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40801a28" loc="53:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x407fe010" loc="61:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x407fca28" loc="65:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x407fc598" loc="59:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x407fd1f0" loc="90:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x407fd6b8" loc="98:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4080f160" loc="79:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40800c4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4080f010" loc="79:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40800c4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40813e6c" loc="53:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40810500" loc="62:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40800c4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408103b0" loc="62:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40800c4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40810a7c" loc="70:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40800c4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x408c963c" loc="53:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
              <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c94d0" loc="53:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x408ccd5c" loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ccc0c" loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x408da160" loc="57:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408da010" loc="57:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x408da5a8" loc="62:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408df720" loc="46:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408df5d0" loc="46:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408dfc34" loc="51:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408dfae4" loc="51:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x408dd160" loc="57:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408dd010" loc="57:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x408dddd4" loc="71:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408ddc84" loc="71:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x408dd7f8" loc="62:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408dd6a8" loc="62:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x408dc584" loc="80:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408dc434" loc="80:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x408e0a3c" loc="49:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408e08ec" loc="49:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x409220ec" loc="44:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40922abc" loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40921160" loc="63:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40921010" loc="63:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40921598" loc="69:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x409225fc" loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40921aa0" loc="74:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40924aa0" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40924950" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x4091e6ec" loc="63:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4091e208" loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4091e0b8" loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40959928" loc="52:/opt/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x409594b8" loc="46:/opt/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4097d090" loc="53:/opt/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097d090"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4097d690" loc="64:/opt/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097d090"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4097d540" loc="64:/opt/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097d090"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x409a8480" loc="55:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409a8330" loc="55:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4098a210" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4098a0c0" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x4098a988" loc="45:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4098a664" loc="45:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4098a830" loc="45:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4098af08" loc="50:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4098adb8" loc="50:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x409ad500" loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x409ad3b0" loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x409b0e48" loc="44:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a2f438" loc="59:/opt/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a2f438"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a2f594" loc="59:/opt/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a2f594"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40a2fb5c" loc="66:/opt/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a2f594"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a2fa0c" loc="66:/opt/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a2f594"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40a35c98" loc="54:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40a305e8" loc="66:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a301d4" loc="61:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a30084" loc="61:/opt/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40a357c4" loc="53:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40a34368" loc="62:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a34218" loc="62:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40a34ed8" loc="74:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a34d88" loc="74:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40a34840" loc="68:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a3353c" loc="81:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a333ec" loc="81:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40ac5290" loc="40:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac5290"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40ac1b64" loc="88:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40ac1a14" loc="88:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40ac11f0" loc="76:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40ac5740" loc="47:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac5290"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40ac2258" loc="60:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac5290"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ac2108" loc="60:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac5290"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40ac2660" loc="64:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40ac1614" loc="82:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ac5c78" loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac5290"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ac5b28" loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac5290"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40ac2a30" loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40ac2df0" loc="70:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ad63a4" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40ad9e48" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ad6064" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ad6244" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ad5924" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40ad51e0" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ad53e4" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ad55c4" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ad57bc" loc="83:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40ada9d0" loc="45:/opt/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40ada880" loc="45:/opt/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40aed010" loc="86:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40ae8420" loc="126:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40aea678" loc="117:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40ae89c8" loc="128:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40ae8878" loc="128:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40aeebac" loc="83:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40ae9560" loc="122:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40ae9410" loc="122:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40aeb930" loc="113:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40aeb7e0" loc="113:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40aed82c" loc="97:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40ae59a0" loc="141:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ae5850" loc="141:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40aebd54" loc="114:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40ae6314" loc="131:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40ae61c4" loc="131:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40ae6b34" loc="136:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40ae8010" loc="125:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40ae9e2c" loc="125:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40ae544c" loc="140:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40aeabc8" loc="119:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40aeaa78" loc="119:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40aedd84" loc="103:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aedc34" loc="103:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40aea290" loc="116:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40aea140" loc="116:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40ae99dc" loc="123:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40ae8db8" loc="129:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40ae66f0" loc="132:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40ae5010" loc="138:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40ae9010" loc="120:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40aed400" loc="89:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40aeb328" loc="109:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aeb1d8" loc="109:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40b23574" loc="95:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b23a24" loc="105:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40b63524" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b61990" loc="87:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40b40cc0" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b60370" loc="91:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b61f14" loc="88:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b61dc4" loc="88:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40b61010" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b63e5c" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b608fc" loc="92:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b607ac" loc="92:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40b6312c" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40b61554" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b61404" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40b63a68" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b63918" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40c5ac70" loc="44:/opt/tinyos/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5ac70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40c57200" loc="51:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5ac70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40c570b0" loc="51:/opt/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5ac70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40c57bc4" loc="65:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40c577a8" loc="59:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5ac70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40c57658" loc="59:/opt/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5ac70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40c39b04" loc="49:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40c39e90" loc="51:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40c39654" loc="48:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40c35238" loc="52:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x40d49e88" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d496f8" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40d49b54" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d49d28" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x40e00d90" loc="51:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e00c40" loc="51:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40e2fd60" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e2fa28" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40e2fc08" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40e006a0" loc="48:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e00338" loc="48:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e00548" loc="48:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40e2f4d4" loc="56:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e2f384" loc="56:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40e01d98" loc="47:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e01a30" loc="47:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e01c40" loc="47:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x40dffd90" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dffa44" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40dffc38" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40dff4d4" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e4064"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dff384" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x40e014c0" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e01158" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e01368" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066a5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40f0fb84" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f0f808" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40f0fa2c" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40f1394c" loc="15:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40f0f230" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f13e70" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f5d58"/>
                <typename><typedef-ref name="message_t" ref="0x403f4ac8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40f0f0d8" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40f250bc" loc="54:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40f2bca0" loc="49:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40f31a38" loc="56:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40f2a658" loc="72:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40f296a0" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f29550" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40f2ab4c" loc="79:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40f2a160" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f2a010" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40f29b78" loc="100:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40f29088" loc="85:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40f30d28" loc="71:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40f2f2e0" loc="81:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40f30754" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40f30604" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40f2f9d8" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f2f888" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40f32b20" loc="62:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40f2c30c" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f2c1bc" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40f2c96c" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40f2c81c" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40fcf7fc" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40fcf4c4" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fcf6a4" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40fcba34" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40fcb8e4" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40fca218" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40fcbeb4" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fca0c0" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40fccef8" loc="65:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40fc8020" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40fcaae4" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fcacc4" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40fcaeac" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40fcb464" loc="72:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40fcc604" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40fcc0dc" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fcc2bc" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40fcc4a4" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ff3a04" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40ff38b4" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40fef288" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40ff3efc" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40fef130" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40fe34b4" loc="44:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40fe7cbc" loc="42:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40fe2984" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fe2834" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40fe20ec" loc="47:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40fe74ac" loc="40:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40fe78b8" loc="41:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40fe30ec" loc="43:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40fe387c" loc="45:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40fe3d4c" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fe3bfc" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40fe248c" loc="48:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x410edda8" loc="90:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x410ed9e0" loc="85:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x410ed568" loc="80:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x410f3cb8" loc="68:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x410ed194" loc="74:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x410f1914" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x410f17a8" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x410ef468" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410f1f00" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x410ef114" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x410ef308" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x410efbc8" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x410f1038" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x410ef85c" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x410f13d0" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x4116f018" loc="45:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4116e488" loc="69:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x4116e338" loc="69:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4116ea08" loc="75:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x4116e8b8" loc="75:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4116f960" loc="57:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x4116f810" loc="57:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x4116d188" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x4116ee40" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x4116d030" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x4116f3ec" loc="50:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4116fed8" loc="63:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x4116fd88" loc="63:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4116d5d0" loc="88:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
