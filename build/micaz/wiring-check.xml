<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="60:SenseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403fe700"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f9c98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f9c98"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405901c8"/></to>
    </wire>
    <wire loc="61:SenseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4045fe70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40494d48"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40494d48"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405953d8"/></to>
    </wire>
    <wire loc="62:SenseAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40462458"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405af660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x405af660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405abd28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:SenseAppC.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x40468c78"/></from>
      <to><interface-ref name="X_Axis" scoped="" ref="0x406b9d10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="X_Axis" scoped="" ref="0x406b9d10"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x414f1280"/></to>
    </wire>
    <wire loc="64:SenseAppC.nc">
      <from><interface-ref name="Light" scoped="" ref="0x4046a958"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x406b4cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="VisibleLight" scoped="" ref="0x406b4cc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x414ed4e0"/></to>
    </wire>
    <wire loc="72:SenseAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x403fcb50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406f3c10"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406f3c10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4071b788"/></to>
    </wire>
    <wire loc="73:SenseAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x403f8278"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40fe6cb0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40fe6cb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x410481d0"/></to>
    </wire>
    <wire loc="74:SenseAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x40402968"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406c1240"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x406c1240"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406e0d78"/></to>
    </wire>
    <wire loc="76:SenseAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4043e3d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fe7430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40fe7430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41767ad8"/></to>
    </wire>
    <wire loc="77:SenseAppC.nc">
      <from><interface-ref name="CollReceive" scoped="" ref="0x4043c5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406c03d8"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:SenseAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x404409b0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x406d2370"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x406d2370"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x406e7010"/></to>
    </wire>
    <wire loc="84:SenseAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40403010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41200760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41200760"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417b1c48"/></to>
    </wire>
    <wire loc="85:SenseAppC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x40403798"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fd7010"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:SenseAppC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x404521e8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4122ca10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x4122ca10"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x417dd0c0"/></to>
    </wire>
    <wire loc="87:SenseAppC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x4044bee8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x41229d38"/></to>
    </wire>
    <wire loc="92:SenseAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x404517b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41221b28"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x41221b28"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x412206d0"/></to>
    </wire>
    <wire loc="93:SenseAppC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x404543e8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x412b33d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x412b33d8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x417f59f0"/></to>
    </wire>
    <wire loc="94:SenseAppC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x4045b4e8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x412e22d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x412e22d0"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x417f4820"/></to>
    </wire>
    <wire loc="43:SenseC.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x40469a78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41852520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417decf0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x41146d28"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x41142840"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4110b6d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41012df0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416ba2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41677350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41682b70"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c8a9f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c80f00"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c65180"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c4c5e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b99430"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b14440"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407f7cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4158b430"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409cf128"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40798010"/></to>
    </wire>
    <wire loc="150:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fa4c38"/></to>
    </wire>
    <wire loc="175:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dd7a08"/></to>
    </wire>
    <wire loc="226:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e57500"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405b5620"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40590560"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403663e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403663e8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403d6978"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40590b28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049fa70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4049fa70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049edc0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4058f010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404a5a40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411d7a30"/></to>
    </wire>
    <wire loc="26:/opt/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404a5a40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40885040"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a52e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40578c08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404a3620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40578858"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x404a3218"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4059fc88"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x404a3218"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4049d628"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4049d628"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404aa598"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4049d9f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404a5a40"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x404b0ad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x404b7ea8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x404b7ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404fb6b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404a7588"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4049d9f8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404d5210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40555ee0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404c0750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405144f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405144f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413c1de0"/></to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404c6ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40523030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40523030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41414538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404cdea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4052a890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4052a890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41424228"/></to>
    </wire>
    <wire loc="143:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404b52f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404fa988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404fa988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412fe9e8"/></to>
    </wire>
    <wire loc="183:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404cea98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4052b5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4052b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41428de0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404b4750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40502888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40502888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41360938"/></to>
    </wire>
    <wire loc="157:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404b9ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405104f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405104f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4136a9e8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404be670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40512170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40512170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413bcc08"/></to>
    </wire>
    <wire loc="179:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404c4c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40522c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40522c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4140f538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404ac010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404fe968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404fe968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41307538"/></to>
    </wire>
    <wire loc="149:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404b2670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405005d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405005d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4135b7f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x404c3ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4050e170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4050e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ab9e8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404c84b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4051de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4051de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413b7a88"/></to>
    </wire>
    <wire loc="188:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404cbce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405285d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405285d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4141f0b0"/></to>
    </wire>
    <wire loc="194:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404d32f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4055bdd8"/></to>
    </wire>
    <wire loc="174:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404c78e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40519d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40519d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414170b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404fb6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41301538"/></to>
    </wire>
    <wire loc="152:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404bc590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40509250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40509250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413566c0"/></to>
    </wire>
    <wire loc="192:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404d5e08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405523e8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x404baa08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40511228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40511228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4136e538"/></to>
    </wire>
    <wire loc="166:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404bf210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40514e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40514e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413bf7f8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404c5750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40523988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40523988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41412010"/></to>
    </wire>
    <wire loc="186:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404cc8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40529250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40529250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41423c08"/></to>
    </wire>
    <wire loc="144:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404b5ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40505330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40505330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412fc538"/></to>
    </wire>
    <wire loc="147:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404b3210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40501250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40501250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4135e3b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404b88e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40510e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40510e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41368538"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404c90a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40512ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40512ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ba6c0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404cf670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405216b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405216b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4140d010"/></to>
    </wire>
    <wire loc="139:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x404aca08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404fc330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404fc330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41304010"/></to>
    </wire>
    <wire loc="150:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404bd0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40500f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40500f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41359228"/></to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404c2750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4050eac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4050eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413a9538"/></to>
    </wire>
    <wire loc="189:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404ca750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40528f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40528f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4141ea88"/></to>
    </wire>
    <wire loc="164:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404c1c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40515b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40515b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413c2418"/></to>
    </wire>
    <wire loc="175:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404c62f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405246b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405246b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41416a88"/></to>
    </wire>
    <wire loc="184:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404cd4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4052bf28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4052bf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414267f8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404d3ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405583b0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404b68e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404fa030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404fa030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412ff010"/></to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404ba010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40509ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40509ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413540b0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404ce0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4051ec28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4051ec28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41429418"/></to>
    </wire>
    <wire loc="156:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404b94b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40511b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40511b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4136b010"/></to>
    </wire>
    <wire loc="167:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404bfc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405137d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405137d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413bd228"/></to>
    </wire>
    <wire loc="178:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404c4210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40522330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40522330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414119e8"/></to>
    </wire>
    <wire loc="187:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404cb2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40529ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40529ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414216c0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404a9548"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404fe010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404fe010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41309a30"/></to>
    </wire>
    <wire loc="148:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404b3c08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40501ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40501ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4135dd70"/></to>
    </wire>
    <wire loc="159:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404c32f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4050f7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4050f7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ac010"/></to>
    </wire>
    <wire loc="170:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404c9a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4051d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4051d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413b80b0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404d4830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4054f8f0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404c8ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405193d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405193d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413d16c0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404c1210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4050d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4050d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413a7010"/></to>
    </wire>
    <wire loc="140:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404b74b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404fcc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404fcc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413039e8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404bdb18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4050b890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4050b890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41358c08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403d41f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d4e50"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403647e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e8298"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40629aa8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4059fc88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40595090"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405940b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40597e40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40597e40"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x404aca08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40594a98"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x405a0880"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405a0880"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x404ac010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405934a0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x4059f300"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4059f300"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x404a9548"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405abd28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405b5dd0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405b5dd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4069ba60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405b5620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405bd488"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x405bfdc8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406a6460"/></to>
    </wire>
    <wire loc="35:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405bd488"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40650790"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40699e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405bac60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40669010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x405c5cb8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x405c5cb8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40650bc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406a6df8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x405d08c8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x405d08c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4064e650"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4064e650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4148ecd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40650790"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41491e10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40650bc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4148f270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4148de90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406187b8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406187b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4061d308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41489090"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40614af0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40614af0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4061a600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x414898b8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406134f8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406134f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40619010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x414d62e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40620030"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40620030"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40629f08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x4067a9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406a8050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="senseResult" scoped="" ref="0x414f1e18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="senseResult" scoped="" ref="0x414ec090"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x406e7010"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40fa7db0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x406c9d28"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x406ea8d0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x406ea8d0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40dd5ac8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x406ce660"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x406ebd68"/></to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x406ebd68"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40dd5108"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406c95e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ea190"/></to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406ea190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40dd5430"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406c0a88"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406eb6c0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406eb6c0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40dd6d08"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x406c1970"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x406ec568"/></to>
    </wire>
    <wire loc="114:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x406ec568"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dd61e8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x406e1648"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x406e8198"/></to>
    </wire>
    <wire loc="165:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x406e8198"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40fa6310"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406c03d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406eb010"/></to>
    </wire>
    <wire loc="116:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406eb010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40dd6928"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x406caee8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x406f5b38"/></to>
    </wire>
    <wire loc="123:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x406f5b38"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40dd3390"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x406d41c8"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x406e90c0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x406e90c0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40dd4310"/></to>
    </wire>
    <wire loc="115:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x406e0d78"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40dd7d20"/></to>
    </wire>
    <wire loc="147:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x406e0d78"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fa6ee8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x406e0d78"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e59bd0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x406e78b0"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x406de490"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x406e7ce0"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x406e0040"/></to>
    </wire>
    <wire loc="190:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x406f5178"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40e58b10"/></to>
    </wire>
    <wire loc="120:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40df4a40"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x406e78b0"/></to>
    </wire>
    <wire loc="127:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x40dfb920"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40e04010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40e04010"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416776f8"/></to>
    </wire>
    <wire loc="128:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40dfaee0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40debba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40debba8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41682f18"/></to>
    </wire>
    <wire loc="131:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x40dfed70"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40e30408"/></to>
    </wire>
    <wire loc="134:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x40df7468"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x40e1fdc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Cache" scoped="" ref="0x40e1fdc0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x416ba6b0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40dff6d0"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40e58b10"/></to>
    </wire>
    <wire loc="151:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x40fa3010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e58090"/></to>
    </wire>
    <wire loc="152:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x40fa36c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e58770"/></to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40fa39e0"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40e58b10"/></to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x40fd3aa0"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x40e53300"/></to>
    </wire>
    <wire loc="157:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fa23f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407184e8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40fa1010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406f3c10"/></to>
    </wire>
    <wire loc="159:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x40fa1678"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e34838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e34838"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405abd28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x40f9f8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e63670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e63670"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405abd28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40fd3010"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x406e7ce0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40df2a88"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x406e7ce0"/></to>
    </wire>
    <wire loc="163:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40df5890"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40fa6310"/></to>
    </wire>
    <wire loc="164:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40fd36a8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40dd3390"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x40e01420"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40fcc428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40fcc428"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405abd28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40fd4b88"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c4d978"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40c4d978"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c49478"/></to>
    </wire>
    <wire loc="173:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40df2690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c4d978"/></to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40dd37d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40eb2bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40eb2bb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416a26f0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40df5240"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40eff030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40eff030"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406f0f10"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x40df5578"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f2da28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f2da28"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406ef5c8"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40dfe608"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40eb1310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40eb1310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x416a2d88"/></to>
    </wire>
    <wire loc="180:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40df44d0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40fa7db0"/></to>
    </wire>
    <wire loc="181:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40dfe030"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x40fa77f8"/></to>
    </wire>
    <wire loc="182:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40df1170"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406f3c10"/></to>
    </wire>
    <wire loc="183:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dd3e70"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40f025d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f025d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4169f170"/></to>
    </wire>
    <wire loc="184:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40df4e68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40eb19a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eb19a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x416a14d0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40df3a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40494d48"/></to>
    </wire>
    <wire loc="192:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40e54a28"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c4d978"/></to>
    </wire>
    <wire loc="194:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e53698"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fc78c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40fc78c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41726010"/></to>
    </wire>
    <wire loc="195:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e54300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fc4968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40fc4968"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406f0f10"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e55ad0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fc6010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fc6010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x417266a8"/></to>
    </wire>
    <wire loc="197:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x40e53e18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fc66a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fc66a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41726d40"/></to>
    </wire>
    <wire loc="221:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40e546d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40727638"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40727638"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40740ee0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4071b788"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4072f010"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406f0550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4071a100"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4071a100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ce6100"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406ef5c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40718178"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40718178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40ce4178"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406ef920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40717190"/></to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40717190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ce3190"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40714408"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40bec940"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40bec940"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40be33a0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4070dba8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4072d948"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4072d948"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4073f2d0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406f0f10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4071aac0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4071aac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ce6ac0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40706a90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4072e230"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4072e230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40740950"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407184e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40ce44e8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4070adb8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40bea308"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40bea308"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40be2d68"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4072f010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40cd4568"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x4072d120"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40ce2238"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40733d38"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40ce3b88"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x407299a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x407400f8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x407400f8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40bf1eb8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4073f2d0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40cd7f10"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40740950"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40bed790"/></to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40732258"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4073f8f0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4073f8f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40cd6e38"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40740ee0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40bec2e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x40cde4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40741b80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ce2a88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x407435c8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x407435c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40c8f490"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ce1220"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40743d50"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40743d50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40c8fc18"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40cdf460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40af6960"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40ce15b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40bf1eb8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40bf1eb8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40be7838"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ce1dd8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bedd10"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bedd10"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40be4710"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40ce0390"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40787ed0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40787ed0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40798ad8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40cdfba0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x4073a730"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x4073a730"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x4074c490"/></to>
    </wire>
    <wire loc="109:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40cdebb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40494d48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40cd4568"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40cd2098"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40bec2e8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40be4ca0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40cd6e38"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40cc8298"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x40c8f490"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40c889b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40cd7f10"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40cd2ca8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40744a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c8f0c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c8f0c0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40c885e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40bed790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40be4190"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40741b80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c90308"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c90308"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c89718"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x407442d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c909d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c909d0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40c89e58"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x40744e28"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40c8e010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x40c8e010"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40c87540"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40c8fc18"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40c87160"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40cd2098"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4073d648"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4073d648"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4074f6e0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c8eb68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c6b388"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c6b388"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c68a18"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c6baf8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cd6738"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40cd6738"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40cc95e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cc95e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cd7468"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40cd7468"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40cd34c8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cd34c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4073dc50"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4073dc50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4074fce8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c8e7b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cd7b48"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40cd7b48"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40cd3c30"/></to>
    </wire>
    <wire loc="108:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cd3c30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c812d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c812d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c80790"/></to>
    </wire>
    <wire loc="109:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c81b28"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4073a378"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4073a378"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b9c298"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b9c298"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b981c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4074cc80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4077def8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4077def8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407983a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40747e98"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x4078d010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x4078d010"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40797c00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4074a930"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b08c08"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4074a930"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b9f830"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40b9f830"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b997d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40b08c08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b147e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40758ed0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x40b050f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40b050f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b14cd8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x407496a8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40b05808"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40b05808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40b13490"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40746c88"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40bf1eb8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x407514b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bedd10"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40756b00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c4d978"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x40764d30"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c51608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40c51608"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409d3100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40746010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40494d48"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x40763ee8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x407636d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x40753e70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x4078daf8"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x40796760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x407945d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x407f4298"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x407f4298"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407f1560"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x407a8030"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40902730"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40902730"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404b4750"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x407a8a38"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40900580"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40900580"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x404b52f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x407a74c0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x408ff9f8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x408ff9f8"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x404b68e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x407a3590"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x40912ae8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40912ae8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4094e200"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x407b1c88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aa2918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40aa2918"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40981100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x407b2ae8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x40aa0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40aa0010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x407b2f00"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40aa0a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40aa0a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x407b1868"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x40aa1880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40aa1880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x407b1348"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x40aa0d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40aa0d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x407b4820"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40abfdb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40abfdb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x407b4d28"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x40abef18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40abef18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x407a5260"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x40abc368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40abc368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x407a5780"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x40ac1e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40ac1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x407a5ca0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40ac02b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40ac02b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x407a60b8"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x40abaa00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40abaa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4079eb50"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x40aba5c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40aba5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4079d268"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x40abf880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40abf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x4079d760"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x40ac06e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40ac06e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4079dc68"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40abf010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40abf010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x407b0cb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad45c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ad45c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40981100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x407b0508"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ae5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ae5010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40981100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407a0510"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40af6960"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40794010"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40af5240"/></to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x407a9618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x407abd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407f7cb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40904010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40904010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408e9278"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x407f1560"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4151eef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4151eef8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x415166b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x415133b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4151ac68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4151ac68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4150ea00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x41514180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408ace28"/></to>
    </wire>
    <wire loc="33:/opt/tinyos/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408ace28"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408cb490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x4150c548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408112f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408112f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40817850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x415097e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4081a1b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4081f208"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4082bb38"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4080d010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4082a888"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4081a1b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40828760"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4081a1b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40825428"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4081a1b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x408220b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x40821c20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40614af0"/></to>
    </wire>
    <wire loc="27:/opt/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40885428"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408112f0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x408d66f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408a6828"/></to>
    </wire>
    <wire loc="31:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408a6828"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408bd030"/></to>
    </wire>
    <wire loc="32:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408bc208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408112f0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40901128"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404ba010"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40901b18"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x404c4c08"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x407f6c90"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x404c9a98"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x408ff010"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x404be670"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x409123e8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x409117a8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x408f82a8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40920380"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x40911e30"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4080d010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40920978"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x4092c168"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x4092c168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40957050"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x4094e8b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x407f6c90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x4092f5d8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409466c0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4092d010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4093fbd0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x4092c9e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409552b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x4092fe58"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409437a8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4092d890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4095be68"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x4091fd20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40929570"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4092e6f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40941920"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40929d28"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x409265e8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40946e78"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40926a60"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40942010"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x40926ed8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40940190"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40928360"/></to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4095c430"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x409287d8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4095a630"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40928c50"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40957808"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x409251a0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40955a68"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40925618"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x4096a0f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40aa1bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40abe6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40abeae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40ab8cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40ab9b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40aa06c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40ab92b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40abb468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40aa1010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40981850"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40981850"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4097e688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40ac24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40ac2840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40ac2c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40ab96e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40ac0b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40ab8880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40ab8010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40abb8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40abae38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40abc7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40ab6190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40aa1528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40ac1a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40abf448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40abe270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40ac1010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40ac16c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40ac2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40aba190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40ab8448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40abbcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40aa0368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40abb030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40abcbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40ac1368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40ab6a68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x40980100"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4097b918"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x40980b48"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40997370"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x4097f330"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40997b18"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40981100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4097ee98"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409962f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x40991ef8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409d5e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x409d5e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409d3100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40996730"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409d4be8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409d4be8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a99568"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40993718"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a97330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a97330"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x409e0d40"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40991a28"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a97668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a97668"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x409dc648"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409956b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40494d48"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x4098d520"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x409d3100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409cf758"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x409dc648"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x409f7d10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409e0d40"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x409f7370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x409d48b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409e09c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409e09c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409f7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x40a99d28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409dcd98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x40a96488"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404b4750"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x409dc010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x409f76f8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409dcd98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409f6488"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a04158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a4ad40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a4ad40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4158a760"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a017b8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40a6b898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a6b898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x415892e0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40a054d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x409d83c8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x409d83c8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40a367d8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a01c38"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e94c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40a10860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40a2eea0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e94c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40a2f658"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404b4750"/></to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40a30050"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404b3210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40a30a38"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x404b3c08"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40a2e4a0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x404b2670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40a6b490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4158aea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x415897a0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40a6bd48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41589bc8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4158b768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41588270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40acd5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40ad3920"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40ad0af8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40acc448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40acc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40ac6b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40ac7a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40ad2368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40ac7190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40ace448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40acecb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40aca2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40acccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad4c78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40981850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40ad1190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40ad14e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40ad18c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40ac75c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40ad2a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40ace880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40ace010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40ad35c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40ac66e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40ac7e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40aca6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40ac8cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40acb5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40ac5010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40ad3270"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40ad06c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40acd190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40acb190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40acdb00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40ad3c78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40acc010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40ad1c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40ad0368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40ac8880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40ac8448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40ad2d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40ac8010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40ac62b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40acab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40ad2010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40acbe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40ad26c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40acba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40ad0010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40ac58e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40adfe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40ae4368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40ae04b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40adecd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40adc190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40ad6448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40ad82b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40ae4d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40ad9a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40ae0d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40adf5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40adbb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40adc5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40ae56c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40981850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40ae2b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40ae2ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40ae1308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40ad9e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40ae24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40adf190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40ae08f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40ae4010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40ad6010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40ad86e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40ada010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40ad95c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40adce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40ad6880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40ae5be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40ae0080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40adfa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40adca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40ade468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40ae46c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40ade8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40ae1660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40ae1d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40ad9190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40adacb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40ae2840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40ada880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40ad8b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40ada448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40ae4a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40adb6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40ae2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40adb2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40ae19b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40ad5190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x40b048d8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40b13d88"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x40b04d40"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40b122c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40b12888"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x407f4298"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40b2aeb8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x407f6c90"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40b0b9a8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40902730"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40b2f3d0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x408ff010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40b2a840"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x409123e8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40b2fe10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b69950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b69950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40981100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b2c588"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40b8d030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b8d030"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40981850"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40b29d28"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40b8d548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b8d548"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40b28168"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40b8c368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b8c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b28598"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40b8c6c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b8c6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b289c8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40b8b4e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b8b4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b29840"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40b87010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b87010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b2cb48"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40b7fa68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b7fa68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b29338"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b812b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b812b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b28e08"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40b892b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b892b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b27850"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40b86270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b86270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b27d70"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40b866a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b866a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40b27410"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x40b8a368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b8a368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40b26ca8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x40b80880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40b80880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40b26300"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40b81b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40b81b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40b267c8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40b80010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40b80010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40b21a60"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40b9fcd0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40b9fcd0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40b99c70"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40b0f2c0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40bf1eb8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b0fb00"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bedd10"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b0e2b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40bec940"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40b2a170"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40be8a50"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40be8a50"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40bdf4d8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b24010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40494d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40b87880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b8dbf8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40b8ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40b86ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40b80cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40b896e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40b84468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40b86f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b8b840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b8bc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b816e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b8cd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40b89b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b8d8a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40b848a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40b83e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40b857a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b7f190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40b8aa18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40b87448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40b85368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40b87db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b8c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b8a010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40b8a6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40b83a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40b835c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b8b190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b83190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40b80448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40b84cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40b84030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b8ca18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40b85bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40b9c730"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40b98658"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40bb4838"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40494d48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40b98a30"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40902730"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40b974c0"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x40901128"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40b97ed0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x40901b18"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40b96978"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x408f82a8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40b950a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c21138"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c21138"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40981100"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b95820"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40c3b880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40c3b880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b93440"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40c1e840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40c1e840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40b93010"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40c1eef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40c1eef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40b93878"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40bf1eb8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b92108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bedd10"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b91980"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40bec940"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40b92680"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40787ed0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b8f580"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40c428a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40c428a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b8faa0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40c42cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40c42cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b8f140"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x40c1d660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40c1d660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40bb59b8"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x40c3b448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40c3b448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40bb5010"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40c3c2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40c3c2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40bb54d8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40c3c6e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40c3c6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bb5eb8"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c3ee38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c3ee38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40bb43d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40c21d08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40c21d08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40badb88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c27248"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408ace28"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40bde430"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40be5898"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40bdee88"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x405bfdc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c245a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405abd28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40c1ae38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40c1f3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40c1c4b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40c41190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40c1fde0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c3ea00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40c1cd28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40c1a5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40c40b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40c415c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40c217f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40981850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40c1eb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40c1d308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40c1e4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40c1a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40c1c8f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40c1f080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40c3b010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40c3f010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40c3e5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40c41e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40c1c080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40c1aa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40c41a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40c42468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40c1f730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40c1dd10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40c3e190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40c3fcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c3f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40c3cb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40980b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40c3f448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40c1fa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40c406e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40c1e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40c402b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4097f330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40c1d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40c3a190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40980100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40c4d0b8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40c4cb08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c52e28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c4c5e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c65570"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c6baf8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40c65c40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c67ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40c67ab8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409d3100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40c64430"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c4d978"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c648d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bedd10"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40c81700"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40c80bb8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c7d340"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c81b28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c7d700"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bedd10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c87cb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c8eb68"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c864c0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c8e7b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c86858"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40bf1eb8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c85108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bedd10"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40c856c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40c8ad28"/></to>
    </wire>
    <wire loc="180:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x40cc0250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40cd4bd8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40ccbd20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40ccbd20"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409d3100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cc8a50"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40740950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x40df1768"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CtpPacket" scoped="" ref="0x416b84d0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x406e90c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x416a26f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4169ddb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x416a2d88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x416a14d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4169f170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40706a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4169a500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ed0c00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4169ab98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ed0c00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ecbbe0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40f0c3d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406f0550"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f0ca80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f0a690"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40f0ad68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40f09270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40eff348"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eff9e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f2dd40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f2c3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x40fd2270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x40fd3df8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41726010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4171f728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x417266a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41726d40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40fc5330"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41725950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41725950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40706a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4171fdf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ed0c00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4171e4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fc4c80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fc23f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fe7ac8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41765230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41765230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406c95e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41767ad8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x406c1970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CollectionId" scoped="" ref="0x406de490"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x41761328"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x410481d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x410411d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40fd8630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4100e108"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40fd7368"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4100d770"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40fd7010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4100e848"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40fd6770"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4100de08"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fd7a58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4100eb70"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x41012df0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41046dd0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41043ca8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40fd6ca8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41013360"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41047100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41013a18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41048a90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x410437a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x4120aad0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41047100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410b5c60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41048a90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x410b58a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x410f4400"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x410437a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4103b5e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41043ca8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x410f33f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41043ca8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x410ed420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41043ca8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x410f48e8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4103aa80"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x410f4dc0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x4103c960"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x41036d08"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x410f1860"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x41039340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410f03e8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x410f03e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4110f168"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x410e7b80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x410f0868"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x410f0868"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4110fa58"/></to>
    </wire>
    <wire loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x4107a350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x41060788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x4107cbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x41078010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x410f2030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x410f2468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x411106e8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x4110f5d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x4110f5d8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x4110be28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4110fa58"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4110a290"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4110f168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4110ba10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4110e530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41111968"/></to>
    </wire>
    <wire loc="33:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41111968"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4120e170"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4111f0a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4110e530"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x4110ab28"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x4114aa80"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x4114aa80"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x411431a8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x41120010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x41149010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x41149010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x411436d8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x41120448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x41149508"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x41149508"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x41143bf0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x41147b80"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x411417a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x41147178"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x41142c90"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x41147688"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x41141288"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x411403c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a52e0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x41140b08"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e94c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4120d3b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x411823c0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x411823c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x411d30c0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x411d22f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41181cc8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41181cc8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411af0e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4117b010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x411ad3c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4117bd00"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x411ac0f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x41179ec0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x411a9010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x41179ec0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x411a8c08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x41179ec0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x411a5830"/></to>
    </wire>
    <wire loc="27:/opt/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x411d7e18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41181cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41200df8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fd7368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4122f4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd7a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4122e170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40fd6770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x417ad340"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x411f96e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417ad9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd7a58"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x411f96e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x411f6db8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x411f5598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fd8630"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411f5c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd7a58"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411f4850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fd7368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x411f4f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x411f3370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x412206d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4121df28"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x41213710"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x41218480"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41212250"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x412168d8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x41212d20"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x4121d3e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41252190"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41214af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41214af8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417ca6a0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41252870"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41263010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41263010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406f0f10"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x41252c58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41261a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41261a28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4180b528"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x412513f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4125d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4125d010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406f0f10"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41251740"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4125b8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x417ca6a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417c31f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41267230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x417cad38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x417cad38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x412678c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x417c93f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417c93f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x412664f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x417c8010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x417c8010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40706a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x417c38b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ed0c00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417c2010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41263328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x412639c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4180b528"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41803060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41260150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4180bbc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4180bbc0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x412607e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4180a310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4180a310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4125f410"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4180af08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4180af08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40706a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41803728"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ed0c00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41803dc0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4125d328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ef920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4125d9c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x41218480"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x417f21b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x4121d3e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x417f5548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x412168d8"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x412b2100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x417f2948"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40494d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x417f15f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x412b2100"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x412e3118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x412e3118"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x418528d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41851058"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4184a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4184a010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405abd28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x4184d5b0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c4d978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x4184eb98"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x418457f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x4184e240"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41846060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x4184d9a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40494d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x4184c5f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="SenseC" loc="3:SenseC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SenseAppC.TimerMilliC" loc="44(SenseAppC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405cd428"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.SensorAcc" loc="1(SenseAppC.SensorAcc):SensorAccC.nc">
      <instance number="0">
        <component-ref qname="SensorAccC"/>
        <arguments>
          <value cst="I:43690">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SensorAcc.Sensor" loc="42(SenseAppC.SensorAcc.Sensor):/opt/tinyos/tos/system/ConstantSensorC.nc">
      <documentation loc="35:/opt/tinyos/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ConstantSensorC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.SensorLight" loc="1(SenseAppC.SensorLight):SensorLightC.nc">
      <instance number="0">
        <component-ref qname="SensorLightC"/>
        <arguments>
          <value cst="I:187">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SensorLight.Sensor" loc="42(SenseAppC.SensorLight.Sensor):/opt/tinyos/tos/system/ConstantSensorC.nc">
      <documentation loc="35:/opt/tinyos/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ConstantSensorC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x403d0388"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
            <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40dec6c8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40d3dbe8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40d3de70"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40dec6c8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40d3dbe8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40d3de70"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.CollectionSenderC" loc="43(SenseAppC.CollectionSenderC):/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.CollectionSenderC.CollectionSenderP" loc="34(SenseAppC.CollectionSenderC.CollectionSenderP):/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(SenseAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/tinyos/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d00a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403b0890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d00a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403d0680"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.SerialAMSenderC" loc="47(SenseAppC.SerialAMSenderC):/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SerialAMSenderC.AMQueueEntryP" loc="43(SenseAppC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.UARTMessagePoolP" loc="41(SenseAppC.UARTMessagePoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
            <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.UARTMessagePoolP.PoolP" loc="53(SenseAppC.UARTMessagePoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40dec6c8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.UARTQueueP" loc="42(SenseAppC.UARTQueueP):/opt/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
              <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.ChangerC" loc="49(SenseAppC.ChangerC):/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403fb310"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403fb848"/></typename>
          </type-tag>
          <value cst="I:4660">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.ChangerC.DisseminatorP" loc="45(SenseAppC.ChangerC.DisseminatorP):/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x412902b0"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404d0b00" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404d0d18" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404d9010" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404e0f08" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404dd148" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404dd370" loc="43:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404dd560" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40532f20" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4052f160" loc="43:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4052f388" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4052f578" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x405cd428" loc="23:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405cd428"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405cd5e8" loc="23:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x405d8698" loc="23:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405d8698"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405d8858" loc="23:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405bb630" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405bb630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40679cf8" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40679cf8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40679ed8" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406a43e8" loc="46:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406a43e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensorAccC" loc="1:SensorAccC.nc" abstract="">
      <parameters>
        <constant name="value" ref="0x406b0228" loc="1:SensorAccC.nc">
          <component-ref qname="SensorAccC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ConstantSensorC" loc="42:/opt/tinyos/tos/system/ConstantSensorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x406adbc0" loc="42:/opt/tinyos/tos/system/ConstantSensorC.nc">
          <component-ref qname="ConstantSensorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x406adbc0"/></type-var>
        </typedef>
        <constant name="val" ref="0x406addb0" loc="42:/opt/tinyos/tos/system/ConstantSensorC.nc">
          <component-ref qname="ConstantSensorC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SensorLightC" loc="1:SensorLightC.nc" abstract="">
      <parameters>
        <constant name="value" ref="0x406b70c0" loc="1:SensorLightC.nc">
          <component-ref qname="SensorLightC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x408867b8" loc="44:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x408867b8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x408869d8" loc="44:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40894528" loc="51:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40894528"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40894970" loc="52:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40894970"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40894b30" loc="53:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x408be6c0" loc="42:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x408be6c0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x408beb08" loc="43:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x408beb08"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x408a4b28" loc="55:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x408a4b28"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408c8010" loc="56:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408c8010"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x408c8278" loc="57:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x408c8278"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x408c86e8" loc="58:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x408c86e8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x408c8950" loc="59:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x408c8dd8" loc="60:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x408c8dd8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x408ab6f0" loc="52:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x408ab6f0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408abb50" loc="53:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408abb50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x408abdb8" loc="54:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x408abdb8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x408d1258" loc="55:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x408d1258"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x408d14c0" loc="56:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x4092a4d0" loc="39:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x4092a6f8" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x4092a920" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4092ab10" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40a4bb40" loc="83:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40a668e8" loc="42:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40dec6c8" loc="41:/opt/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40dec6c8"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40dec8e8" loc="41:/opt/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40e17b88" loc="53:/opt/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40e17b88"/></type-var>
        </typedef>
        <constant name="size" ref="0x40e17d78" loc="53:/opt/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40e31440" loc="42:/opt/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40e31440"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40e31668" loc="42:/opt/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x40e20bd0" loc="38:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40e1c700" loc="43:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e5da10" loc="47:/opt/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ee2e20" loc="47:/opt/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40edc918" loc="43:/opt/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40eca110" loc="45:/opt/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40f018a8" loc="43:/opt/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40f2e328" loc="44:/opt/tinyos/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x40f223c0" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x40f22600" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x40f22840" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40fe88a0" loc="43:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x40fe43e0" loc="35:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x40fe45f8" loc="35:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/tinyos/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40fdd108" loc="45:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x411ff030" loc="47:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x412902b0" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x412902b0"/></type-var>
        </typedef>
        <constant name="key" ref="0x412904a0" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4128ee58" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4128ee58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x412b02b0" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x412b04c0" loc="52:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x412b06a0" loc="53:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x412b08a8" loc="54:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x412adda8" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x412aa010" loc="52:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x412aa1f0" loc="53:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x412aa3f8" loc="54:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x412aa600" loc="55:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x412b6bf0" loc="44:/opt/tinyos/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x404409b0" loc="15:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x404409b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40440b88"/>
        <function-ref name="setRoot" scoped="" ref="0x40440c68"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40440d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x404422d8" loc="14:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x404422d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x404424b0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40442590"/>
        <function-ref name="setType" scoped="" ref="0x40442670"/>
        <function-ref name="getOrigin" scoped="" ref="0x40442750"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40442830"/>
        <function-ref name="getType" scoped="" ref="0x40442910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403fe700" loc="6:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403fe700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403fe8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x403f8278" loc="8:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x403f8278"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403f8450"/>
        <function-ref name="stopDone" scoped="" ref="0x403f8530"/>
        <function-ref name="start" scoped="" ref="0x403f8610"/>
        <function-ref name="stop" scoped="" ref="0x403f86f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Update" ref="0x4045b4e8" loc="29:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x4045b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403fb310"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403fb848"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x4045bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Light" ref="0x4046a958" loc="35:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x4046a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40469010"/>
        <function-ref name="readDone" scoped="" ref="0x40469268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x40469a78" loc="43:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x40469a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40469c50"/>
        <function-ref name="runTask" scoped="" ref="0x40469d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x403fcb50" loc="7:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x403fcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403fcd28"/>
        <function-ref name="stopDone" scoped="" ref="0x403fce08"/>
        <function-ref name="start" scoped="" ref="0x403fcee8"/>
        <function-ref name="stop" scoped="" ref="0x403f8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4043e3d8" loc="12:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4043e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4043e5b0"/>
        <function-ref name="getPayload" scoped="" ref="0x4043e690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4043e770"/>
        <function-ref name="cancel" scoped="" ref="0x4043e850"/>
        <function-ref name="sendDone" scoped="" ref="0x4043e930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x404521e8" loc="22:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x404521e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
            <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404512c0"/>
        <function-ref name="maxSize" scoped="" ref="0x40452cc0"/>
        <function-ref name="empty" scoped="" ref="0x40452810"/>
        <function-ref name="put" scoped="" ref="0x40452f18"/>
        <function-ref name="size" scoped="" ref="0x40452a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x404517b0" loc="26:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x404517b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40451a08"/>
        <function-ref name="stop" scoped="" ref="0x40451ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40403010" loc="19:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40403010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404031e8"/>
        <function-ref name="getPayload" scoped="" ref="0x404032c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404033a8"/>
        <function-ref name="cancel" scoped="" ref="0x40403488"/>
        <function-ref name="sendDone" scoped="" ref="0x40403568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="X_Axis" ref="0x40468c78" loc="34:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x40468c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4046a2c8"/>
        <function-ref name="readDone" scoped="" ref="0x4046a520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x40402968" loc="9:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x40402968"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40402b40"/>
        <function-ref name="stop" scoped="" ref="0x40402c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x40403798" loc="20:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x40403798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40403970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4045fe70" loc="32:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4045fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40453070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40453150"/>
        <function-ref name="led1On" scoped="" ref="0x40453230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40453310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404533f0"/>
        <function-ref name="get" scoped="" ref="0x404534d0"/>
        <function-ref name="led1Off" scoped="" ref="0x404535b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40453930"/>
        <function-ref name="set" scoped="" ref="0x40453690"/>
        <function-ref name="led0On" scoped="" ref="0x40453770"/>
        <function-ref name="led2On" scoped="" ref="0x40453850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollReceive" ref="0x4043c5a0" loc="13:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollReceive" scoped="" ref="0x4043c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4043c778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x4044bee8" loc="21:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x4044bee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
              <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4043fc60"/>
        <function-ref name="enqueue" scoped="" ref="0x40444380"/>
        <function-ref name="element" scoped="" ref="0x404446d0"/>
        <function-ref name="maxSize" scoped="" ref="0x4043fa08"/>
        <function-ref name="dequeue" scoped="" ref="0x40444010"/>
        <function-ref name="empty" scoped="" ref="0x4043f558"/>
        <function-ref name="size" scoped="" ref="0x4043f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Value" ref="0x404543e8" loc="28:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x404543e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403fb310"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403fb848"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40456010"/>
        <function-ref name="get" scoped="" ref="0x40454a30"/>
        <function-ref name="set" scoped="" ref="0x40454ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40462458" loc="33:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40462458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4045e010"/>
        <function-ref name="fired" scoped="" ref="0x4045c268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4045c970"/>
        <function-ref name="isOneShot" scoped="" ref="0x4045c718"/>
        <function-ref name="getdt" scoped="" ref="0x4045e4c0"/>
        <function-ref name="gett0" scoped="" ref="0x4045e268"/>
        <function-ref name="isRunning" scoped="" ref="0x4045c4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40462a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4045cc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40462d00"/>
        <function-ref name="stop" scoped="" ref="0x4045c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404968f8" loc="58:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404968f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40496ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f9c98" loc="57:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f9c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f9e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404a5a40" loc="52:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404a5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a5c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049fa70" loc="46:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049fc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404a52e0" loc="50:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404a54b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404a5598"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404a5678"/>
        <function-ref name="actualMicro" scoped="" ref="0x404a5758"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404a5838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x404a3218" loc="45:/opt/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x404a3218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a33f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049edc0" loc="44:/opt/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404a3620" loc="46:/opt/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404a3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a37f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4049d9f8" loc="41:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4049d9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4049d628" loc="40:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4049d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049d800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404a7588" loc="45:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404a7588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a7760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x404b0ad0" loc="44:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x404b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0ca8"/>
        <function-ref name="isInput" scoped="" ref="0x404b0d88"/>
        <function-ref name="toggle" scoped="" ref="0x404b0e68"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7010"/>
        <function-ref name="get" scoped="" ref="0x404a70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a71d0"/>
        <function-ref name="set" scoped="" ref="0x404a72b0"/>
        <function-ref name="clr" scoped="" ref="0x404a7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404aa598" loc="43:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404aa598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404aa770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404d5210" loc="100:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d55e8"/>
        <function-ref name="isInput" scoped="" ref="0x404d56c8"/>
        <function-ref name="toggle" scoped="" ref="0x404d57a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5888"/>
        <function-ref name="get" scoped="" ref="0x404d5968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5a48"/>
        <function-ref name="set" scoped="" ref="0x404d5b28"/>
        <function-ref name="clr" scoped="" ref="0x404d5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404c0750" loc="74:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404c0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0928"/>
        <function-ref name="isInput" scoped="" ref="0x404c0a08"/>
        <function-ref name="toggle" scoped="" ref="0x404c0ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0bc8"/>
        <function-ref name="get" scoped="" ref="0x404c0ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0d88"/>
        <function-ref name="set" scoped="" ref="0x404c0e68"/>
        <function-ref name="clr" scoped="" ref="0x404bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404c6ce8" loc="85:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404c6ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404c5010"/>
        <function-ref name="toggle" scoped="" ref="0x404c50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c51d0"/>
        <function-ref name="get" scoped="" ref="0x404c52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c5390"/>
        <function-ref name="set" scoped="" ref="0x404c5470"/>
        <function-ref name="clr" scoped="" ref="0x404c5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404cdea8" loc="94:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404cdea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404cc1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404cc280"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc360"/>
        <function-ref name="get" scoped="" ref="0x404cc440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc520"/>
        <function-ref name="set" scoped="" ref="0x404cc600"/>
        <function-ref name="clr" scoped="" ref="0x404cc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404b52f0" loc="52:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b54c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b55a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b5688"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5768"/>
        <function-ref name="get" scoped="" ref="0x404b5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b5928"/>
        <function-ref name="set" scoped="" ref="0x404b5a08"/>
        <function-ref name="clr" scoped="" ref="0x404b5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404cea98" loc="92:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404cea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cec70"/>
        <function-ref name="isInput" scoped="" ref="0x404ced50"/>
        <function-ref name="toggle" scoped="" ref="0x404cee30"/>
        <function-ref name="isOutput" scoped="" ref="0x404cef10"/>
        <function-ref name="get" scoped="" ref="0x404cd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cd0f0"/>
        <function-ref name="set" scoped="" ref="0x404cd1d0"/>
        <function-ref name="clr" scoped="" ref="0x404cd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404b4750" loc="55:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404b4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4928"/>
        <function-ref name="isInput" scoped="" ref="0x404b4a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4bc8"/>
        <function-ref name="get" scoped="" ref="0x404b4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4d88"/>
        <function-ref name="set" scoped="" ref="0x404b4e68"/>
        <function-ref name="clr" scoped="" ref="0x404b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404b9ea8" loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404b9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b80c0"/>
        <function-ref name="isInput" scoped="" ref="0x404b81a0"/>
        <function-ref name="toggle" scoped="" ref="0x404b8280"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8360"/>
        <function-ref name="get" scoped="" ref="0x404b8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8520"/>
        <function-ref name="set" scoped="" ref="0x404b8600"/>
        <function-ref name="clr" scoped="" ref="0x404b86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404be670" loc="77:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be848"/>
        <function-ref name="isInput" scoped="" ref="0x404be928"/>
        <function-ref name="toggle" scoped="" ref="0x404bea08"/>
        <function-ref name="isOutput" scoped="" ref="0x404beae8"/>
        <function-ref name="get" scoped="" ref="0x404bebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404beca8"/>
        <function-ref name="set" scoped="" ref="0x404bed88"/>
        <function-ref name="clr" scoped="" ref="0x404bee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404c4c08" loc="88:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404c4c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4de0"/>
        <function-ref name="isInput" scoped="" ref="0x404c4ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404cf010"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf0f0"/>
        <function-ref name="get" scoped="" ref="0x404cf1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf2b0"/>
        <function-ref name="set" scoped="" ref="0x404cf390"/>
        <function-ref name="clr" scoped="" ref="0x404cf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404ac010" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ac2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ac3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac488"/>
        <function-ref name="get" scoped="" ref="0x404ac568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac648"/>
        <function-ref name="set" scoped="" ref="0x404ac728"/>
        <function-ref name="clr" scoped="" ref="0x404ac808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404b2670" loc="58:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2848"/>
        <function-ref name="isInput" scoped="" ref="0x404b2928"/>
        <function-ref name="toggle" scoped="" ref="0x404b2a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2ae8"/>
        <function-ref name="get" scoped="" ref="0x404b2bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2ca8"/>
        <function-ref name="set" scoped="" ref="0x404b2d88"/>
        <function-ref name="clr" scoped="" ref="0x404b2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x404c3ce8" loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x404c3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404c2010"/>
        <function-ref name="toggle" scoped="" ref="0x404c20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c21d0"/>
        <function-ref name="get" scoped="" ref="0x404c22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2390"/>
        <function-ref name="set" scoped="" ref="0x404c2470"/>
        <function-ref name="clr" scoped="" ref="0x404c2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404c84b0" loc="80:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404c84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c8688"/>
        <function-ref name="isInput" scoped="" ref="0x404c8768"/>
        <function-ref name="toggle" scoped="" ref="0x404c8848"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8928"/>
        <function-ref name="get" scoped="" ref="0x404c8a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c8ae8"/>
        <function-ref name="set" scoped="" ref="0x404c8bc8"/>
        <function-ref name="clr" scoped="" ref="0x404c8ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404cbce8" loc="97:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404cbce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cbec0"/>
        <function-ref name="isInput" scoped="" ref="0x404ca010"/>
        <function-ref name="toggle" scoped="" ref="0x404ca0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ca1d0"/>
        <function-ref name="get" scoped="" ref="0x404ca2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ca390"/>
        <function-ref name="set" scoped="" ref="0x404ca470"/>
        <function-ref name="clr" scoped="" ref="0x404ca550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404d32f0" loc="103:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404d32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d34c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d35a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d3688"/>
        <function-ref name="isOutput" scoped="" ref="0x404d3768"/>
        <function-ref name="get" scoped="" ref="0x404d3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d3928"/>
        <function-ref name="set" scoped="" ref="0x404d3a08"/>
        <function-ref name="clr" scoped="" ref="0x404d3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404c78e0" loc="83:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404c78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404c7b98"/>
        <function-ref name="toggle" scoped="" ref="0x404c7c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7d58"/>
        <function-ref name="get" scoped="" ref="0x404c7e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7f18"/>
        <function-ref name="set" scoped="" ref="0x404c6010"/>
        <function-ref name="clr" scoped="" ref="0x404c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x404b7ea8" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x404b7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b60c0"/>
        <function-ref name="isInput" scoped="" ref="0x404b61a0"/>
        <function-ref name="toggle" scoped="" ref="0x404b6280"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6360"/>
        <function-ref name="get" scoped="" ref="0x404b6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6520"/>
        <function-ref name="set" scoped="" ref="0x404b6600"/>
        <function-ref name="clr" scoped="" ref="0x404b66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404bc590" loc="61:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404bc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc768"/>
        <function-ref name="isInput" scoped="" ref="0x404bc848"/>
        <function-ref name="toggle" scoped="" ref="0x404bc928"/>
        <function-ref name="isOutput" scoped="" ref="0x404bca08"/>
        <function-ref name="get" scoped="" ref="0x404bcae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bcbc8"/>
        <function-ref name="set" scoped="" ref="0x404bcca8"/>
        <function-ref name="clr" scoped="" ref="0x404bcd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404d5e08" loc="101:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404d5e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4010"/>
        <function-ref name="isInput" scoped="" ref="0x404d40f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d42b0"/>
        <function-ref name="get" scoped="" ref="0x404d4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4470"/>
        <function-ref name="set" scoped="" ref="0x404d4550"/>
        <function-ref name="clr" scoped="" ref="0x404d4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x404baa08" loc="64:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x404baa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404babe0"/>
        <function-ref name="isInput" scoped="" ref="0x404bacc0"/>
        <function-ref name="toggle" scoped="" ref="0x404bada0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bae80"/>
        <function-ref name="get" scoped="" ref="0x404b9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b90f0"/>
        <function-ref name="set" scoped="" ref="0x404b91d0"/>
        <function-ref name="clr" scoped="" ref="0x404b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404bf210" loc="75:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404bf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bf3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404bf4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404bf5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bf688"/>
        <function-ref name="get" scoped="" ref="0x404bf768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bf848"/>
        <function-ref name="set" scoped="" ref="0x404bf928"/>
        <function-ref name="clr" scoped="" ref="0x404bfa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404c5750" loc="86:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404c5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5928"/>
        <function-ref name="isInput" scoped="" ref="0x404c5a08"/>
        <function-ref name="toggle" scoped="" ref="0x404c5ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5bc8"/>
        <function-ref name="get" scoped="" ref="0x404c5ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c5d88"/>
        <function-ref name="set" scoped="" ref="0x404c5e68"/>
        <function-ref name="clr" scoped="" ref="0x404c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404cc8e0" loc="95:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404cc8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ccab8"/>
        <function-ref name="isInput" scoped="" ref="0x404ccb98"/>
        <function-ref name="toggle" scoped="" ref="0x404ccc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404ccd58"/>
        <function-ref name="get" scoped="" ref="0x404cce38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ccf18"/>
        <function-ref name="set" scoped="" ref="0x404cb010"/>
        <function-ref name="clr" scoped="" ref="0x404cb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404b5ce8" loc="53:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404b5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404b4010"/>
        <function-ref name="toggle" scoped="" ref="0x404b40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b41d0"/>
        <function-ref name="get" scoped="" ref="0x404b42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4390"/>
        <function-ref name="set" scoped="" ref="0x404b4470"/>
        <function-ref name="clr" scoped="" ref="0x404b4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404b3210" loc="56:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404b3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b33e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b34c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b35a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3688"/>
        <function-ref name="get" scoped="" ref="0x404b3768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3848"/>
        <function-ref name="set" scoped="" ref="0x404b3928"/>
        <function-ref name="clr" scoped="" ref="0x404b3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404b88e0" loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404b88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404b8b98"/>
        <function-ref name="toggle" scoped="" ref="0x404b8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8d58"/>
        <function-ref name="get" scoped="" ref="0x404b8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8f18"/>
        <function-ref name="set" scoped="" ref="0x404c3010"/>
        <function-ref name="clr" scoped="" ref="0x404c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404c90a0" loc="78:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404c90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c9278"/>
        <function-ref name="isInput" scoped="" ref="0x404c9358"/>
        <function-ref name="toggle" scoped="" ref="0x404c9438"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9518"/>
        <function-ref name="get" scoped="" ref="0x404c95f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c96d8"/>
        <function-ref name="set" scoped="" ref="0x404c97b8"/>
        <function-ref name="clr" scoped="" ref="0x404c9898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404cf670" loc="89:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf848"/>
        <function-ref name="isInput" scoped="" ref="0x404cf928"/>
        <function-ref name="toggle" scoped="" ref="0x404cfa08"/>
        <function-ref name="isOutput" scoped="" ref="0x404cfae8"/>
        <function-ref name="get" scoped="" ref="0x404cfbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cfca8"/>
        <function-ref name="set" scoped="" ref="0x404cfd88"/>
        <function-ref name="clr" scoped="" ref="0x404cfe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x404aca08" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x404aca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404acbe0"/>
        <function-ref name="isInput" scoped="" ref="0x404accc0"/>
        <function-ref name="toggle" scoped="" ref="0x404acda0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ace80"/>
        <function-ref name="get" scoped="" ref="0x404b7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b70f0"/>
        <function-ref name="set" scoped="" ref="0x404b71d0"/>
        <function-ref name="clr" scoped="" ref="0x404b72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404bd0a0" loc="59:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404bd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd2f8"/>
        <function-ref name="isInput" scoped="" ref="0x404bd3d8"/>
        <function-ref name="toggle" scoped="" ref="0x404bd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd598"/>
        <function-ref name="get" scoped="" ref="0x404bd678"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd758"/>
        <function-ref name="set" scoped="" ref="0x404bd838"/>
        <function-ref name="clr" scoped="" ref="0x404bd918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404c2750" loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404c2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c2928"/>
        <function-ref name="isInput" scoped="" ref="0x404c2a08"/>
        <function-ref name="toggle" scoped="" ref="0x404c2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c2bc8"/>
        <function-ref name="get" scoped="" ref="0x404c2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2d88"/>
        <function-ref name="set" scoped="" ref="0x404c2e68"/>
        <function-ref name="clr" scoped="" ref="0x404c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404ca750" loc="98:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404ca750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ca928"/>
        <function-ref name="isInput" scoped="" ref="0x404caa08"/>
        <function-ref name="toggle" scoped="" ref="0x404caae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cabc8"/>
        <function-ref name="get" scoped="" ref="0x404caca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cad88"/>
        <function-ref name="set" scoped="" ref="0x404cae68"/>
        <function-ref name="clr" scoped="" ref="0x404d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404c1c08" loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404c1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1ee0"/>
        <function-ref name="isInput" scoped="" ref="0x404c0010"/>
        <function-ref name="toggle" scoped="" ref="0x404c00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c01d0"/>
        <function-ref name="get" scoped="" ref="0x404c02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0390"/>
        <function-ref name="set" scoped="" ref="0x404c0470"/>
        <function-ref name="clr" scoped="" ref="0x404c0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404c62f0" loc="84:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c64c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c65a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c6688"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6768"/>
        <function-ref name="get" scoped="" ref="0x404c6848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6928"/>
        <function-ref name="set" scoped="" ref="0x404c6a08"/>
        <function-ref name="clr" scoped="" ref="0x404c6ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404cd4b0" loc="93:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404cd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd688"/>
        <function-ref name="isInput" scoped="" ref="0x404cd768"/>
        <function-ref name="toggle" scoped="" ref="0x404cd848"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd928"/>
        <function-ref name="get" scoped="" ref="0x404cda08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cdae8"/>
        <function-ref name="set" scoped="" ref="0x404cdbc8"/>
        <function-ref name="clr" scoped="" ref="0x404cdca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404d3ce8" loc="104:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404d3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404d2010"/>
        <function-ref name="toggle" scoped="" ref="0x404d20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d21d0"/>
        <function-ref name="get" scoped="" ref="0x404d22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d2390"/>
        <function-ref name="set" scoped="" ref="0x404d2470"/>
        <function-ref name="clr" scoped="" ref="0x404d2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404b68e0" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404b68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404b6b98"/>
        <function-ref name="toggle" scoped="" ref="0x404b6c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6d58"/>
        <function-ref name="get" scoped="" ref="0x404b6e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6f18"/>
        <function-ref name="set" scoped="" ref="0x404b5010"/>
        <function-ref name="clr" scoped="" ref="0x404b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404ba010" loc="62:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ba1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ba2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ba3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba488"/>
        <function-ref name="get" scoped="" ref="0x404ba568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba648"/>
        <function-ref name="set" scoped="" ref="0x404ba728"/>
        <function-ref name="clr" scoped="" ref="0x404ba808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404ce0a0" loc="91:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404ce0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ce278"/>
        <function-ref name="isInput" scoped="" ref="0x404ce358"/>
        <function-ref name="toggle" scoped="" ref="0x404ce438"/>
        <function-ref name="isOutput" scoped="" ref="0x404ce518"/>
        <function-ref name="get" scoped="" ref="0x404ce5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ce6d8"/>
        <function-ref name="set" scoped="" ref="0x404ce7b8"/>
        <function-ref name="clr" scoped="" ref="0x404ce898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404b94b0" loc="65:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404b94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9688"/>
        <function-ref name="isInput" scoped="" ref="0x404b9768"/>
        <function-ref name="toggle" scoped="" ref="0x404b9848"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9928"/>
        <function-ref name="get" scoped="" ref="0x404b9a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9ae8"/>
        <function-ref name="set" scoped="" ref="0x404b9bc8"/>
        <function-ref name="clr" scoped="" ref="0x404b9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404bfc08" loc="76:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404bfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bfde0"/>
        <function-ref name="isInput" scoped="" ref="0x404bfec0"/>
        <function-ref name="toggle" scoped="" ref="0x404be010"/>
        <function-ref name="isOutput" scoped="" ref="0x404be0f0"/>
        <function-ref name="get" scoped="" ref="0x404be1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be2b0"/>
        <function-ref name="set" scoped="" ref="0x404be390"/>
        <function-ref name="clr" scoped="" ref="0x404be470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404c4210" loc="87:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404c4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c43e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c44c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c45a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4688"/>
        <function-ref name="get" scoped="" ref="0x404c4768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4848"/>
        <function-ref name="set" scoped="" ref="0x404c4928"/>
        <function-ref name="clr" scoped="" ref="0x404c4a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404cb2f0" loc="96:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404cb5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404cb688"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb768"/>
        <function-ref name="get" scoped="" ref="0x404cb848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb928"/>
        <function-ref name="set" scoped="" ref="0x404cba08"/>
        <function-ref name="clr" scoped="" ref="0x404cbae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404a9548" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404a9548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a9720"/>
        <function-ref name="isInput" scoped="" ref="0x404a9800"/>
        <function-ref name="toggle" scoped="" ref="0x404a98e0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a99c0"/>
        <function-ref name="get" scoped="" ref="0x404a9aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a9b80"/>
        <function-ref name="set" scoped="" ref="0x404a9c60"/>
        <function-ref name="clr" scoped="" ref="0x404a9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404b3c08" loc="57:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404b3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3de0"/>
        <function-ref name="isInput" scoped="" ref="0x404b3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404b2010"/>
        <function-ref name="isOutput" scoped="" ref="0x404b20f0"/>
        <function-ref name="get" scoped="" ref="0x404b21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b22b0"/>
        <function-ref name="set" scoped="" ref="0x404b2390"/>
        <function-ref name="clr" scoped="" ref="0x404b2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404c32f0" loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c34c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c35a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c3688"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3768"/>
        <function-ref name="get" scoped="" ref="0x404c3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c3928"/>
        <function-ref name="set" scoped="" ref="0x404c3a08"/>
        <function-ref name="clr" scoped="" ref="0x404c3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404c9a98" loc="79:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404c9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c9c70"/>
        <function-ref name="isInput" scoped="" ref="0x404c9d50"/>
        <function-ref name="toggle" scoped="" ref="0x404c9e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9f10"/>
        <function-ref name="get" scoped="" ref="0x404c8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c80f0"/>
        <function-ref name="set" scoped="" ref="0x404c81d0"/>
        <function-ref name="clr" scoped="" ref="0x404c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404d4830" loc="102:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404d4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4a08"/>
        <function-ref name="isInput" scoped="" ref="0x404d4ae8"/>
        <function-ref name="toggle" scoped="" ref="0x404d4bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d4ca8"/>
        <function-ref name="get" scoped="" ref="0x404d4d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4e68"/>
        <function-ref name="set" scoped="" ref="0x404d3010"/>
        <function-ref name="clr" scoped="" ref="0x404d30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404c8ea8" loc="82:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404c8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c70c0"/>
        <function-ref name="isInput" scoped="" ref="0x404c71a0"/>
        <function-ref name="toggle" scoped="" ref="0x404c7280"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7360"/>
        <function-ref name="get" scoped="" ref="0x404c7440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7520"/>
        <function-ref name="set" scoped="" ref="0x404c7600"/>
        <function-ref name="clr" scoped="" ref="0x404c76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404c1210" loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404c1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c13e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c14c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c15a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1688"/>
        <function-ref name="get" scoped="" ref="0x404c1768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1848"/>
        <function-ref name="set" scoped="" ref="0x404c1928"/>
        <function-ref name="clr" scoped="" ref="0x404c1a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404b74b0" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404b74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7688"/>
        <function-ref name="isInput" scoped="" ref="0x404b7768"/>
        <function-ref name="toggle" scoped="" ref="0x404b7848"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7928"/>
        <function-ref name="get" scoped="" ref="0x404b7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7ae8"/>
        <function-ref name="set" scoped="" ref="0x404b7bc8"/>
        <function-ref name="clr" scoped="" ref="0x404b7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404bdb18" loc="60:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404bdb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bdcf0"/>
        <function-ref name="isInput" scoped="" ref="0x404bddd0"/>
        <function-ref name="toggle" scoped="" ref="0x404bdeb0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc010"/>
        <function-ref name="get" scoped="" ref="0x404bc0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc1d0"/>
        <function-ref name="set" scoped="" ref="0x404bc2b0"/>
        <function-ref name="clr" scoped="" ref="0x404bc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404fc330" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404fc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc508"/>
        <function-ref name="isInput" scoped="" ref="0x404fc5e8"/>
        <function-ref name="toggle" scoped="" ref="0x404fc6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc7a8"/>
        <function-ref name="get" scoped="" ref="0x404fc888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc968"/>
        <function-ref name="set" scoped="" ref="0x404fca48"/>
        <function-ref name="clr" scoped="" ref="0x404fcb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404fa030" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404fa030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa208"/>
        <function-ref name="isInput" scoped="" ref="0x404fa2e8"/>
        <function-ref name="toggle" scoped="" ref="0x404fa3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fa4a8"/>
        <function-ref name="get" scoped="" ref="0x404fa588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fa668"/>
        <function-ref name="set" scoped="" ref="0x404fa748"/>
        <function-ref name="clr" scoped="" ref="0x404fa828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404fe010" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fe1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404fe2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404fe3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fe488"/>
        <function-ref name="get" scoped="" ref="0x404fe568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fe648"/>
        <function-ref name="set" scoped="" ref="0x404fe728"/>
        <function-ref name="clr" scoped="" ref="0x404fe808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404fcc88" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404fcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fce60"/>
        <function-ref name="isInput" scoped="" ref="0x404fb010"/>
        <function-ref name="toggle" scoped="" ref="0x404fb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb1d0"/>
        <function-ref name="get" scoped="" ref="0x404fb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb390"/>
        <function-ref name="set" scoped="" ref="0x404fb470"/>
        <function-ref name="clr" scoped="" ref="0x404fb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404fa988" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404fa988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fab60"/>
        <function-ref name="isInput" scoped="" ref="0x404fac40"/>
        <function-ref name="toggle" scoped="" ref="0x404fad20"/>
        <function-ref name="isOutput" scoped="" ref="0x404fae00"/>
        <function-ref name="get" scoped="" ref="0x404faee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40505010"/>
        <function-ref name="set" scoped="" ref="0x405050f0"/>
        <function-ref name="clr" scoped="" ref="0x405051d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404fe968" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404fe968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404feb40"/>
        <function-ref name="isInput" scoped="" ref="0x404fec20"/>
        <function-ref name="toggle" scoped="" ref="0x404fed00"/>
        <function-ref name="isOutput" scoped="" ref="0x404fede0"/>
        <function-ref name="get" scoped="" ref="0x404feec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc010"/>
        <function-ref name="set" scoped="" ref="0x404fc0f0"/>
        <function-ref name="clr" scoped="" ref="0x404fc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404fb6b0" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404fb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb888"/>
        <function-ref name="isInput" scoped="" ref="0x404fb968"/>
        <function-ref name="toggle" scoped="" ref="0x404fba48"/>
        <function-ref name="isOutput" scoped="" ref="0x404fbb28"/>
        <function-ref name="get" scoped="" ref="0x404fbc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fbce8"/>
        <function-ref name="set" scoped="" ref="0x404fbdc8"/>
        <function-ref name="clr" scoped="" ref="0x404fbea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40505330" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40505330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40505508"/>
        <function-ref name="isInput" scoped="" ref="0x405055e8"/>
        <function-ref name="toggle" scoped="" ref="0x405056c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405057a8"/>
        <function-ref name="get" scoped="" ref="0x40505888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40505968"/>
        <function-ref name="set" scoped="" ref="0x40505a48"/>
        <function-ref name="clr" scoped="" ref="0x40505b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41309a30" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41309a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41309c08"/>
        <function-ref name="isInput" scoped="" ref="0x41309ce8"/>
        <function-ref name="toggle" scoped="" ref="0x41309dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x41309ea8"/>
        <function-ref name="get" scoped="" ref="0x41308010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413080f0"/>
        <function-ref name="set" scoped="" ref="0x413081d0"/>
        <function-ref name="clr" scoped="" ref="0x413082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41307538" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41307538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41307710"/>
        <function-ref name="isInput" scoped="" ref="0x413077f0"/>
        <function-ref name="toggle" scoped="" ref="0x413078d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413079b0"/>
        <function-ref name="get" scoped="" ref="0x41307a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41307b70"/>
        <function-ref name="set" scoped="" ref="0x41307c50"/>
        <function-ref name="clr" scoped="" ref="0x41307d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41304010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41304010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413041e8"/>
        <function-ref name="isInput" scoped="" ref="0x413042c8"/>
        <function-ref name="toggle" scoped="" ref="0x413043a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41304488"/>
        <function-ref name="get" scoped="" ref="0x41304568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41304648"/>
        <function-ref name="set" scoped="" ref="0x41304728"/>
        <function-ref name="clr" scoped="" ref="0x41304808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413039e8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413039e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41303bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41303ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41303d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41303e60"/>
        <function-ref name="get" scoped="" ref="0x41302010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413020f0"/>
        <function-ref name="set" scoped="" ref="0x413021d0"/>
        <function-ref name="clr" scoped="" ref="0x413022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41301538" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41301538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41301710"/>
        <function-ref name="isInput" scoped="" ref="0x413017f0"/>
        <function-ref name="toggle" scoped="" ref="0x413018d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413019b0"/>
        <function-ref name="get" scoped="" ref="0x41301a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41301b70"/>
        <function-ref name="set" scoped="" ref="0x41301c50"/>
        <function-ref name="clr" scoped="" ref="0x41301d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412ff010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412ff1e8"/>
        <function-ref name="isInput" scoped="" ref="0x412ff2c8"/>
        <function-ref name="toggle" scoped="" ref="0x412ff3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x412ff488"/>
        <function-ref name="get" scoped="" ref="0x412ff568"/>
        <function-ref name="makeOutput" scoped="" ref="0x412ff648"/>
        <function-ref name="set" scoped="" ref="0x412ff728"/>
        <function-ref name="clr" scoped="" ref="0x412ff808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412fe9e8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412fe9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412febc0"/>
        <function-ref name="isInput" scoped="" ref="0x412feca0"/>
        <function-ref name="toggle" scoped="" ref="0x412fed80"/>
        <function-ref name="isOutput" scoped="" ref="0x412fee60"/>
        <function-ref name="get" scoped="" ref="0x412fd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x412fd0f0"/>
        <function-ref name="set" scoped="" ref="0x412fd1d0"/>
        <function-ref name="clr" scoped="" ref="0x412fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412fc538" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412fc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412fc710"/>
        <function-ref name="isInput" scoped="" ref="0x412fc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x412fc8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412fc9b0"/>
        <function-ref name="get" scoped="" ref="0x412fca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x412fcb70"/>
        <function-ref name="set" scoped="" ref="0x412fcc50"/>
        <function-ref name="clr" scoped="" ref="0x412fcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40501ba8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40501ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501d80"/>
        <function-ref name="isInput" scoped="" ref="0x40501e60"/>
        <function-ref name="toggle" scoped="" ref="0x40500010"/>
        <function-ref name="isOutput" scoped="" ref="0x405000f0"/>
        <function-ref name="get" scoped="" ref="0x405001d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405002b0"/>
        <function-ref name="set" scoped="" ref="0x40500390"/>
        <function-ref name="clr" scoped="" ref="0x40500470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4050b890" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4050b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050ba68"/>
        <function-ref name="isInput" scoped="" ref="0x4050bb48"/>
        <function-ref name="toggle" scoped="" ref="0x4050bc28"/>
        <function-ref name="isOutput" scoped="" ref="0x4050bd08"/>
        <function-ref name="get" scoped="" ref="0x4050bde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bec8"/>
        <function-ref name="set" scoped="" ref="0x40509010"/>
        <function-ref name="clr" scoped="" ref="0x405090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40502888" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40502888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502a60"/>
        <function-ref name="isInput" scoped="" ref="0x40502b40"/>
        <function-ref name="toggle" scoped="" ref="0x40502c20"/>
        <function-ref name="isOutput" scoped="" ref="0x40502d00"/>
        <function-ref name="get" scoped="" ref="0x40502de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502ec0"/>
        <function-ref name="set" scoped="" ref="0x40501010"/>
        <function-ref name="clr" scoped="" ref="0x405010f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405005d0" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405005d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405007a8"/>
        <function-ref name="isInput" scoped="" ref="0x40500888"/>
        <function-ref name="toggle" scoped="" ref="0x40500968"/>
        <function-ref name="isOutput" scoped="" ref="0x40500a48"/>
        <function-ref name="get" scoped="" ref="0x40500b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500c08"/>
        <function-ref name="set" scoped="" ref="0x40500ce8"/>
        <function-ref name="clr" scoped="" ref="0x40500dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40509250" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40509250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509428"/>
        <function-ref name="isInput" scoped="" ref="0x40509508"/>
        <function-ref name="toggle" scoped="" ref="0x405095e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405096c8"/>
        <function-ref name="get" scoped="" ref="0x405097a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509888"/>
        <function-ref name="set" scoped="" ref="0x40509968"/>
        <function-ref name="clr" scoped="" ref="0x40509a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40501250" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40501250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501428"/>
        <function-ref name="isInput" scoped="" ref="0x40501508"/>
        <function-ref name="toggle" scoped="" ref="0x405015e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405016c8"/>
        <function-ref name="get" scoped="" ref="0x405017a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501888"/>
        <function-ref name="set" scoped="" ref="0x40501968"/>
        <function-ref name="clr" scoped="" ref="0x40501a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40500f28" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40500f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b110"/>
        <function-ref name="isInput" scoped="" ref="0x4050b1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4050b2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b3b0"/>
        <function-ref name="get" scoped="" ref="0x4050b490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b570"/>
        <function-ref name="set" scoped="" ref="0x4050b650"/>
        <function-ref name="clr" scoped="" ref="0x4050b730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40509ba8" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40509ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509d80"/>
        <function-ref name="isInput" scoped="" ref="0x40509e60"/>
        <function-ref name="toggle" scoped="" ref="0x40508010"/>
        <function-ref name="isOutput" scoped="" ref="0x405080f0"/>
        <function-ref name="get" scoped="" ref="0x405081d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405082b0"/>
        <function-ref name="set" scoped="" ref="0x40508390"/>
        <function-ref name="clr" scoped="" ref="0x40508470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41360938" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41360938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41360b10"/>
        <function-ref name="isInput" scoped="" ref="0x41360bf0"/>
        <function-ref name="toggle" scoped="" ref="0x41360cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x41360db0"/>
        <function-ref name="get" scoped="" ref="0x41360e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4135f010"/>
        <function-ref name="set" scoped="" ref="0x4135f0f0"/>
        <function-ref name="clr" scoped="" ref="0x4135f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4135e3b0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4135e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4135e588"/>
        <function-ref name="isInput" scoped="" ref="0x4135e668"/>
        <function-ref name="toggle" scoped="" ref="0x4135e748"/>
        <function-ref name="isOutput" scoped="" ref="0x4135e828"/>
        <function-ref name="get" scoped="" ref="0x4135e908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4135e9e8"/>
        <function-ref name="set" scoped="" ref="0x4135eac8"/>
        <function-ref name="clr" scoped="" ref="0x4135eba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4135dd70" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4135dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4135c010"/>
        <function-ref name="isInput" scoped="" ref="0x4135c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4135c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4135c2b0"/>
        <function-ref name="get" scoped="" ref="0x4135c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4135c470"/>
        <function-ref name="set" scoped="" ref="0x4135c550"/>
        <function-ref name="clr" scoped="" ref="0x4135c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4135b7f8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4135b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4135b9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4135bab0"/>
        <function-ref name="toggle" scoped="" ref="0x4135bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4135bc70"/>
        <function-ref name="get" scoped="" ref="0x4135bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4135be30"/>
        <function-ref name="set" scoped="" ref="0x4135bf10"/>
        <function-ref name="clr" scoped="" ref="0x4135a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41359228" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41359228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41359400"/>
        <function-ref name="isInput" scoped="" ref="0x413594e0"/>
        <function-ref name="toggle" scoped="" ref="0x413595c0"/>
        <function-ref name="isOutput" scoped="" ref="0x413596a0"/>
        <function-ref name="get" scoped="" ref="0x41359780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41359860"/>
        <function-ref name="set" scoped="" ref="0x41359940"/>
        <function-ref name="clr" scoped="" ref="0x41359a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41358c08" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41358c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41358de0"/>
        <function-ref name="isInput" scoped="" ref="0x41358ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41357010"/>
        <function-ref name="isOutput" scoped="" ref="0x413570f0"/>
        <function-ref name="get" scoped="" ref="0x413571d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413572b0"/>
        <function-ref name="set" scoped="" ref="0x41357390"/>
        <function-ref name="clr" scoped="" ref="0x41357470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413566c0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413566c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41356898"/>
        <function-ref name="isInput" scoped="" ref="0x41356978"/>
        <function-ref name="toggle" scoped="" ref="0x41356a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41356b38"/>
        <function-ref name="get" scoped="" ref="0x41356c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41356cf8"/>
        <function-ref name="set" scoped="" ref="0x41356dd8"/>
        <function-ref name="clr" scoped="" ref="0x41356eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413540b0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413540b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41354288"/>
        <function-ref name="isInput" scoped="" ref="0x41354368"/>
        <function-ref name="toggle" scoped="" ref="0x41354448"/>
        <function-ref name="isOutput" scoped="" ref="0x41354528"/>
        <function-ref name="get" scoped="" ref="0x41354608"/>
        <function-ref name="makeOutput" scoped="" ref="0x413546e8"/>
        <function-ref name="set" scoped="" ref="0x413547c8"/>
        <function-ref name="clr" scoped="" ref="0x413548a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405104f0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405104f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405106c8"/>
        <function-ref name="isInput" scoped="" ref="0x405107a8"/>
        <function-ref name="toggle" scoped="" ref="0x40510888"/>
        <function-ref name="isOutput" scoped="" ref="0x40510968"/>
        <function-ref name="get" scoped="" ref="0x40510a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510b28"/>
        <function-ref name="set" scoped="" ref="0x40510c08"/>
        <function-ref name="clr" scoped="" ref="0x40510ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4050e170" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4050e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050e348"/>
        <function-ref name="isInput" scoped="" ref="0x4050e428"/>
        <function-ref name="toggle" scoped="" ref="0x4050e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4050e5e8"/>
        <function-ref name="get" scoped="" ref="0x4050e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050e7a8"/>
        <function-ref name="set" scoped="" ref="0x4050e888"/>
        <function-ref name="clr" scoped="" ref="0x4050e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40511228" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40511228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511400"/>
        <function-ref name="isInput" scoped="" ref="0x405114e0"/>
        <function-ref name="toggle" scoped="" ref="0x405115c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405116a0"/>
        <function-ref name="get" scoped="" ref="0x40511780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40511860"/>
        <function-ref name="set" scoped="" ref="0x40511940"/>
        <function-ref name="clr" scoped="" ref="0x40511a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40510e48" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40510e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050f050"/>
        <function-ref name="isInput" scoped="" ref="0x4050f130"/>
        <function-ref name="toggle" scoped="" ref="0x4050f210"/>
        <function-ref name="isOutput" scoped="" ref="0x4050f2f0"/>
        <function-ref name="get" scoped="" ref="0x4050f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050f4b0"/>
        <function-ref name="set" scoped="" ref="0x4050f590"/>
        <function-ref name="clr" scoped="" ref="0x4050f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4050eac8" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4050eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4050ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4050ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d010"/>
        <function-ref name="get" scoped="" ref="0x4050d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d1d0"/>
        <function-ref name="set" scoped="" ref="0x4050d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4050d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40511b80" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40511b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511d58"/>
        <function-ref name="isInput" scoped="" ref="0x40511e38"/>
        <function-ref name="toggle" scoped="" ref="0x40511f18"/>
        <function-ref name="isOutput" scoped="" ref="0x40510010"/>
        <function-ref name="get" scoped="" ref="0x405100f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405101d0"/>
        <function-ref name="set" scoped="" ref="0x405102b0"/>
        <function-ref name="clr" scoped="" ref="0x40510390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4050f7d0" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4050f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4050fa88"/>
        <function-ref name="toggle" scoped="" ref="0x4050fb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4050fc48"/>
        <function-ref name="get" scoped="" ref="0x4050fd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050fe08"/>
        <function-ref name="set" scoped="" ref="0x4050fee8"/>
        <function-ref name="clr" scoped="" ref="0x4050e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4050d4f0" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4050d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4050d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4050d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d968"/>
        <function-ref name="get" scoped="" ref="0x4050da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050db28"/>
        <function-ref name="set" scoped="" ref="0x4050dc08"/>
        <function-ref name="clr" scoped="" ref="0x4050dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4136e538" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4136e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4136e710"/>
        <function-ref name="isInput" scoped="" ref="0x4136e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4136e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4136e9b0"/>
        <function-ref name="get" scoped="" ref="0x4136ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4136eb70"/>
        <function-ref name="set" scoped="" ref="0x4136ec50"/>
        <function-ref name="clr" scoped="" ref="0x4136ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4136b010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4136b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4136b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4136b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4136b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4136b488"/>
        <function-ref name="get" scoped="" ref="0x4136b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4136b648"/>
        <function-ref name="set" scoped="" ref="0x4136b728"/>
        <function-ref name="clr" scoped="" ref="0x4136b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4136a9e8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4136a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4136abc0"/>
        <function-ref name="isInput" scoped="" ref="0x4136aca0"/>
        <function-ref name="toggle" scoped="" ref="0x4136ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x4136ae60"/>
        <function-ref name="get" scoped="" ref="0x41369010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413690f0"/>
        <function-ref name="set" scoped="" ref="0x413691d0"/>
        <function-ref name="clr" scoped="" ref="0x413692b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41368538" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41368538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41368710"/>
        <function-ref name="isInput" scoped="" ref="0x413687f0"/>
        <function-ref name="toggle" scoped="" ref="0x413688d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413689b0"/>
        <function-ref name="get" scoped="" ref="0x41368a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41368b70"/>
        <function-ref name="set" scoped="" ref="0x41368c50"/>
        <function-ref name="clr" scoped="" ref="0x41368d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ac010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ac1e8"/>
        <function-ref name="isInput" scoped="" ref="0x413ac2c8"/>
        <function-ref name="toggle" scoped="" ref="0x413ac3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x413ac488"/>
        <function-ref name="get" scoped="" ref="0x413ac568"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ac648"/>
        <function-ref name="set" scoped="" ref="0x413ac728"/>
        <function-ref name="clr" scoped="" ref="0x413ac808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ab9e8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ab9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413abbc0"/>
        <function-ref name="isInput" scoped="" ref="0x413abca0"/>
        <function-ref name="toggle" scoped="" ref="0x413abd80"/>
        <function-ref name="isOutput" scoped="" ref="0x413abe60"/>
        <function-ref name="get" scoped="" ref="0x413aa010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413aa0f0"/>
        <function-ref name="set" scoped="" ref="0x413aa1d0"/>
        <function-ref name="clr" scoped="" ref="0x413aa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413a9538" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413a9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413a9710"/>
        <function-ref name="isInput" scoped="" ref="0x413a97f0"/>
        <function-ref name="toggle" scoped="" ref="0x413a98d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413a99b0"/>
        <function-ref name="get" scoped="" ref="0x413a9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x413a9b70"/>
        <function-ref name="set" scoped="" ref="0x413a9c50"/>
        <function-ref name="clr" scoped="" ref="0x413a9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413a7010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413a7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413a71e8"/>
        <function-ref name="isInput" scoped="" ref="0x413a72c8"/>
        <function-ref name="toggle" scoped="" ref="0x413a73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x413a7488"/>
        <function-ref name="get" scoped="" ref="0x413a7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x413a7648"/>
        <function-ref name="set" scoped="" ref="0x413a7728"/>
        <function-ref name="clr" scoped="" ref="0x413a7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40514e48" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40514e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40513050"/>
        <function-ref name="isInput" scoped="" ref="0x40513130"/>
        <function-ref name="toggle" scoped="" ref="0x40513210"/>
        <function-ref name="isOutput" scoped="" ref="0x405132f0"/>
        <function-ref name="get" scoped="" ref="0x405133d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405134b0"/>
        <function-ref name="set" scoped="" ref="0x40513590"/>
        <function-ref name="clr" scoped="" ref="0x40513670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40512ac8" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40512ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40512d80"/>
        <function-ref name="toggle" scoped="" ref="0x40512e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d010"/>
        <function-ref name="get" scoped="" ref="0x4051d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051d1d0"/>
        <function-ref name="set" scoped="" ref="0x4051d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4051d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40515b00" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40515b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40515cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40515db8"/>
        <function-ref name="toggle" scoped="" ref="0x40515e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40514010"/>
        <function-ref name="get" scoped="" ref="0x405140f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405141d0"/>
        <function-ref name="set" scoped="" ref="0x405142b0"/>
        <function-ref name="clr" scoped="" ref="0x40514390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405137d0" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405137d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405139a8"/>
        <function-ref name="isInput" scoped="" ref="0x40513a88"/>
        <function-ref name="toggle" scoped="" ref="0x40513b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40513c48"/>
        <function-ref name="get" scoped="" ref="0x40513d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513e08"/>
        <function-ref name="set" scoped="" ref="0x40513ee8"/>
        <function-ref name="clr" scoped="" ref="0x40512010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4051d4f0" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4051d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4051d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4051d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d968"/>
        <function-ref name="get" scoped="" ref="0x4051da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051db28"/>
        <function-ref name="set" scoped="" ref="0x4051dc08"/>
        <function-ref name="clr" scoped="" ref="0x4051dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405144f0" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405144f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405146c8"/>
        <function-ref name="isInput" scoped="" ref="0x405147a8"/>
        <function-ref name="toggle" scoped="" ref="0x40514888"/>
        <function-ref name="isOutput" scoped="" ref="0x40514968"/>
        <function-ref name="get" scoped="" ref="0x40514a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40514b28"/>
        <function-ref name="set" scoped="" ref="0x40514c08"/>
        <function-ref name="clr" scoped="" ref="0x40514ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40512170" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40512170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512348"/>
        <function-ref name="isInput" scoped="" ref="0x40512428"/>
        <function-ref name="toggle" scoped="" ref="0x40512508"/>
        <function-ref name="isOutput" scoped="" ref="0x405125e8"/>
        <function-ref name="get" scoped="" ref="0x405126c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405127a8"/>
        <function-ref name="set" scoped="" ref="0x40512888"/>
        <function-ref name="clr" scoped="" ref="0x40512968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4051de48" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4051de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051c050"/>
        <function-ref name="isInput" scoped="" ref="0x4051c130"/>
        <function-ref name="toggle" scoped="" ref="0x4051c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4051c2f0"/>
        <function-ref name="get" scoped="" ref="0x4051c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051c4b0"/>
        <function-ref name="set" scoped="" ref="0x4051c590"/>
        <function-ref name="clr" scoped="" ref="0x4051c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413c2418" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413c2418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413c25f0"/>
        <function-ref name="isInput" scoped="" ref="0x413c26d0"/>
        <function-ref name="toggle" scoped="" ref="0x413c27b0"/>
        <function-ref name="isOutput" scoped="" ref="0x413c2890"/>
        <function-ref name="get" scoped="" ref="0x413c2970"/>
        <function-ref name="makeOutput" scoped="" ref="0x413c2a50"/>
        <function-ref name="set" scoped="" ref="0x413c2b30"/>
        <function-ref name="clr" scoped="" ref="0x413c2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413c1de0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413c1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413c0010"/>
        <function-ref name="isInput" scoped="" ref="0x413c00f0"/>
        <function-ref name="toggle" scoped="" ref="0x413c01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413c02b0"/>
        <function-ref name="get" scoped="" ref="0x413c0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x413c0470"/>
        <function-ref name="set" scoped="" ref="0x413c0550"/>
        <function-ref name="clr" scoped="" ref="0x413c0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413bf7f8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413bf7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bf9d0"/>
        <function-ref name="isInput" scoped="" ref="0x413bfab0"/>
        <function-ref name="toggle" scoped="" ref="0x413bfb90"/>
        <function-ref name="isOutput" scoped="" ref="0x413bfc70"/>
        <function-ref name="get" scoped="" ref="0x413bfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bfe30"/>
        <function-ref name="set" scoped="" ref="0x413bff10"/>
        <function-ref name="clr" scoped="" ref="0x413be010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413bd228" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413bd228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bd400"/>
        <function-ref name="isInput" scoped="" ref="0x413bd4e0"/>
        <function-ref name="toggle" scoped="" ref="0x413bd5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x413bd6a0"/>
        <function-ref name="get" scoped="" ref="0x413bd780"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bd860"/>
        <function-ref name="set" scoped="" ref="0x413bd940"/>
        <function-ref name="clr" scoped="" ref="0x413bda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413bcc08" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413bcc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bcde0"/>
        <function-ref name="isInput" scoped="" ref="0x413bcec0"/>
        <function-ref name="toggle" scoped="" ref="0x413bb010"/>
        <function-ref name="isOutput" scoped="" ref="0x413bb0f0"/>
        <function-ref name="get" scoped="" ref="0x413bb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bb2b0"/>
        <function-ref name="set" scoped="" ref="0x413bb390"/>
        <function-ref name="clr" scoped="" ref="0x413bb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ba6c0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ba6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ba898"/>
        <function-ref name="isInput" scoped="" ref="0x413ba978"/>
        <function-ref name="toggle" scoped="" ref="0x413baa58"/>
        <function-ref name="isOutput" scoped="" ref="0x413bab38"/>
        <function-ref name="get" scoped="" ref="0x413bac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bacf8"/>
        <function-ref name="set" scoped="" ref="0x413badd8"/>
        <function-ref name="clr" scoped="" ref="0x413baeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413b80b0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413b80b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b8288"/>
        <function-ref name="isInput" scoped="" ref="0x413b8368"/>
        <function-ref name="toggle" scoped="" ref="0x413b8448"/>
        <function-ref name="isOutput" scoped="" ref="0x413b8528"/>
        <function-ref name="get" scoped="" ref="0x413b8608"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b86e8"/>
        <function-ref name="set" scoped="" ref="0x413b87c8"/>
        <function-ref name="clr" scoped="" ref="0x413b88a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413b7a88" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413b7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b7c60"/>
        <function-ref name="isInput" scoped="" ref="0x413b7d40"/>
        <function-ref name="toggle" scoped="" ref="0x413b7e20"/>
        <function-ref name="isOutput" scoped="" ref="0x413b7f00"/>
        <function-ref name="get" scoped="" ref="0x413b6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b60f0"/>
        <function-ref name="set" scoped="" ref="0x413b61d0"/>
        <function-ref name="clr" scoped="" ref="0x413b62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405246b0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405246b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40524888"/>
        <function-ref name="isInput" scoped="" ref="0x40524968"/>
        <function-ref name="toggle" scoped="" ref="0x40524a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40524b28"/>
        <function-ref name="get" scoped="" ref="0x40524c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524ce8"/>
        <function-ref name="set" scoped="" ref="0x40524dc8"/>
        <function-ref name="clr" scoped="" ref="0x40524ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40522330" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40522330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522508"/>
        <function-ref name="isInput" scoped="" ref="0x405225e8"/>
        <function-ref name="toggle" scoped="" ref="0x405226c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405227a8"/>
        <function-ref name="get" scoped="" ref="0x40522888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522968"/>
        <function-ref name="set" scoped="" ref="0x40522a48"/>
        <function-ref name="clr" scoped="" ref="0x40522b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405193d8" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405193d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405195b0"/>
        <function-ref name="isInput" scoped="" ref="0x40519690"/>
        <function-ref name="toggle" scoped="" ref="0x40519770"/>
        <function-ref name="isOutput" scoped="" ref="0x40519850"/>
        <function-ref name="get" scoped="" ref="0x40519930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40519a10"/>
        <function-ref name="set" scoped="" ref="0x40519af0"/>
        <function-ref name="clr" scoped="" ref="0x40519bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40523030" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40523030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40523208"/>
        <function-ref name="isInput" scoped="" ref="0x405232e8"/>
        <function-ref name="toggle" scoped="" ref="0x405233c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405234a8"/>
        <function-ref name="get" scoped="" ref="0x40523588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523668"/>
        <function-ref name="set" scoped="" ref="0x40523748"/>
        <function-ref name="clr" scoped="" ref="0x40523828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40522c88" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40522c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522e60"/>
        <function-ref name="isInput" scoped="" ref="0x40521010"/>
        <function-ref name="toggle" scoped="" ref="0x405210f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405211d0"/>
        <function-ref name="get" scoped="" ref="0x405212b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40521390"/>
        <function-ref name="set" scoped="" ref="0x40521470"/>
        <function-ref name="clr" scoped="" ref="0x40521550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40519d30" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40519d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40519f08"/>
        <function-ref name="isInput" scoped="" ref="0x40524010"/>
        <function-ref name="toggle" scoped="" ref="0x405240f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405241d0"/>
        <function-ref name="get" scoped="" ref="0x405242b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524390"/>
        <function-ref name="set" scoped="" ref="0x40524470"/>
        <function-ref name="clr" scoped="" ref="0x40524550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40523988" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40523988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40523b60"/>
        <function-ref name="isInput" scoped="" ref="0x40523c40"/>
        <function-ref name="toggle" scoped="" ref="0x40523d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40523e00"/>
        <function-ref name="get" scoped="" ref="0x40523ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522010"/>
        <function-ref name="set" scoped="" ref="0x405220f0"/>
        <function-ref name="clr" scoped="" ref="0x405221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405216b0" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405216b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40521888"/>
        <function-ref name="isInput" scoped="" ref="0x40521968"/>
        <function-ref name="toggle" scoped="" ref="0x40521a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40521b28"/>
        <function-ref name="get" scoped="" ref="0x40521c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40521ce8"/>
        <function-ref name="set" scoped="" ref="0x40521dc8"/>
        <function-ref name="clr" scoped="" ref="0x40521ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413d16c0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413d16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413d1898"/>
        <function-ref name="isInput" scoped="" ref="0x413d1978"/>
        <function-ref name="toggle" scoped="" ref="0x413d1a58"/>
        <function-ref name="isOutput" scoped="" ref="0x413d1b38"/>
        <function-ref name="get" scoped="" ref="0x413d1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x413d1cf8"/>
        <function-ref name="set" scoped="" ref="0x413d1dd8"/>
        <function-ref name="clr" scoped="" ref="0x413d1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414170b0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414170b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41417288"/>
        <function-ref name="isInput" scoped="" ref="0x41417368"/>
        <function-ref name="toggle" scoped="" ref="0x41417448"/>
        <function-ref name="isOutput" scoped="" ref="0x41417528"/>
        <function-ref name="get" scoped="" ref="0x41417608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414176e8"/>
        <function-ref name="set" scoped="" ref="0x414177c8"/>
        <function-ref name="clr" scoped="" ref="0x414178a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41416a88" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41416a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41416c60"/>
        <function-ref name="isInput" scoped="" ref="0x41416d40"/>
        <function-ref name="toggle" scoped="" ref="0x41416e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41416f00"/>
        <function-ref name="get" scoped="" ref="0x41415010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414150f0"/>
        <function-ref name="set" scoped="" ref="0x414151d0"/>
        <function-ref name="clr" scoped="" ref="0x414152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41414538" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41414538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41414710"/>
        <function-ref name="isInput" scoped="" ref="0x414147f0"/>
        <function-ref name="toggle" scoped="" ref="0x414148d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414149b0"/>
        <function-ref name="get" scoped="" ref="0x41414a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41414b70"/>
        <function-ref name="set" scoped="" ref="0x41414c50"/>
        <function-ref name="clr" scoped="" ref="0x41414d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41412010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41412010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414121e8"/>
        <function-ref name="isInput" scoped="" ref="0x414122c8"/>
        <function-ref name="toggle" scoped="" ref="0x414123a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41412488"/>
        <function-ref name="get" scoped="" ref="0x41412568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41412648"/>
        <function-ref name="set" scoped="" ref="0x41412728"/>
        <function-ref name="clr" scoped="" ref="0x41412808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414119e8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414119e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41411bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41411ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41411d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41411e60"/>
        <function-ref name="get" scoped="" ref="0x41410010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414100f0"/>
        <function-ref name="set" scoped="" ref="0x414101d0"/>
        <function-ref name="clr" scoped="" ref="0x414102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4140f538" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4140f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4140f710"/>
        <function-ref name="isInput" scoped="" ref="0x4140f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4140f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4140f9b0"/>
        <function-ref name="get" scoped="" ref="0x4140fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4140fb70"/>
        <function-ref name="set" scoped="" ref="0x4140fc50"/>
        <function-ref name="clr" scoped="" ref="0x4140fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4140d010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4140d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4140d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4140d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4140d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4140d488"/>
        <function-ref name="get" scoped="" ref="0x4140d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4140d648"/>
        <function-ref name="set" scoped="" ref="0x4140d728"/>
        <function-ref name="clr" scoped="" ref="0x4140d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4052bf28" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4052bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052a110"/>
        <function-ref name="isInput" scoped="" ref="0x4052a1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4052a2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052a3b0"/>
        <function-ref name="get" scoped="" ref="0x4052a490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052a570"/>
        <function-ref name="set" scoped="" ref="0x4052a650"/>
        <function-ref name="clr" scoped="" ref="0x4052a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40529ba8" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40529ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529d80"/>
        <function-ref name="isInput" scoped="" ref="0x40529e60"/>
        <function-ref name="toggle" scoped="" ref="0x40528010"/>
        <function-ref name="isOutput" scoped="" ref="0x405280f0"/>
        <function-ref name="get" scoped="" ref="0x405281d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405282b0"/>
        <function-ref name="set" scoped="" ref="0x40528390"/>
        <function-ref name="clr" scoped="" ref="0x40528470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4051ec28" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4051ec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051ee00"/>
        <function-ref name="isInput" scoped="" ref="0x4051eee0"/>
        <function-ref name="toggle" scoped="" ref="0x4052b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4052b0f0"/>
        <function-ref name="get" scoped="" ref="0x4052b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052b2b0"/>
        <function-ref name="set" scoped="" ref="0x4052b390"/>
        <function-ref name="clr" scoped="" ref="0x4052b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4052a890" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4052a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052aa68"/>
        <function-ref name="isInput" scoped="" ref="0x4052ab48"/>
        <function-ref name="toggle" scoped="" ref="0x4052ac28"/>
        <function-ref name="isOutput" scoped="" ref="0x4052ad08"/>
        <function-ref name="get" scoped="" ref="0x4052ade8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052aec8"/>
        <function-ref name="set" scoped="" ref="0x40529010"/>
        <function-ref name="clr" scoped="" ref="0x405290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405285d0" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405285d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405287a8"/>
        <function-ref name="isInput" scoped="" ref="0x40528888"/>
        <function-ref name="toggle" scoped="" ref="0x40528968"/>
        <function-ref name="isOutput" scoped="" ref="0x40528a48"/>
        <function-ref name="get" scoped="" ref="0x40528b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40528c08"/>
        <function-ref name="set" scoped="" ref="0x40528ce8"/>
        <function-ref name="clr" scoped="" ref="0x40528dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4052b5d0" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4052b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b7a8"/>
        <function-ref name="isInput" scoped="" ref="0x4052b888"/>
        <function-ref name="toggle" scoped="" ref="0x4052b968"/>
        <function-ref name="isOutput" scoped="" ref="0x4052ba48"/>
        <function-ref name="get" scoped="" ref="0x4052bb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052bc08"/>
        <function-ref name="set" scoped="" ref="0x4052bce8"/>
        <function-ref name="clr" scoped="" ref="0x4052bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40529250" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40529250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529428"/>
        <function-ref name="isInput" scoped="" ref="0x40529508"/>
        <function-ref name="toggle" scoped="" ref="0x405295e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405296c8"/>
        <function-ref name="get" scoped="" ref="0x405297a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40529888"/>
        <function-ref name="set" scoped="" ref="0x40529968"/>
        <function-ref name="clr" scoped="" ref="0x40529a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40528f28" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40528f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40526110"/>
        <function-ref name="isInput" scoped="" ref="0x405261f0"/>
        <function-ref name="toggle" scoped="" ref="0x405262d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405263b0"/>
        <function-ref name="get" scoped="" ref="0x40526490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40526570"/>
        <function-ref name="set" scoped="" ref="0x40526650"/>
        <function-ref name="clr" scoped="" ref="0x40526730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41429418" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41429418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414295f0"/>
        <function-ref name="isInput" scoped="" ref="0x414296d0"/>
        <function-ref name="toggle" scoped="" ref="0x414297b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41429890"/>
        <function-ref name="get" scoped="" ref="0x41429970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41429a50"/>
        <function-ref name="set" scoped="" ref="0x41429b30"/>
        <function-ref name="clr" scoped="" ref="0x41429c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41428de0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41428de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41427010"/>
        <function-ref name="isInput" scoped="" ref="0x414270f0"/>
        <function-ref name="toggle" scoped="" ref="0x414271d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414272b0"/>
        <function-ref name="get" scoped="" ref="0x41427390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41427470"/>
        <function-ref name="set" scoped="" ref="0x41427550"/>
        <function-ref name="clr" scoped="" ref="0x41427630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414267f8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414267f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414269d0"/>
        <function-ref name="isInput" scoped="" ref="0x41426ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41426b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41426c70"/>
        <function-ref name="get" scoped="" ref="0x41426d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41426e30"/>
        <function-ref name="set" scoped="" ref="0x41426f10"/>
        <function-ref name="clr" scoped="" ref="0x41425010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41424228" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41424228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41424400"/>
        <function-ref name="isInput" scoped="" ref="0x414244e0"/>
        <function-ref name="toggle" scoped="" ref="0x414245c0"/>
        <function-ref name="isOutput" scoped="" ref="0x414246a0"/>
        <function-ref name="get" scoped="" ref="0x41424780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41424860"/>
        <function-ref name="set" scoped="" ref="0x41424940"/>
        <function-ref name="clr" scoped="" ref="0x41424a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41423c08" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41423c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41423de0"/>
        <function-ref name="isInput" scoped="" ref="0x41423ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41422010"/>
        <function-ref name="isOutput" scoped="" ref="0x414220f0"/>
        <function-ref name="get" scoped="" ref="0x414221d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414222b0"/>
        <function-ref name="set" scoped="" ref="0x41422390"/>
        <function-ref name="clr" scoped="" ref="0x41422470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414216c0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414216c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41421898"/>
        <function-ref name="isInput" scoped="" ref="0x41421978"/>
        <function-ref name="toggle" scoped="" ref="0x41421a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41421b38"/>
        <function-ref name="get" scoped="" ref="0x41421c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41421cf8"/>
        <function-ref name="set" scoped="" ref="0x41421dd8"/>
        <function-ref name="clr" scoped="" ref="0x41421eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4141f0b0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4141f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4141f288"/>
        <function-ref name="isInput" scoped="" ref="0x4141f368"/>
        <function-ref name="toggle" scoped="" ref="0x4141f448"/>
        <function-ref name="isOutput" scoped="" ref="0x4141f528"/>
        <function-ref name="get" scoped="" ref="0x4141f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4141f6e8"/>
        <function-ref name="set" scoped="" ref="0x4141f7c8"/>
        <function-ref name="clr" scoped="" ref="0x4141f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4141ea88" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4141ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4141ec60"/>
        <function-ref name="isInput" scoped="" ref="0x4141ed40"/>
        <function-ref name="toggle" scoped="" ref="0x4141ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x4141ef00"/>
        <function-ref name="get" scoped="" ref="0x4141c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4141c0f0"/>
        <function-ref name="set" scoped="" ref="0x4141c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4141c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40531e60" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40531e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40530050"/>
        <function-ref name="isInput" scoped="" ref="0x40530130"/>
        <function-ref name="toggle" scoped="" ref="0x40530210"/>
        <function-ref name="isOutput" scoped="" ref="0x405302f0"/>
        <function-ref name="get" scoped="" ref="0x405303d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405304b0"/>
        <function-ref name="set" scoped="" ref="0x40530590"/>
        <function-ref name="clr" scoped="" ref="0x40530670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4053e458" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4053e458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053e630"/>
        <function-ref name="isInput" scoped="" ref="0x4053e710"/>
        <function-ref name="toggle" scoped="" ref="0x4053e7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4053e8d0"/>
        <function-ref name="get" scoped="" ref="0x4053e9b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053ea90"/>
        <function-ref name="set" scoped="" ref="0x4053eb70"/>
        <function-ref name="clr" scoped="" ref="0x4053ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4053ca30" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4053ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053cc08"/>
        <function-ref name="isInput" scoped="" ref="0x4053cce8"/>
        <function-ref name="toggle" scoped="" ref="0x4053cdc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4053cea8"/>
        <function-ref name="get" scoped="" ref="0x4053b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053b0f0"/>
        <function-ref name="set" scoped="" ref="0x4053b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4053b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40546090" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40546090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40546268"/>
        <function-ref name="isInput" scoped="" ref="0x40546348"/>
        <function-ref name="toggle" scoped="" ref="0x40546428"/>
        <function-ref name="isOutput" scoped="" ref="0x40546508"/>
        <function-ref name="get" scoped="" ref="0x405465e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405466c8"/>
        <function-ref name="set" scoped="" ref="0x405467a8"/>
        <function-ref name="clr" scoped="" ref="0x40546888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405446c0" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405446c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40544898"/>
        <function-ref name="isInput" scoped="" ref="0x40544978"/>
        <function-ref name="toggle" scoped="" ref="0x40544a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40544b38"/>
        <function-ref name="get" scoped="" ref="0x40544c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40544cf8"/>
        <function-ref name="set" scoped="" ref="0x40544dd8"/>
        <function-ref name="clr" scoped="" ref="0x40544eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40541cb8" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40541cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40541e90"/>
        <function-ref name="isInput" scoped="" ref="0x4054e010"/>
        <function-ref name="toggle" scoped="" ref="0x4054e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4054e1d0"/>
        <function-ref name="get" scoped="" ref="0x4054e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054e390"/>
        <function-ref name="set" scoped="" ref="0x4054e470"/>
        <function-ref name="clr" scoped="" ref="0x4054e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4054c3b0" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4054c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054c588"/>
        <function-ref name="isInput" scoped="" ref="0x4054c668"/>
        <function-ref name="toggle" scoped="" ref="0x4054c748"/>
        <function-ref name="isOutput" scoped="" ref="0x4054c828"/>
        <function-ref name="get" scoped="" ref="0x4054c908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054c9e8"/>
        <function-ref name="set" scoped="" ref="0x4054cac8"/>
        <function-ref name="clr" scoped="" ref="0x4054cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4054a978" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4054a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054ab50"/>
        <function-ref name="isInput" scoped="" ref="0x4054ac30"/>
        <function-ref name="toggle" scoped="" ref="0x4054ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x4054adf0"/>
        <function-ref name="get" scoped="" ref="0x4054aed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40549010"/>
        <function-ref name="set" scoped="" ref="0x405490f0"/>
        <function-ref name="clr" scoped="" ref="0x405491d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40555ee0" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40555ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405540e0"/>
        <function-ref name="isInput" scoped="" ref="0x405541c0"/>
        <function-ref name="toggle" scoped="" ref="0x405542a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40554380"/>
        <function-ref name="get" scoped="" ref="0x40554460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40554540"/>
        <function-ref name="set" scoped="" ref="0x40554620"/>
        <function-ref name="clr" scoped="" ref="0x40554700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405523e8" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405523e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405525c0"/>
        <function-ref name="isInput" scoped="" ref="0x405526a0"/>
        <function-ref name="toggle" scoped="" ref="0x40552780"/>
        <function-ref name="isOutput" scoped="" ref="0x40552860"/>
        <function-ref name="get" scoped="" ref="0x40552940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40552a20"/>
        <function-ref name="set" scoped="" ref="0x40552b00"/>
        <function-ref name="clr" scoped="" ref="0x40552be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4054f8f0" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4054f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054fac8"/>
        <function-ref name="isInput" scoped="" ref="0x4054fba8"/>
        <function-ref name="toggle" scoped="" ref="0x4054fc88"/>
        <function-ref name="isOutput" scoped="" ref="0x4054fd68"/>
        <function-ref name="get" scoped="" ref="0x4054fe48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054ff28"/>
        <function-ref name="set" scoped="" ref="0x4055c018"/>
        <function-ref name="clr" scoped="" ref="0x4055c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4055bdd8" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4055bdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055a010"/>
        <function-ref name="isInput" scoped="" ref="0x4055a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4055a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4055a2b0"/>
        <function-ref name="get" scoped="" ref="0x4055a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055a470"/>
        <function-ref name="set" scoped="" ref="0x4055a550"/>
        <function-ref name="clr" scoped="" ref="0x4055a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405583b0" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405583b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40558588"/>
        <function-ref name="isInput" scoped="" ref="0x40558668"/>
        <function-ref name="toggle" scoped="" ref="0x40558748"/>
        <function-ref name="isOutput" scoped="" ref="0x40558828"/>
        <function-ref name="get" scoped="" ref="0x40558908"/>
        <function-ref name="makeOutput" scoped="" ref="0x405589e8"/>
        <function-ref name="set" scoped="" ref="0x40558ac8"/>
        <function-ref name="clr" scoped="" ref="0x40558ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40578858" loc="27:/opt/tinyos/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40578858"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4035ece0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4035ece0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40578a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40578c08" loc="28:/opt/tinyos/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40578c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40578de0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40578ec0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40577010"/>
        <function-ref name="actualMicro" scoped="" ref="0x405770f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x405771d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4058f010" loc="60:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4058f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4058f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x405901c8" loc="57:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405901c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405903a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40590b28" loc="59:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40590b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40590d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40590560" loc="58:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40590560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40590738"/>
        <function-ref name="taskLoop" scoped="" ref="0x40590818"/>
        <function-ref name="runNextTask" scoped="" ref="0x405908f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4036cbc0" loc="48:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4036cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4036cd98"/>
        <function-ref name="runTask" scoped="" ref="0x4036ce78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403663e8" loc="47:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403663e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403665c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403666a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40366780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403d41f8" loc="56:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403d41f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403d43d0"/>
        <function-ref name="runTask" scoped="" ref="0x403d44b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d4e50" loc="57:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403db050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403d6978" loc="55:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403d6978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d6b50"/>
        <function-ref name="taskLoop" scoped="" ref="0x403d6c30"/>
        <function-ref name="runNextTask" scoped="" ref="0x403d6d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e8298" loc="54:/opt/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e8298"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403647e0" loc="50:/opt/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403647e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403649b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403e94c8" loc="51:/opt/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403e94c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403e96a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40494d48" loc="46:/opt/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40494d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40494f20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4058a018"/>
        <function-ref name="led1On" scoped="" ref="0x4058a0f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4058a1d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4058a2b8"/>
        <function-ref name="get" scoped="" ref="0x4058a398"/>
        <function-ref name="led1Off" scoped="" ref="0x4058a478"/>
        <function-ref name="led2Off" scoped="" ref="0x4058a7f8"/>
        <function-ref name="set" scoped="" ref="0x4058a558"/>
        <function-ref name="led0On" scoped="" ref="0x4058a638"/>
        <function-ref name="led2On" scoped="" ref="0x4058a718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x405940b0" loc="50:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405940b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40594288"/>
        <function-ref name="isInput" scoped="" ref="0x40594368"/>
        <function-ref name="toggle" scoped="" ref="0x40594448"/>
        <function-ref name="isOutput" scoped="" ref="0x40594528"/>
        <function-ref name="get" scoped="" ref="0x40594608"/>
        <function-ref name="makeOutput" scoped="" ref="0x405946e8"/>
        <function-ref name="set" scoped="" ref="0x405947c8"/>
        <function-ref name="clr" scoped="" ref="0x405948a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40595090" loc="46:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40595090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40595268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40594a98" loc="51:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40594a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40594c70"/>
        <function-ref name="isInput" scoped="" ref="0x40594d50"/>
        <function-ref name="toggle" scoped="" ref="0x40594e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40594f10"/>
        <function-ref name="get" scoped="" ref="0x40593010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405930f0"/>
        <function-ref name="set" scoped="" ref="0x405931d0"/>
        <function-ref name="clr" scoped="" ref="0x405932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x405953d8" loc="47:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405953d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405955b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40595690"/>
        <function-ref name="led1On" scoped="" ref="0x40595770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40595850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40595930"/>
        <function-ref name="get" scoped="" ref="0x40595a10"/>
        <function-ref name="led1Off" scoped="" ref="0x40595af0"/>
        <function-ref name="led2Off" scoped="" ref="0x40595e70"/>
        <function-ref name="set" scoped="" ref="0x40595bd0"/>
        <function-ref name="led0On" scoped="" ref="0x40595cb0"/>
        <function-ref name="led2On" scoped="" ref="0x40595d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x405934a0" loc="52:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405934a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40593678"/>
        <function-ref name="isInput" scoped="" ref="0x40593758"/>
        <function-ref name="toggle" scoped="" ref="0x40593838"/>
        <function-ref name="isOutput" scoped="" ref="0x40593918"/>
        <function-ref name="get" scoped="" ref="0x405939f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40593ad8"/>
        <function-ref name="set" scoped="" ref="0x40593bb8"/>
        <function-ref name="clr" scoped="" ref="0x40593c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40597e40" loc="44:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40597e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a0050"/>
        <function-ref name="isInput" scoped="" ref="0x405a0130"/>
        <function-ref name="toggle" scoped="" ref="0x405a0210"/>
        <function-ref name="isOutput" scoped="" ref="0x405a02f0"/>
        <function-ref name="get" scoped="" ref="0x405a03d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a04b0"/>
        <function-ref name="set" scoped="" ref="0x405a0590"/>
        <function-ref name="clr" scoped="" ref="0x405a0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x405a0880" loc="45:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405a0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a0a58"/>
        <function-ref name="isInput" scoped="" ref="0x405a0b38"/>
        <function-ref name="toggle" scoped="" ref="0x405a0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x405a0cf8"/>
        <function-ref name="get" scoped="" ref="0x405a0dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a0eb8"/>
        <function-ref name="set" scoped="" ref="0x4059f010"/>
        <function-ref name="clr" scoped="" ref="0x4059f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x4059fc88" loc="47:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4059fc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4059fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x4059f300" loc="46:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4059f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059f4d8"/>
        <function-ref name="isInput" scoped="" ref="0x4059f5b8"/>
        <function-ref name="toggle" scoped="" ref="0x4059f698"/>
        <function-ref name="isOutput" scoped="" ref="0x4059f778"/>
        <function-ref name="get" scoped="" ref="0x4059f858"/>
        <function-ref name="makeOutput" scoped="" ref="0x4059f938"/>
        <function-ref name="set" scoped="" ref="0x4059fa18"/>
        <function-ref name="clr" scoped="" ref="0x4059faf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405af660" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SenseAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405af660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b1170"/>
        <function-ref name="fired" scoped="" ref="0x405b83f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405b8b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x405b88a8"/>
        <function-ref name="getdt" scoped="" ref="0x406b1620"/>
        <function-ref name="gett0" scoped="" ref="0x406b13c8"/>
        <function-ref name="isRunning" scoped="" ref="0x405b8650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405afc88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405b8e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x405aff08"/>
        <function-ref name="stop" scoped="" ref="0x405b81a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405abd28" loc="49:/opt/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405abd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405b68a8"/>
        <function-ref name="fired" scoped="" ref="0x405b7ac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405b6268"/>
        <function-ref name="isOneShot" scoped="" ref="0x405b6010"/>
        <function-ref name="getdt" scoped="" ref="0x405b6d58"/>
        <function-ref name="gett0" scoped="" ref="0x405b6b00"/>
        <function-ref name="isRunning" scoped="" ref="0x405b7d20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405b7370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405b6588"/>
        <function-ref name="startOneShot" scoped="" ref="0x405b75f0"/>
        <function-ref name="stop" scoped="" ref="0x405b7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405b5dd0" loc="46:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405b5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405c0900"/>
        <function-ref name="fired" scoped="" ref="0x405b1ba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405c02c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x405c0068"/>
        <function-ref name="getdt" scoped="" ref="0x405c0db0"/>
        <function-ref name="gett0" scoped="" ref="0x405c0b58"/>
        <function-ref name="isRunning" scoped="" ref="0x405b1df8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405b1448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405c05e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x405b16c8"/>
        <function-ref name="stop" scoped="" ref="0x405b1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x405bfdc8" loc="47:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x405bfdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405be428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405b5620" loc="45:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405b5620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405b57f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x405d08c8" loc="29:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x405d08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405c2048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405c2538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405c22c0"/>
        <function-ref name="overflow" scoped="" ref="0x405c27b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405bd488" loc="27:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405bd488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x405c5cb8" loc="28:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x405c5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405c4190"/>
        <function-ref name="fired" scoped="" ref="0x405b9938"/>
        <function-ref name="startAt" scoped="" ref="0x405b9e28"/>
        <function-ref name="isRunning" scoped="" ref="0x405b9bb0"/>
        <function-ref name="getAlarm" scoped="" ref="0x405c4408"/>
        <function-ref name="start" scoped="" ref="0x405b9420"/>
        <function-ref name="stop" scoped="" ref="0x405b96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40650bc8" loc="26:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40650bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4064e0a8"/>
        <function-ref name="fired" scoped="" ref="0x4064f858"/>
        <function-ref name="startAt" scoped="" ref="0x4064fd48"/>
        <function-ref name="isRunning" scoped="" ref="0x4064fad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4064e320"/>
        <function-ref name="start" scoped="" ref="0x4064f340"/>
        <function-ref name="stop" scoped="" ref="0x4064f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40650790" loc="25:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40650790"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4035eae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4035eae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40650968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4064e650" loc="27:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4064e650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4064eda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4065e2c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4065e048"/>
        <function-ref name="overflow" scoped="" ref="0x4065e538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41489090" loc="31:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41489090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x41489268"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41489348"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41489428"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41489508"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x414895e8"/>
        <function-ref name="setControl" scoped="" ref="0x414896c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4148f270" loc="26:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4148f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4148e728"/>
        <function-ref name="fired" scoped="" ref="0x4148fed8"/>
        <function-ref name="startAt" scoped="" ref="0x4148e3e8"/>
        <function-ref name="isRunning" scoped="" ref="0x4148e170"/>
        <function-ref name="getAlarm" scoped="" ref="0x4148e9a0"/>
        <function-ref name="start" scoped="" ref="0x4148f9c0"/>
        <function-ref name="stop" scoped="" ref="0x4148fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41491e10" loc="25:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41491e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4148f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4148ecd0" loc="27:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4148ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4148d438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4148d928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4148d6b0"/>
        <function-ref name="overflow" scoped="" ref="0x4148dba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x414d62e8" loc="33:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x414d62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x414d64c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x414d65a0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x414d6680"/>
        <function-ref name="countBusy" scoped="" ref="0x414d6760"/>
        <function-ref name="getAssr" scoped="" ref="0x414d6840"/>
        <function-ref name="setAssr" scoped="" ref="0x414d6920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x414898b8" loc="32:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x414898b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41488e20"/>
        <function-ref name="fired" scoped="" ref="0x41488440"/>
        <function-ref name="get" scoped="" ref="0x41489f00"/>
        <function-ref name="reset" scoped="" ref="0x414886b8"/>
        <function-ref name="isOn" scoped="" ref="0x414d60b8"/>
        <function-ref name="set" scoped="" ref="0x414881a0"/>
        <function-ref name="start" scoped="" ref="0x41488930"/>
        <function-ref name="stop" scoped="" ref="0x41488ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4148de90" loc="30:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4148de90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4148a908"/>
        <function-ref name="test" scoped="" ref="0x4148a418"/>
        <function-ref name="get" scoped="" ref="0x4148b4f8"/>
        <function-ref name="setScale" scoped="" ref="0x4148ab80"/>
        <function-ref name="getScale" scoped="" ref="0x4148ae20"/>
        <function-ref name="reset" scoped="" ref="0x4148bc88"/>
        <function-ref name="overflow" scoped="" ref="0x4148ba10"/>
        <function-ref name="isOn" scoped="" ref="0x4148a690"/>
        <function-ref name="set" scoped="" ref="0x4148b770"/>
        <function-ref name="start" scoped="" ref="0x4148bf00"/>
        <function-ref name="stop" scoped="" ref="0x4148a1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40614af0" loc="48:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40614af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40614cc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40614da8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40614e88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40613010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406130f0"/>
        <function-ref name="setControl" scoped="" ref="0x406131d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40620030" loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40620030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40620208"/>
        <function-ref name="compareBusy" scoped="" ref="0x406202e8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406203c8"/>
        <function-ref name="countBusy" scoped="" ref="0x406204a8"/>
        <function-ref name="getAssr" scoped="" ref="0x40620588"/>
        <function-ref name="setAssr" scoped="" ref="0x40620668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406134f8" loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406134f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40611a48"/>
        <function-ref name="fired" scoped="" ref="0x40611068"/>
        <function-ref name="get" scoped="" ref="0x40613b40"/>
        <function-ref name="reset" scoped="" ref="0x406112e0"/>
        <function-ref name="isOn" scoped="" ref="0x40611cc0"/>
        <function-ref name="set" scoped="" ref="0x40613db8"/>
        <function-ref name="start" scoped="" ref="0x40611558"/>
        <function-ref name="stop" scoped="" ref="0x406117d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406187b8" loc="47:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406187b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40614288"/>
        <function-ref name="test" scoped="" ref="0x40615d08"/>
        <function-ref name="get" scoped="" ref="0x40618e00"/>
        <function-ref name="setScale" scoped="" ref="0x40614500"/>
        <function-ref name="getScale" scoped="" ref="0x406147a0"/>
        <function-ref name="reset" scoped="" ref="0x406155a0"/>
        <function-ref name="overflow" scoped="" ref="0x40615328"/>
        <function-ref name="isOn" scoped="" ref="0x40614010"/>
        <function-ref name="set" scoped="" ref="0x40615088"/>
        <function-ref name="start" scoped="" ref="0x40615818"/>
        <function-ref name="stop" scoped="" ref="0x40615a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4061a600" loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4061a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4061a7d8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4061a8b8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4061a998"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4061aa78"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4061ab58"/>
        <function-ref name="setControl" scoped="" ref="0x4061ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40629aa8" loc="52:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40629aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40629c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40629f08" loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40629f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406280f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x406281d0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406282b0"/>
        <function-ref name="countBusy" scoped="" ref="0x40628390"/>
        <function-ref name="getAssr" scoped="" ref="0x40628470"/>
        <function-ref name="setAssr" scoped="" ref="0x40628550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40619010" loc="51:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40619010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40629578"/>
        <function-ref name="fired" scoped="" ref="0x40619b70"/>
        <function-ref name="get" scoped="" ref="0x40619658"/>
        <function-ref name="reset" scoped="" ref="0x40619de8"/>
        <function-ref name="isOn" scoped="" ref="0x406297f0"/>
        <function-ref name="set" scoped="" ref="0x406198d0"/>
        <function-ref name="start" scoped="" ref="0x40629088"/>
        <function-ref name="stop" scoped="" ref="0x40629300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4061d308" loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4061d308"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4061cd68"/>
        <function-ref name="test" scoped="" ref="0x4061c878"/>
        <function-ref name="get" scoped="" ref="0x4061d950"/>
        <function-ref name="setScale" scoped="" ref="0x4061a010"/>
        <function-ref name="getScale" scoped="" ref="0x4061a2b0"/>
        <function-ref name="reset" scoped="" ref="0x4061c110"/>
        <function-ref name="overflow" scoped="" ref="0x4061de68"/>
        <function-ref name="isOn" scoped="" ref="0x4061caf0"/>
        <function-ref name="set" scoped="" ref="0x4061dbc8"/>
        <function-ref name="start" scoped="" ref="0x4061c388"/>
        <function-ref name="stop" scoped="" ref="0x4061c600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4067a9a8" loc="74:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4067a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4067ab80"/>
        <function-ref name="runTask" scoped="" ref="0x4067ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40669010" loc="49:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40669010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4067a4e0"/>
        <function-ref name="fired" scoped="" ref="0x40669c78"/>
        <function-ref name="startAt" scoped="" ref="0x4067a1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40669ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4067a758"/>
        <function-ref name="start" scoped="" ref="0x40669760"/>
        <function-ref name="stop" scoped="" ref="0x40669a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405bac60" loc="48:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405bac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4066b790"/>
        <function-ref name="fired" scoped="" ref="0x4065ca20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4066b150"/>
        <function-ref name="isOneShot" scoped="" ref="0x4065ced0"/>
        <function-ref name="getdt" scoped="" ref="0x4066bc40"/>
        <function-ref name="gett0" scoped="" ref="0x4066b9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x4065cc78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4065c2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4066b470"/>
        <function-ref name="startOneShot" scoped="" ref="0x4065c548"/>
        <function-ref name="stop" scoped="" ref="0x4065c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406a8050" loc="71:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406a8050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406a8228"/>
        <function-ref name="runTask" scoped="" ref="0x406a8308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40699e30" loc="49:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40699e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40696920"/>
        <function-ref name="fired" scoped="" ref="0x40697bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406962e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40696088"/>
        <function-ref name="getdt" scoped="" ref="0x40696dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40696b78"/>
        <function-ref name="isRunning" scoped="" ref="0x40697e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40697468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40696600"/>
        <function-ref name="startOneShot" scoped="" ref="0x406976e8"/>
        <function-ref name="stop" scoped="" ref="0x40697968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4069ba60" loc="48:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4069ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40699670"/>
        <function-ref name="fired" scoped="" ref="0x4069a840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40699010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4069ad10"/>
        <function-ref name="getdt" scoped="" ref="0x40699b40"/>
        <function-ref name="gett0" scoped="" ref="0x406998d8"/>
        <function-ref name="isRunning" scoped="" ref="0x4069aaa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4069a0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40699340"/>
        <function-ref name="startOneShot" scoped="" ref="0x4069a348"/>
        <function-ref name="stop" scoped="" ref="0x4069a5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406a6460" loc="48:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406a6460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406a6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406a6df8" loc="49:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406a6df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406a5570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406a5a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406a57e8"/>
        <function-ref name="overflow" scoped="" ref="0x406a5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="X_Axis" ref="0x406b9d10" loc="2:SensorAccC.nc">
      <component-ref qname="SenseAppC.SensorAcc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x406b9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406af350"/>
        <function-ref name="readDone" scoped="" ref="0x406af5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x414f1280" loc="43:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorAcc.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x414f1280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414f18a8"/>
        <function-ref name="readDone" scoped="" ref="0x414f1b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="senseResult" ref="0x414f1e18" loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorAcc.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="senseResult" scoped="" ref="0x414f1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414f0010"/>
        <function-ref name="runTask" scoped="" ref="0x414f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x406b4cc0" loc="2:SensorLightC.nc">
      <component-ref qname="SenseAppC.SensorLight"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x406b4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406ae2f8"/>
        <function-ref name="readDone" scoped="" ref="0x406ae550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x414ed4e0" loc="43:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorLight.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x414ed4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414edb08"/>
        <function-ref name="readDone" scoped="" ref="0x414edd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="senseResult" ref="0x414ec090" loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorLight.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="senseResult" scoped="" ref="0x414ec090"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414ec268"/>
        <function-ref name="runTask" scoped="" ref="0x414ec348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x406d2370" loc="59:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x406d2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x406d2548"/>
        <function-ref name="setRoot" scoped="" ref="0x406d2628"/>
        <function-ref name="unsetRoot" scoped="" ref="0x406d2708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x406c9d28" loc="54:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x406c9d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x406c9f00"/>
        <function-ref name="setOrigin" scoped="" ref="0x406be010"/>
        <function-ref name="setType" scoped="" ref="0x406be0f0"/>
        <function-ref name="getOrigin" scoped="" ref="0x406be1d0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406be2b0"/>
        <function-ref name="getType" scoped="" ref="0x406be390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x406e0040" loc="64:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x406e0040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x406e0298"/>
        <function-ref name="logEventMsg" scoped="" ref="0x406e0378"/>
        <function-ref name="logEventSimple" scoped="" ref="0x406e0458"/>
        <function-ref name="logEventRoute" scoped="" ref="0x406e0538"/>
        <function-ref name="logEventDbg" scoped="" ref="0x406e0618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x406ce660" loc="51:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x406ce660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x406ce838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406c95e8" loc="53:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406c95e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c97c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x406c98a0"/>
        <function-ref name="getPayload" scoped="" ref="0x406c9980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c9a60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406c9b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406c0a88" loc="50:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406c0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406c0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x406c1970" loc="48:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x406c1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406c1b48"/>
        <function-ref name="getPayload" scoped="" ref="0x406c1c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c1d08"/>
        <function-ref name="cancel" scoped="" ref="0x406c1de8"/>
        <function-ref name="sendDone" scoped="" ref="0x406c1ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x406e1648" loc="57:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x406e1648"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x406e1820"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x406e1900"/>
        <function-ref name="numNeighbors" scoped="" ref="0x406e19e0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x406e1ac0"/>
        <function-ref name="getEtx" scoped="" ref="0x406e1ba0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x406e1c80"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x406e1d60"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x406e1e40"/>
        <function-ref name="getParent" scoped="" ref="0x406e1f20"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x406ca018"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x406ca0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406c03d8" loc="49:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406c03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406c05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x406caee8" loc="58:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x406caee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x406d20e0"/>
        <function-ref name="setClientCongested" scoped="" ref="0x406d21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x406d41c8" loc="55:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x406d41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x406d43a0"/>
        <function-ref name="option" scoped="" ref="0x406d4480"/>
        <function-ref name="setEtx" scoped="" ref="0x406d4560"/>
        <function-ref name="setOrigin" scoped="" ref="0x406d4640"/>
        <function-ref name="clearOption" scoped="" ref="0x406d4720"/>
        <function-ref name="getEtx" scoped="" ref="0x406d4800"/>
        <function-ref name="getOrigin" scoped="" ref="0x406d48e0"/>
        <function-ref name="setType" scoped="" ref="0x406d49c0"/>
        <function-ref name="setOption" scoped="" ref="0x406d4aa0"/>
        <function-ref name="matchPacket" scoped="" ref="0x406d4b80"/>
        <function-ref name="getThl" scoped="" ref="0x406d4c60"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406d4d40"/>
        <function-ref name="matchInstance" scoped="" ref="0x406d4e20"/>
        <function-ref name="getType" scoped="" ref="0x406bd010"/>
        <function-ref name="setThl" scoped="" ref="0x406bd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406c1240" loc="47:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406c1240"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c1418"/>
        <function-ref name="stop" scoped="" ref="0x406c14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x406de490" loc="63:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x406de490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x406de668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x406e7010" loc="92:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x406e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x406e71e8"/>
        <function-ref name="setRoot" scoped="" ref="0x406e72c8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x406e73a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x406ea8d0" loc="86:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x406ea8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x406eaaa8"/>
        <function-ref name="setOrigin" scoped="" ref="0x406eab88"/>
        <function-ref name="setType" scoped="" ref="0x406eac68"/>
        <function-ref name="getOrigin" scoped="" ref="0x406ead48"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406eae28"/>
        <function-ref name="getType" scoped="" ref="0x406eaf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x406f5178" loc="90:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x406f5178"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x406f5350"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x406f5430"/>
        <function-ref name="txNoAck" scoped="" ref="0x406f5510"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x406f55f0"/>
        <function-ref name="evicted" scoped="" ref="0x406f56d0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x406f57b0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x406f5890"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x406f5970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x406e7ce0" loc="97:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x406e7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x406e7eb8"/>
        <function-ref name="logEventMsg" scoped="" ref="0x406e6010"/>
        <function-ref name="logEventSimple" scoped="" ref="0x406e60f0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x406e61d0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x406e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x406ebd68" loc="83:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x406ebd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x406ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406ea190" loc="85:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406ea190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ea368"/>
        <function-ref name="payloadLength" scoped="" ref="0x406ea448"/>
        <function-ref name="getPayload" scoped="" ref="0x406ea528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406ea608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406ea6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406eb6c0" loc="82:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406eb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406eb898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x406ec568" loc="80:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x406ec568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ec740"/>
        <function-ref name="getPayload" scoped="" ref="0x406ec820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406ec900"/>
        <function-ref name="cancel" scoped="" ref="0x406ec9e0"/>
        <function-ref name="sendDone" scoped="" ref="0x406ecac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x406e8198" loc="89:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x406e8198"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x406e8370"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x406e8450"/>
        <function-ref name="numNeighbors" scoped="" ref="0x406e8530"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x406e8610"/>
        <function-ref name="getEtx" scoped="" ref="0x406e86f0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x406e87d0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x406e88b0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x406e8990"/>
        <function-ref name="getParent" scoped="" ref="0x406e8a70"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x406e8b50"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x406e8c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406eb010" loc="81:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406eb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x406f5b38" loc="91:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x406f5b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x406f5d10"/>
        <function-ref name="setClientCongested" scoped="" ref="0x406f5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x406e90c0" loc="87:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x406e90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x406e9298"/>
        <function-ref name="option" scoped="" ref="0x406e9378"/>
        <function-ref name="setEtx" scoped="" ref="0x406e9458"/>
        <function-ref name="setOrigin" scoped="" ref="0x406e9538"/>
        <function-ref name="clearOption" scoped="" ref="0x406e9618"/>
        <function-ref name="getEtx" scoped="" ref="0x406e96f8"/>
        <function-ref name="getOrigin" scoped="" ref="0x406e97d8"/>
        <function-ref name="setType" scoped="" ref="0x406e98b8"/>
        <function-ref name="setOption" scoped="" ref="0x406e9998"/>
        <function-ref name="matchPacket" scoped="" ref="0x406e9a78"/>
        <function-ref name="getThl" scoped="" ref="0x406e9b58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406e9c38"/>
        <function-ref name="matchInstance" scoped="" ref="0x406e9d18"/>
        <function-ref name="getType" scoped="" ref="0x406e9e78"/>
        <function-ref name="setThl" scoped="" ref="0x406e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406e0d78" loc="79:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406e0d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406ec010"/>
        <function-ref name="stop" scoped="" ref="0x406ec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x406e78b0" loc="96:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x406e78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x406e7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406f3c10" loc="55:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406f3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406f3de8"/>
        <function-ref name="stopDone" scoped="" ref="0x406f3ec8"/>
        <function-ref name="start" scoped="" ref="0x406f0010"/>
        <function-ref name="stop" scoped="" ref="0x406f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406f0550" loc="57:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406f0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f0728"/>
        <function-ref name="getPayload" scoped="" ref="0x406f0808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f08e8"/>
        <function-ref name="cancel" scoped="" ref="0x406f09c8"/>
        <function-ref name="sendDone" scoped="" ref="0x406f0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406ef5c8" loc="59:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406ef5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ef7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406ef920" loc="61:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406ef920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406efaf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406efbd8"/>
        <function-ref name="getPayload" scoped="" ref="0x406efcb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406efd98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406efe78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40714408" loc="64:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40714408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40714f08"/>
        <function-ref name="clear" scoped="" ref="0x4070a2d0"/>
        <function-ref name="isValid" scoped="" ref="0x40714b58"/>
        <function-ref name="set" scoped="" ref="0x4070a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4070dba8" loc="66:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4070dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4070dd80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4070de60"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40712010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x407120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406f0f10" loc="58:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406f0f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ef108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40706a90" loc="63:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40706a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40706c68"/>
        <function-ref name="noAck" scoped="" ref="0x40706d48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40706e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407097b0" loc="62:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407097b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40709988"/>
        <function-ref name="source" scoped="" ref="0x40709a68"/>
        <function-ref name="address" scoped="" ref="0x40709b48"/>
        <function-ref name="destination" scoped="" ref="0x40709c28"/>
        <function-ref name="setSource" scoped="" ref="0x40709d08"/>
        <function-ref name="setDestination" scoped="" ref="0x40709de8"/>
        <function-ref name="type" scoped="" ref="0x40709ec8"/>
        <function-ref name="setType" scoped="" ref="0x40701010"/>
        <function-ref name="isForMe" scoped="" ref="0x407010f0"/>
        <function-ref name="setGroup" scoped="" ref="0x407011d0"/>
        <function-ref name="localGroup" scoped="" ref="0x407012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4070adb8" loc="65:/opt/tinyos/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4070adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x407158c8"/>
        <function-ref name="clear" scoped="" ref="0x40715c78"/>
        <function-ref name="isValid" scoped="" ref="0x40715518"/>
        <function-ref name="set" scoped="" ref="0x40713048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4071b788" loc="55:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4071b788"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4071b960"/>
        <function-ref name="stopDone" scoped="" ref="0x4071ba40"/>
        <function-ref name="start" scoped="" ref="0x4071bb20"/>
        <function-ref name="stop" scoped="" ref="0x4071bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4072d120" loc="64:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4072d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4072d2f8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4072d3d8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4072d4b8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4072d598"/>
        <function-ref name="setCca" scoped="" ref="0x4072d678"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4072d758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40733d38" loc="67:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40733d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40738010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40717190" loc="60:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40717190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40717368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40717448"/>
        <function-ref name="getPayload" scoped="" ref="0x40717528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40717608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407176e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4071a100" loc="56:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4071a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4071a2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4071a3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4071a498"/>
        <function-ref name="cancel" scoped="" ref="0x4071a578"/>
        <function-ref name="sendDone" scoped="" ref="0x4071a658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40718178" loc="58:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40718178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40718350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x407299a0" loc="61:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x407299a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40729b78"/>
        <function-ref name="setNetwork" scoped="" ref="0x40729c58"/>
        <function-ref name="getRssi" scoped="" ref="0x40729d38"/>
        <function-ref name="getNetwork" scoped="" ref="0x40729e18"/>
        <function-ref name="getPower" scoped="" ref="0x40729ef8"/>
        <function-ref name="getLqi" scoped="" ref="0x4072e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4072d948" loc="65:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4072d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4072db20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4072dc00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4072dce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4072ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4071aac0" loc="57:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4071aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4071ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4072e230" loc="62:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4072e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4072e408"/>
        <function-ref name="noAck" scoped="" ref="0x4072e4e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4072e5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40732258" loc="66:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40732258"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40732430"/>
        <function-ref name="setRetries" scoped="" ref="0x40732510"/>
        <function-ref name="getRetries" scoped="" ref="0x407325f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x407326d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x407327b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407184e8" loc="59:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407184e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407186c0"/>
        <function-ref name="source" scoped="" ref="0x407187a0"/>
        <function-ref name="address" scoped="" ref="0x40718880"/>
        <function-ref name="destination" scoped="" ref="0x40718960"/>
        <function-ref name="setSource" scoped="" ref="0x40718a40"/>
        <function-ref name="setDestination" scoped="" ref="0x40718b20"/>
        <function-ref name="type" scoped="" ref="0x40718c00"/>
        <function-ref name="setType" scoped="" ref="0x40718ce0"/>
        <function-ref name="isForMe" scoped="" ref="0x40718dc0"/>
        <function-ref name="setGroup" scoped="" ref="0x40718ea0"/>
        <function-ref name="localGroup" scoped="" ref="0x40717010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40727638" loc="63:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40727638"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40727810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4072f010" loc="43:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4072f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4072f1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x4072f2c8"/>
        <function-ref name="start" scoped="" ref="0x4072f3a8"/>
        <function-ref name="stop" scoped="" ref="0x4072f488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40740ee0" loc="55:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40740ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4073f0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4073f8f0" loc="57:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4073f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4073fac8"/>
        <function-ref name="setRetries" scoped="" ref="0x4073fba8"/>
        <function-ref name="getRetries" scoped="" ref="0x4073fc88"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4073fd68"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4073fe48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x407400f8" loc="53:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x407400f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x407402d0"/>
        <function-ref name="setNetwork" scoped="" ref="0x407403b0"/>
        <function-ref name="getRssi" scoped="" ref="0x40740490"/>
        <function-ref name="getNetwork" scoped="" ref="0x40740570"/>
        <function-ref name="getPower" scoped="" ref="0x40740650"/>
        <function-ref name="getLqi" scoped="" ref="0x40740730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x407435c8" loc="50:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x407435c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407437a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40743880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40743960"/>
        <function-ref name="cancel" scoped="" ref="0x40743a40"/>
        <function-ref name="sendDone" scoped="" ref="0x40743b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4073f2d0" loc="56:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4073f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4073f4a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4073f588"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4073f668"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4073f748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40744a48" loc="47:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40744a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40744c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40740950" loc="54:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40740950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40740b28"/>
        <function-ref name="noAck" scoped="" ref="0x40740c08"/>
        <function-ref name="wasAcked" scoped="" ref="0x40740ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40741b80" loc="45:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40741b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40741d58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40741e38"/>
        <function-ref name="request" scoped="" ref="0x40741f18"/>
        <function-ref name="granted" scoped="" ref="0x40744010"/>
        <function-ref name="isOwner" scoped="" ref="0x407440f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x407442d8" loc="46:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x407442d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407444b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40744590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40744670"/>
        <function-ref name="cancel" scoped="" ref="0x40744750"/>
        <function-ref name="sendDone" scoped="" ref="0x40744830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40744e28" loc="48:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40744e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40743050"/>
        <function-ref name="payloadLength" scoped="" ref="0x40743130"/>
        <function-ref name="getPayload" scoped="" ref="0x40743210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407432f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407433d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40743d50" loc="51:/opt/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40743d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40743f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4073d648" loc="44:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4073d648"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4073d820"/>
        <function-ref name="stopDone" scoped="" ref="0x4073d900"/>
        <function-ref name="start" scoped="" ref="0x4073d9e0"/>
        <function-ref name="stop" scoped="" ref="0x4073dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4073a730" loc="47:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4073a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4073a908"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4073a9e8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4073aac8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4073aba8"/>
        <function-ref name="setCca" scoped="" ref="0x4073ac88"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4073ad68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4073dc50" loc="45:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4073dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4073de28"/>
        <function-ref name="getPayload" scoped="" ref="0x4073df08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4073a010"/>
        <function-ref name="cancel" scoped="" ref="0x4073a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4073a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4073a378" loc="46:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4073a378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4073a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4074f6e0" loc="39:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4074f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4074f8b8"/>
        <function-ref name="stopDone" scoped="" ref="0x4074f998"/>
        <function-ref name="start" scoped="" ref="0x4074fa78"/>
        <function-ref name="stop" scoped="" ref="0x4074fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4074c490" loc="41:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4074c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4074c668"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4074c748"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4074c828"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4074c908"/>
        <function-ref name="setCca" scoped="" ref="0x4074c9e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4074cac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x407496a8" loc="47:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x407496a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40749880"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40749960"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40749a40"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40749b20"/>
        <function-ref name="setCca" scoped="" ref="0x40749c00"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40749ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40746c88" loc="50:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40746c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40746e60"/>
        <function-ref name="setNetwork" scoped="" ref="0x40757010"/>
        <function-ref name="getRssi" scoped="" ref="0x407570f0"/>
        <function-ref name="getNetwork" scoped="" ref="0x407571d0"/>
        <function-ref name="getPower" scoped="" ref="0x407572b0"/>
        <function-ref name="getLqi" scoped="" ref="0x40757390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x40758ed0" loc="46:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40758ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407490c0"/>
        <function-ref name="cancel" scoped="" ref="0x407491a0"/>
        <function-ref name="modify" scoped="" ref="0x40749280"/>
        <function-ref name="sendDone" scoped="" ref="0x40749360"/>
        <function-ref name="resend" scoped="" ref="0x40749440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4074fce8" loc="40:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4074fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4074fec0"/>
        <function-ref name="getPayload" scoped="" ref="0x4074c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4074c0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4074c1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4074c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40756b00" loc="48:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40756b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40756cd8"/>
        <function-ref name="rand32" scoped="" ref="0x40756db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4074a930" loc="45:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4074a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4074ab08"/>
        <function-ref name="stop" scoped="" ref="0x4074abe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x407514b0" loc="51:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x407514b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40751688"/>
        <function-ref name="getHeader" scoped="" ref="0x40751768"/>
        <function-ref name="getMetadata" scoped="" ref="0x40751848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x40747e98" loc="44:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40747e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4074a0c0"/>
        <function-ref name="rfOff" scoped="" ref="0x4074a1a0"/>
        <function-ref name="rxOn" scoped="" ref="0x4074a280"/>
        <function-ref name="startVReg" scoped="" ref="0x4074a360"/>
        <function-ref name="stopVReg" scoped="" ref="0x4074a440"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4074a520"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4074a600"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4074a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40746010" loc="49:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40746010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407461e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407462c8"/>
        <function-ref name="led1On" scoped="" ref="0x407463a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40746488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40746568"/>
        <function-ref name="get" scoped="" ref="0x40746648"/>
        <function-ref name="led1Off" scoped="" ref="0x40746728"/>
        <function-ref name="led2Off" scoped="" ref="0x40746aa8"/>
        <function-ref name="set" scoped="" ref="0x40746808"/>
        <function-ref name="led0On" scoped="" ref="0x407468e8"/>
        <function-ref name="led2On" scoped="" ref="0x407469c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4074cc80" loc="43:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4074cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4074ce58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4074b010"/>
        <function-ref name="request" scoped="" ref="0x4074b0f0"/>
        <function-ref name="granted" scoped="" ref="0x4074b1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4074b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x40764d30" loc="52:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x40764d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40754010"/>
        <function-ref name="toIdle" scoped="" ref="0x407540f0"/>
        <function-ref name="isState" scoped="" ref="0x407541d0"/>
        <function-ref name="isIdle" scoped="" ref="0x407542b0"/>
        <function-ref name="requestState" scoped="" ref="0x40754390"/>
        <function-ref name="forceState" scoped="" ref="0x40754470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x40763ee8" loc="76:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x40763ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407620e0"/>
        <function-ref name="runTask" scoped="" ref="0x407621c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x407636d8" loc="75:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x407636d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407638b0"/>
        <function-ref name="runTask" scoped="" ref="0x40763990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x40753e70" loc="74:/opt/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x40753e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40763070"/>
        <function-ref name="runTask" scoped="" ref="0x40763150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40787ed0" loc="45:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40787ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4078e0c0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4078e1a0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4078e280"/>
        <function-ref name="syncDone" scoped="" ref="0x4078e360"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x4078e440"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4078e520"/>
        <function-ref name="setChannel" scoped="" ref="0x4078e600"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4078e6e0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x4078e7c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x4078e8a0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x4078e980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x4078ea60"/>
        <function-ref name="sync" scoped="" ref="0x4078eb40"/>
        <function-ref name="getChannel" scoped="" ref="0x4078eca0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4078ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4078daf8" loc="47:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4078daf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4079b1e0"/>
        <function-ref name="readDone" scoped="" ref="0x4079b438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x4078d010" loc="46:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4078d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4078d1e8"/>
        <function-ref name="rfOff" scoped="" ref="0x4078d2c8"/>
        <function-ref name="rxOn" scoped="" ref="0x4078d3a8"/>
        <function-ref name="startVReg" scoped="" ref="0x4078d488"/>
        <function-ref name="stopVReg" scoped="" ref="0x4078d568"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4078d648"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4078d728"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4078d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4077def8" loc="44:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4077def8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4078f0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4078f1c0"/>
        <function-ref name="request" scoped="" ref="0x4078f2a0"/>
        <function-ref name="granted" scoped="" ref="0x4078f380"/>
        <function-ref name="isOwner" scoped="" ref="0x4078f460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40798ad8" loc="46:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40798ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40798cb0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40798d90"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40798e70"/>
        <function-ref name="syncDone" scoped="" ref="0x40797010"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x407970f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x407971d0"/>
        <function-ref name="setChannel" scoped="" ref="0x407972b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40797390"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40797470"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40797550"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40797630"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40797710"/>
        <function-ref name="sync" scoped="" ref="0x407977f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40797950"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40797a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x4079d268" loc="66:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4079d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4079d440"/>
        <function-ref name="write" scoped="" ref="0x4079d520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x40794010" loc="50:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40794010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x407941e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x407945d8" loc="52:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x407945d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40792ab8"/>
        <function-ref name="fired" scoped="" ref="0x40792288"/>
        <function-ref name="startAt" scoped="" ref="0x40792778"/>
        <function-ref name="isRunning" scoped="" ref="0x40792500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40792d30"/>
        <function-ref name="start" scoped="" ref="0x40794d28"/>
        <function-ref name="stop" scoped="" ref="0x40792010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x407a5780" loc="64:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x407a5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407a5958"/>
        <function-ref name="write" scoped="" ref="0x407a5a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x407a8a38" loc="54:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x407a8a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407a8c10"/>
        <function-ref name="isInput" scoped="" ref="0x407a8cf0"/>
        <function-ref name="toggle" scoped="" ref="0x407a8dd0"/>
        <function-ref name="isOutput" scoped="" ref="0x407a8eb0"/>
        <function-ref name="get" scoped="" ref="0x407a7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407a70f0"/>
        <function-ref name="set" scoped="" ref="0x407a71d0"/>
        <function-ref name="clr" scoped="" ref="0x407a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40796760" loc="48:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40796760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40796d88"/>
        <function-ref name="readDone" scoped="" ref="0x40795010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x407a9618" loc="126:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x407a9618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407a97f0"/>
        <function-ref name="runTask" scoped="" ref="0x407a98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x4079d760" loc="67:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4079d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4079d938"/>
        <function-ref name="write" scoped="" ref="0x4079da18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x4079dc68" loc="68:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4079dc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4079de40"/>
        <function-ref name="write" scoped="" ref="0x4079df20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x407b4d28" loc="62:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x407b4d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407b4f00"/>
        <function-ref name="write" scoped="" ref="0x407a5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x407a0510" loc="57:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407a0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x407a06e8"/>
        <function-ref name="changed" scoped="" ref="0x407a07c8"/>
        <function-ref name="amGroup" scoped="" ref="0x407a08a8"/>
        <function-ref name="setAddress" scoped="" ref="0x407a0988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x407a8030" loc="53:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x407a8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407a8208"/>
        <function-ref name="isInput" scoped="" ref="0x407a82e8"/>
        <function-ref name="toggle" scoped="" ref="0x407a83c8"/>
        <function-ref name="isOutput" scoped="" ref="0x407a84a8"/>
        <function-ref name="get" scoped="" ref="0x407a8588"/>
        <function-ref name="makeOutput" scoped="" ref="0x407a8668"/>
        <function-ref name="set" scoped="" ref="0x407a8748"/>
        <function-ref name="clr" scoped="" ref="0x407a8828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x407b1348" loc="71:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x407b1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x407b1620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x407a74c0" loc="55:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x407a74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407a7698"/>
        <function-ref name="isInput" scoped="" ref="0x407a7778"/>
        <function-ref name="toggle" scoped="" ref="0x407a7858"/>
        <function-ref name="isOutput" scoped="" ref="0x407a7938"/>
        <function-ref name="get" scoped="" ref="0x407a7a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x407a7af8"/>
        <function-ref name="set" scoped="" ref="0x407a7bd8"/>
        <function-ref name="clr" scoped="" ref="0x407a7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40798010" loc="44:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40798010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407981e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x407a5ca0" loc="65:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x407a5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407a5e78"/>
        <function-ref name="write" scoped="" ref="0x4079d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x407b1868" loc="72:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x407b1868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x407b1a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x407b1c88" loc="74:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x407b1c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407b1e60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407b0010"/>
        <function-ref name="request" scoped="" ref="0x407b00f0"/>
        <function-ref name="granted" scoped="" ref="0x407b01d0"/>
        <function-ref name="isOwner" scoped="" ref="0x407b02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x407b0cb8" loc="76:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x407b0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407b0e90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407af010"/>
        <function-ref name="request" scoped="" ref="0x407af0f0"/>
        <function-ref name="granted" scoped="" ref="0x407af1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x407af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40797c00" loc="47:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40797c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40797dd8"/>
        <function-ref name="rfOff" scoped="" ref="0x40797eb8"/>
        <function-ref name="rxOn" scoped="" ref="0x40796010"/>
        <function-ref name="startVReg" scoped="" ref="0x407960f0"/>
        <function-ref name="stopVReg" scoped="" ref="0x407961d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x407962b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40796390"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40796470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x407a5260" loc="63:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x407a5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407a5438"/>
        <function-ref name="write" scoped="" ref="0x407a5518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x407b4820" loc="61:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x407b4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407b49f8"/>
        <function-ref name="write" scoped="" ref="0x407b4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x407b2ae8" loc="69:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x407b2ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x407b2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407af440" loc="78:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407af440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407af618"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407af6f8"/>
        <function-ref name="led1On" scoped="" ref="0x407af7d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407af8b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407af998"/>
        <function-ref name="get" scoped="" ref="0x407afa78"/>
        <function-ref name="led1Off" scoped="" ref="0x407afb58"/>
        <function-ref name="led2Off" scoped="" ref="0x407afed8"/>
        <function-ref name="set" scoped="" ref="0x407afc38"/>
        <function-ref name="led0On" scoped="" ref="0x407afd18"/>
        <function-ref name="led2On" scoped="" ref="0x407afdf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x407abd98" loc="125:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x407abd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407a9010"/>
        <function-ref name="runTask" scoped="" ref="0x407a90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407983a0" loc="45:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407983a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40798578"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40798658"/>
        <function-ref name="request" scoped="" ref="0x40798738"/>
        <function-ref name="granted" scoped="" ref="0x40798818"/>
        <function-ref name="isOwner" scoped="" ref="0x407988f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x407a60b8" loc="60:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x407a60b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407a6290"/>
        <function-ref name="write" scoped="" ref="0x407a6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x4079eb50" loc="59:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4079eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4079eda8"/>
        <function-ref name="write" scoped="" ref="0x4079ee88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x407a3590" loc="56:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x407a3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407a3768"/>
        <function-ref name="disable" scoped="" ref="0x407a3848"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407a3928"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407a3a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x407b0508" loc="75:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x407b0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407b06e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407b07c0"/>
        <function-ref name="request" scoped="" ref="0x407b08a0"/>
        <function-ref name="granted" scoped="" ref="0x407b0980"/>
        <function-ref name="isOwner" scoped="" ref="0x407b0a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x407b2f00" loc="70:/opt/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x407b2f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x407b10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407f7cb8" loc="45:/opt/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407f7cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407f7e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x407f4298" loc="46:/opt/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x407f4298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407f3758"/>
        <function-ref name="fired" scoped="" ref="0x407f4f00"/>
        <function-ref name="startAt" scoped="" ref="0x407f3418"/>
        <function-ref name="isRunning" scoped="" ref="0x407f31a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x407f39d0"/>
        <function-ref name="start" scoped="" ref="0x407f49e8"/>
        <function-ref name="stop" scoped="" ref="0x407f4c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407f1560" loc="86:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407f1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408eaab8"/>
        <function-ref name="fired" scoped="" ref="0x408ea288"/>
        <function-ref name="startAt" scoped="" ref="0x408ea778"/>
        <function-ref name="isRunning" scoped="" ref="0x408ea500"/>
        <function-ref name="getAlarm" scoped="" ref="0x408ead30"/>
        <function-ref name="start" scoped="" ref="0x407f1cb0"/>
        <function-ref name="stop" scoped="" ref="0x408ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40904010" loc="87:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40904010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409041e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4151eef8" loc="28:/opt/tinyos/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4151eef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4151b3e8"/>
        <function-ref name="fired" scoped="" ref="0x4151db98"/>
        <function-ref name="startAt" scoped="" ref="0x4151b0a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4151de10"/>
        <function-ref name="getAlarm" scoped="" ref="0x4151b660"/>
        <function-ref name="start" scoped="" ref="0x4151d680"/>
        <function-ref name="stop" scoped="" ref="0x4151d920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4151ac68" loc="30:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4151ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41518150"/>
        <function-ref name="fired" scoped="" ref="0x41519908"/>
        <function-ref name="startAt" scoped="" ref="0x41519df8"/>
        <function-ref name="isRunning" scoped="" ref="0x41519b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x415183c8"/>
        <function-ref name="start" scoped="" ref="0x415193f0"/>
        <function-ref name="stop" scoped="" ref="0x41519690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4081f208" loc="46:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4081f208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4081f3e0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x4081f4c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4081f5a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x4081f680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4081f760"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4081f840"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x4081f920"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x4081fa00"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x4081fae0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x4081fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4080d010" loc="47:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4080d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4080ca88"/>
        <function-ref name="test" scoped="" ref="0x4080c598"/>
        <function-ref name="get" scoped="" ref="0x4080d658"/>
        <function-ref name="captured" scoped="" ref="0x4080db70"/>
        <function-ref name="reset" scoped="" ref="0x4080de10"/>
        <function-ref name="isOn" scoped="" ref="0x4080c810"/>
        <function-ref name="set" scoped="" ref="0x4080d8d0"/>
        <function-ref name="start" scoped="" ref="0x4080c0a8"/>
        <function-ref name="stop" scoped="" ref="0x4080c320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4081a1b0" loc="48:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4081a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40818778"/>
        <function-ref name="fired" scoped="" ref="0x4081ad10"/>
        <function-ref name="get" scoped="" ref="0x4081a7f8"/>
        <function-ref name="reset" scoped="" ref="0x40818010"/>
        <function-ref name="isOn" scoped="" ref="0x408189f0"/>
        <function-ref name="set" scoped="" ref="0x4081aa70"/>
        <function-ref name="start" scoped="" ref="0x40818288"/>
        <function-ref name="stop" scoped="" ref="0x40818500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408112f0" loc="45:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4080fd30"/>
        <function-ref name="test" scoped="" ref="0x4080f840"/>
        <function-ref name="get" scoped="" ref="0x40811938"/>
        <function-ref name="setScale" scoped="" ref="0x4080e010"/>
        <function-ref name="getScale" scoped="" ref="0x4080e2b0"/>
        <function-ref name="reset" scoped="" ref="0x4080f0d8"/>
        <function-ref name="overflow" scoped="" ref="0x40811e50"/>
        <function-ref name="isOn" scoped="" ref="0x4080fab8"/>
        <function-ref name="set" scoped="" ref="0x40811bb0"/>
        <function-ref name="start" scoped="" ref="0x4080f350"/>
        <function-ref name="stop" scoped="" ref="0x4080f5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4082bb38" loc="47:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4082bb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4082bd10"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x4082bdf0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4082bed0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x4082a010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4082a0f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4082a1d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x4082a2b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x4082a390"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x4082a470"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x4082a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x40821c20" loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x40821c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40821df8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40821ed8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4083a010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4083a0f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4083a1d0"/>
        <function-ref name="setControl" scoped="" ref="0x4083a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40828760" loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40828760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40826cc8"/>
        <function-ref name="fired" scoped="" ref="0x408262e8"/>
        <function-ref name="get" scoped="" ref="0x40828da8"/>
        <function-ref name="reset" scoped="" ref="0x40826560"/>
        <function-ref name="isOn" scoped="" ref="0x40825010"/>
        <function-ref name="set" scoped="" ref="0x40826048"/>
        <function-ref name="start" scoped="" ref="0x408267d8"/>
        <function-ref name="stop" scoped="" ref="0x40826a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4082a888" loc="48:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4082a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40828320"/>
        <function-ref name="test" scoped="" ref="0x40829e18"/>
        <function-ref name="get" scoped="" ref="0x4082aed0"/>
        <function-ref name="captured" scoped="" ref="0x40829410"/>
        <function-ref name="reset" scoped="" ref="0x408296b0"/>
        <function-ref name="isOn" scoped="" ref="0x408280a8"/>
        <function-ref name="set" scoped="" ref="0x40829170"/>
        <function-ref name="start" scoped="" ref="0x40829928"/>
        <function-ref name="stop" scoped="" ref="0x40829ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40825428" loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40825428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408249f0"/>
        <function-ref name="fired" scoped="" ref="0x40824010"/>
        <function-ref name="get" scoped="" ref="0x40825a70"/>
        <function-ref name="reset" scoped="" ref="0x40824288"/>
        <function-ref name="isOn" scoped="" ref="0x40824c68"/>
        <function-ref name="set" scoped="" ref="0x40825ce8"/>
        <function-ref name="start" scoped="" ref="0x40824500"/>
        <function-ref name="stop" scoped="" ref="0x40824778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x408220b8" loc="51:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x408220b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40821620"/>
        <function-ref name="fired" scoped="" ref="0x40822c18"/>
        <function-ref name="get" scoped="" ref="0x40822700"/>
        <function-ref name="reset" scoped="" ref="0x40822e90"/>
        <function-ref name="isOn" scoped="" ref="0x40821898"/>
        <function-ref name="set" scoped="" ref="0x40822978"/>
        <function-ref name="start" scoped="" ref="0x40821130"/>
        <function-ref name="stop" scoped="" ref="0x408213a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40817850" loc="46:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40817850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4082b2c0"/>
        <function-ref name="test" scoped="" ref="0x4082ddb0"/>
        <function-ref name="get" scoped="" ref="0x40817e98"/>
        <function-ref name="setScale" scoped="" ref="0x4082b538"/>
        <function-ref name="getScale" scoped="" ref="0x4082b7d8"/>
        <function-ref name="reset" scoped="" ref="0x4082d648"/>
        <function-ref name="overflow" scoped="" ref="0x4082d3d0"/>
        <function-ref name="isOn" scoped="" ref="0x4082b048"/>
        <function-ref name="set" scoped="" ref="0x4082d130"/>
        <function-ref name="start" scoped="" ref="0x4082d8c0"/>
        <function-ref name="stop" scoped="" ref="0x4082db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40885040" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40885040"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4035eae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4035eae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40885218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40885428" loc="47:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40885428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4087dee0"/>
        <function-ref name="test" scoped="" ref="0x4087d9f0"/>
        <function-ref name="get" scoped="" ref="0x40885a70"/>
        <function-ref name="setScale" scoped="" ref="0x4087c170"/>
        <function-ref name="getScale" scoped="" ref="0x4087c410"/>
        <function-ref name="reset" scoped="" ref="0x4087d288"/>
        <function-ref name="overflow" scoped="" ref="0x4087d010"/>
        <function-ref name="isOn" scoped="" ref="0x4087dc68"/>
        <function-ref name="set" scoped="" ref="0x40885ce8"/>
        <function-ref name="start" scoped="" ref="0x4087d500"/>
        <function-ref name="stop" scoped="" ref="0x4087d778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4150ea00" loc="55:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4150ea00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4035e8e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4035e8e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4150c010"/>
        <function-ref name="fired" scoped="" ref="0x4150d718"/>
        <function-ref name="startAt" scoped="" ref="0x4150dc08"/>
        <function-ref name="isRunning" scoped="" ref="0x4150d990"/>
        <function-ref name="getAlarm" scoped="" ref="0x4150c288"/>
        <function-ref name="start" scoped="" ref="0x4150d200"/>
        <function-ref name="stop" scoped="" ref="0x4150d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x415097e8" loc="58:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x415097e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41508d58"/>
        <function-ref name="fired" scoped="" ref="0x41508378"/>
        <function-ref name="get" scoped="" ref="0x41509e30"/>
        <function-ref name="reset" scoped="" ref="0x415085f0"/>
        <function-ref name="isOn" scoped="" ref="0x41507010"/>
        <function-ref name="set" scoped="" ref="0x415080d8"/>
        <function-ref name="start" scoped="" ref="0x41508868"/>
        <function-ref name="stop" scoped="" ref="0x41508ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x4150c548" loc="57:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x4150c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41509010"/>
        <function-ref name="test" scoped="" ref="0x4150aab8"/>
        <function-ref name="get" scoped="" ref="0x4150cb90"/>
        <function-ref name="setScale" scoped="" ref="0x41509288"/>
        <function-ref name="getScale" scoped="" ref="0x41509528"/>
        <function-ref name="reset" scoped="" ref="0x4150a350"/>
        <function-ref name="overflow" scoped="" ref="0x4150a0d8"/>
        <function-ref name="isOn" scoped="" ref="0x4150ad30"/>
        <function-ref name="set" scoped="" ref="0x4150ce08"/>
        <function-ref name="start" scoped="" ref="0x4150a5c8"/>
        <function-ref name="stop" scoped="" ref="0x4150a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408ace28" loc="24:/opt/tinyos/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408ace28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408a8590"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408a8a80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408a8808"/>
        <function-ref name="overflow" scoped="" ref="0x408a8cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408a6828" loc="24:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408a6828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408a3010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408a3500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408a3288"/>
        <function-ref name="overflow" scoped="" ref="0x408a3778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408bd030" loc="45:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408bd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408bd780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408bdc70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408bd9f8"/>
        <function-ref name="overflow" scoped="" ref="0x408bdee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x408bc208" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408bc208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x408b1c68"/>
        <function-ref name="test" scoped="" ref="0x408b1778"/>
        <function-ref name="get" scoped="" ref="0x408bc850"/>
        <function-ref name="setScale" scoped="" ref="0x408b1ee0"/>
        <function-ref name="getScale" scoped="" ref="0x408cc1c0"/>
        <function-ref name="reset" scoped="" ref="0x408b1010"/>
        <function-ref name="overflow" scoped="" ref="0x408bcd68"/>
        <function-ref name="isOn" scoped="" ref="0x408b19f0"/>
        <function-ref name="set" scoped="" ref="0x408bcac8"/>
        <function-ref name="start" scoped="" ref="0x408b1288"/>
        <function-ref name="stop" scoped="" ref="0x408b1500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x408d66f8" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x408d66f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408d6e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408d5350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408d50d8"/>
        <function-ref name="overflow" scoped="" ref="0x408d55c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408cb490" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408cb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408cbbe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408d6110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408cbe58"/>
        <function-ref name="overflow" scoped="" ref="0x408d6388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x415166b8" loc="61:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x415166b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41515b80"/>
        <function-ref name="fired" scoped="" ref="0x41515350"/>
        <function-ref name="startAt" scoped="" ref="0x41515840"/>
        <function-ref name="isRunning" scoped="" ref="0x415155c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x41515df8"/>
        <function-ref name="start" scoped="" ref="0x41516e08"/>
        <function-ref name="stop" scoped="" ref="0x415150d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x415133b8" loc="73:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x415133b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="TOne" ref="0x403d1e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41512878"/>
        <function-ref name="fired" scoped="" ref="0x41512048"/>
        <function-ref name="startAt" scoped="" ref="0x41512538"/>
        <function-ref name="isRunning" scoped="" ref="0x415122c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41512af0"/>
        <function-ref name="start" scoped="" ref="0x41513b08"/>
        <function-ref name="stop" scoped="" ref="0x41513da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41514180" loc="68:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41514180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415148d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41514dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41514b48"/>
        <function-ref name="overflow" scoped="" ref="0x41513048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408e9278" loc="18:/opt/tinyos/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408e9278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e9450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x40901128" loc="87:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40901128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40901300"/>
        <function-ref name="isInput" scoped="" ref="0x409013e0"/>
        <function-ref name="toggle" scoped="" ref="0x409014c0"/>
        <function-ref name="isOutput" scoped="" ref="0x409015a0"/>
        <function-ref name="get" scoped="" ref="0x40901680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40901760"/>
        <function-ref name="set" scoped="" ref="0x40901840"/>
        <function-ref name="clr" scoped="" ref="0x40901920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x40901b18" loc="88:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40901b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40901cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40901dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40901eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40900010"/>
        <function-ref name="get" scoped="" ref="0x409000f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409001d0"/>
        <function-ref name="set" scoped="" ref="0x409002b0"/>
        <function-ref name="clr" scoped="" ref="0x40900390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40900580" loc="89:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40900580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40900758"/>
        <function-ref name="isInput" scoped="" ref="0x40900838"/>
        <function-ref name="toggle" scoped="" ref="0x40900918"/>
        <function-ref name="isOutput" scoped="" ref="0x409009f8"/>
        <function-ref name="get" scoped="" ref="0x40900ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40900bb8"/>
        <function-ref name="set" scoped="" ref="0x40900c98"/>
        <function-ref name="clr" scoped="" ref="0x40900d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x40902730" loc="86:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40902730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40902908"/>
        <function-ref name="isInput" scoped="" ref="0x409029e8"/>
        <function-ref name="toggle" scoped="" ref="0x40902ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40902ba8"/>
        <function-ref name="get" scoped="" ref="0x40902c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40902d68"/>
        <function-ref name="set" scoped="" ref="0x40902e48"/>
        <function-ref name="clr" scoped="" ref="0x40902f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x408ff9f8" loc="91:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x408ff9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ffbd0"/>
        <function-ref name="isInput" scoped="" ref="0x408ffcb0"/>
        <function-ref name="toggle" scoped="" ref="0x408ffd90"/>
        <function-ref name="isOutput" scoped="" ref="0x408ffe70"/>
        <function-ref name="get" scoped="" ref="0x408fe010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408fe0f0"/>
        <function-ref name="set" scoped="" ref="0x408fe1d0"/>
        <function-ref name="clr" scoped="" ref="0x408fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x407f6c90" loc="85:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x407f6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f6e68"/>
        <function-ref name="isInput" scoped="" ref="0x40902010"/>
        <function-ref name="toggle" scoped="" ref="0x409020f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409021d0"/>
        <function-ref name="get" scoped="" ref="0x409022b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40902390"/>
        <function-ref name="set" scoped="" ref="0x40902470"/>
        <function-ref name="clr" scoped="" ref="0x40902550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x408ff010" loc="90:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x408ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ff1e8"/>
        <function-ref name="isInput" scoped="" ref="0x408ff2c8"/>
        <function-ref name="toggle" scoped="" ref="0x408ff3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408ff488"/>
        <function-ref name="get" scoped="" ref="0x408ff568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ff648"/>
        <function-ref name="set" scoped="" ref="0x408ff728"/>
        <function-ref name="clr" scoped="" ref="0x408ff808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x409123e8" loc="39:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x409123e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409125c0"/>
        <function-ref name="disable" scoped="" ref="0x409126a0"/>
        <function-ref name="captured" scoped="" ref="0x40912780"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40912860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x40912ae8" loc="40:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40912ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40912cc0"/>
        <function-ref name="disable" scoped="" ref="0x40912da0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40912e80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408f8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x408f82a8" loc="41:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x408f82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408f8480"/>
        <function-ref name="disable" scoped="" ref="0x408f8560"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408f8640"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408f8720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x409117a8" loc="42:/opt/tinyos/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409117a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40911980"/>
        <function-ref name="disable" scoped="" ref="0x40911a60"/>
        <function-ref name="captured" scoped="" ref="0x40911b40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40911c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x40911e30" loc="43:/opt/tinyos/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x40911e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x409068b8"/>
        <function-ref name="test" scoped="" ref="0x409063c8"/>
        <function-ref name="get" scoped="" ref="0x40907488"/>
        <function-ref name="captured" scoped="" ref="0x409079a0"/>
        <function-ref name="reset" scoped="" ref="0x40907c40"/>
        <function-ref name="isOn" scoped="" ref="0x40906640"/>
        <function-ref name="set" scoped="" ref="0x40907700"/>
        <function-ref name="start" scoped="" ref="0x40907eb8"/>
        <function-ref name="stop" scoped="" ref="0x40906150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40920978" loc="9:/opt/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40920978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40920b50"/>
        <function-ref name="fired" scoped="" ref="0x40920c30"/>
        <function-ref name="disable" scoped="" ref="0x40920d10"/>
        <function-ref name="edge" scoped="" ref="0x40920df0"/>
        <function-ref name="enable" scoped="" ref="0x40920ed0"/>
        <function-ref name="getValue" scoped="" ref="0x4091f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40920380" loc="8:/opt/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40920380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40920558"/>
        <function-ref name="disable" scoped="" ref="0x40920638"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40920718"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x409207f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x4092c168" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x4092c168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092c340"/>
        <function-ref name="fired" scoped="" ref="0x4092c420"/>
        <function-ref name="disable" scoped="" ref="0x4092c500"/>
        <function-ref name="edge" scoped="" ref="0x4092c5e0"/>
        <function-ref name="enable" scoped="" ref="0x4092c6c0"/>
        <function-ref name="getValue" scoped="" ref="0x4092c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x4092f5d8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x4092f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092f7b0"/>
        <function-ref name="fired" scoped="" ref="0x4092f890"/>
        <function-ref name="disable" scoped="" ref="0x4092f970"/>
        <function-ref name="edge" scoped="" ref="0x4092fa50"/>
        <function-ref name="enable" scoped="" ref="0x4092fb30"/>
        <function-ref name="getValue" scoped="" ref="0x4092fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4092d010" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4092d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092d1e8"/>
        <function-ref name="fired" scoped="" ref="0x4092d2c8"/>
        <function-ref name="disable" scoped="" ref="0x4092d3a8"/>
        <function-ref name="edge" scoped="" ref="0x4092d488"/>
        <function-ref name="enable" scoped="" ref="0x4092d568"/>
        <function-ref name="getValue" scoped="" ref="0x4092d648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x4092c9e8" loc="52:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x4092c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092cbc0"/>
        <function-ref name="fired" scoped="" ref="0x4092cca0"/>
        <function-ref name="disable" scoped="" ref="0x4092cd80"/>
        <function-ref name="edge" scoped="" ref="0x4092ce60"/>
        <function-ref name="enable" scoped="" ref="0x4092b010"/>
        <function-ref name="getValue" scoped="" ref="0x4092b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x4092fe58" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x4092fe58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092e050"/>
        <function-ref name="fired" scoped="" ref="0x4092e130"/>
        <function-ref name="disable" scoped="" ref="0x4092e210"/>
        <function-ref name="edge" scoped="" ref="0x4092e2f0"/>
        <function-ref name="enable" scoped="" ref="0x4092e3d0"/>
        <function-ref name="getValue" scoped="" ref="0x4092e4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4092d890" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4092d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092da68"/>
        <function-ref name="fired" scoped="" ref="0x4092db48"/>
        <function-ref name="disable" scoped="" ref="0x4092dc28"/>
        <function-ref name="edge" scoped="" ref="0x4092dd08"/>
        <function-ref name="enable" scoped="" ref="0x4092dde8"/>
        <function-ref name="getValue" scoped="" ref="0x4092dec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x4091fd20" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x4091fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091fef8"/>
        <function-ref name="fired" scoped="" ref="0x4092f010"/>
        <function-ref name="disable" scoped="" ref="0x4092f0f0"/>
        <function-ref name="edge" scoped="" ref="0x4092f1d0"/>
        <function-ref name="enable" scoped="" ref="0x4092f2b0"/>
        <function-ref name="getValue" scoped="" ref="0x4092f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4092e6f8" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4092e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092e8d0"/>
        <function-ref name="fired" scoped="" ref="0x4092e9b0"/>
        <function-ref name="disable" scoped="" ref="0x4092ea90"/>
        <function-ref name="edge" scoped="" ref="0x4092eb70"/>
        <function-ref name="enable" scoped="" ref="0x4092ec50"/>
        <function-ref name="getValue" scoped="" ref="0x4092ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x409251a0" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x409251a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40925378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40926a60" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40926a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40926c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x409287d8" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x409287d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409289b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40925618" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40925618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x40926ed8" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x40926ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409280c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40928c50" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40928c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40928e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x409265e8" loc="43:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x409265e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409267c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40928360" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40928360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40928538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40929570" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40929570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40929748"/>
        <function-ref name="fired" scoped="" ref="0x40929828"/>
        <function-ref name="disable" scoped="" ref="0x40929908"/>
        <function-ref name="edge" scoped="" ref="0x409299e8"/>
        <function-ref name="enable" scoped="" ref="0x40929ac8"/>
        <function-ref name="getValue" scoped="" ref="0x40929ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40929d28" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40929d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40929f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409466c0" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409466c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40946898"/>
        <function-ref name="fired" scoped="" ref="0x40946978"/>
        <function-ref name="disable" scoped="" ref="0x40946a58"/>
        <function-ref name="edge" scoped="" ref="0x40946b38"/>
        <function-ref name="enable" scoped="" ref="0x40946c18"/>
        <function-ref name="getValue" scoped="" ref="0x40946cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40946e78" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40946e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40945070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409437a8" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409437a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40943980"/>
        <function-ref name="fired" scoped="" ref="0x40943a60"/>
        <function-ref name="disable" scoped="" ref="0x40943b40"/>
        <function-ref name="edge" scoped="" ref="0x40943c20"/>
        <function-ref name="enable" scoped="" ref="0x40943d00"/>
        <function-ref name="getValue" scoped="" ref="0x40943de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40942010" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40942010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409421e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40941920" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40941920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40941af8"/>
        <function-ref name="fired" scoped="" ref="0x40941bd8"/>
        <function-ref name="disable" scoped="" ref="0x40941cb8"/>
        <function-ref name="edge" scoped="" ref="0x40941d98"/>
        <function-ref name="enable" scoped="" ref="0x40941e78"/>
        <function-ref name="getValue" scoped="" ref="0x40940010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40940190" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40940190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40940368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4093fbd0" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4093fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4093fda8"/>
        <function-ref name="fired" scoped="" ref="0x4093fe88"/>
        <function-ref name="disable" scoped="" ref="0x4095c010"/>
        <function-ref name="edge" scoped="" ref="0x4095c0f0"/>
        <function-ref name="enable" scoped="" ref="0x4095c1d0"/>
        <function-ref name="getValue" scoped="" ref="0x4095c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4095c430" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4095c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4095c608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4095be68" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4095be68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4095a050"/>
        <function-ref name="fired" scoped="" ref="0x4095a130"/>
        <function-ref name="disable" scoped="" ref="0x4095a210"/>
        <function-ref name="edge" scoped="" ref="0x4095a2f0"/>
        <function-ref name="enable" scoped="" ref="0x4095a3d0"/>
        <function-ref name="getValue" scoped="" ref="0x4095a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4095a630" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4095a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4095a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40957050" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40957050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40957228"/>
        <function-ref name="fired" scoped="" ref="0x40957308"/>
        <function-ref name="disable" scoped="" ref="0x409573e8"/>
        <function-ref name="edge" scoped="" ref="0x409574c8"/>
        <function-ref name="enable" scoped="" ref="0x409575a8"/>
        <function-ref name="getValue" scoped="" ref="0x40957688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40957808" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40957808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409579e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409552b0" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409552b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40955488"/>
        <function-ref name="fired" scoped="" ref="0x40955568"/>
        <function-ref name="disable" scoped="" ref="0x40955648"/>
        <function-ref name="edge" scoped="" ref="0x40955728"/>
        <function-ref name="enable" scoped="" ref="0x40955808"/>
        <function-ref name="getValue" scoped="" ref="0x409558e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40955a68" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40955a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40955c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x4094e8b8" loc="51:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x4094e8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4094ea90"/>
        <function-ref name="isInput" scoped="" ref="0x4094eb70"/>
        <function-ref name="toggle" scoped="" ref="0x4094ec50"/>
        <function-ref name="isOutput" scoped="" ref="0x4094ed30"/>
        <function-ref name="get" scoped="" ref="0x4094ee10"/>
        <function-ref name="makeOutput" scoped="" ref="0x4094eef0"/>
        <function-ref name="set" scoped="" ref="0x4096b010"/>
        <function-ref name="clr" scoped="" ref="0x4096b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x4094e200" loc="47:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x4094e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4094e3d8"/>
        <function-ref name="disable" scoped="" ref="0x4094e4b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4094e598"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4094e678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x4096a0f8" loc="69:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x4096a0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4096a2d0"/>
        <function-ref name="runTask" scoped="" ref="0x4096a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40abf880" loc="69:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40abf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abfb58"/>
        <function-ref name="write" scoped="" ref="0x40abfc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40aa1bd8" loc="47:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40aa1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aa1db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40ac1e50" loc="63:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40ac1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac0050"/>
        <function-ref name="write" scoped="" ref="0x40ac0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40abe6a8" loc="72:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40abe6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abe880"/>
        <function-ref name="write" scoped="" ref="0x40abe960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40abeae0" loc="73:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40abeae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abecb8"/>
        <function-ref name="write" scoped="" ref="0x40abed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40ab8cb8" loc="94:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40ab8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab8e90"/>
        <function-ref name="write" scoped="" ref="0x40ab6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40ab9b20" loc="90:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40ab9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab9cf8"/>
        <function-ref name="write" scoped="" ref="0x40ab9dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40aa06c0" loc="50:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40aa06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aa0898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40ab92b0" loc="88:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40ab92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab9488"/>
        <function-ref name="write" scoped="" ref="0x40ab9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40ac06e8" loc="65:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40ac06e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac08c0"/>
        <function-ref name="write" scoped="" ref="0x40ac09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40abf010" loc="67:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40abf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abf1e8"/>
        <function-ref name="write" scoped="" ref="0x40abf2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40abb468" loc="79:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40abb468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abb640"/>
        <function-ref name="write" scoped="" ref="0x40abb720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40abef18" loc="74:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40abef18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abc108"/>
        <function-ref name="write" scoped="" ref="0x40abc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40aa1010" loc="42:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40aa1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40aa11e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40aa12c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40aa13a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40ac24e8" loc="54:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40ac24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ac26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40ac2840" loc="55:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40ac2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ac2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40ac2c18" loc="56:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40ac2c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ac2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40ab96e8" loc="89:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40ab96e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab98c0"/>
        <function-ref name="write" scoped="" ref="0x40ab99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40aa0d70" loc="52:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40aa0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ac2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40ac0b20" loc="66:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40ac0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac0cf8"/>
        <function-ref name="write" scoped="" ref="0x40ac0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40ac02b0" loc="64:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40ac02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac0488"/>
        <function-ref name="write" scoped="" ref="0x40ac0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40aa1880" loc="46:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40aa1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aa1a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40ab8880" loc="93:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40ab8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab8a58"/>
        <function-ref name="write" scoped="" ref="0x40ab8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40ab8010" loc="91:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40ab8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab81e8"/>
        <function-ref name="write" scoped="" ref="0x40ab82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40abb8a0" loc="80:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40abb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abba78"/>
        <function-ref name="write" scoped="" ref="0x40abbb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40abae38" loc="87:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40abae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab9050"/>
        <function-ref name="write" scoped="" ref="0x40ab9130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40abc7a0" loc="76:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40abc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abc978"/>
        <function-ref name="write" scoped="" ref="0x40abca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40ab6190" loc="97:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40ab6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40ab6568"/>
        <function-ref name="writeDone" scoped="" ref="0x40ab6648"/>
        <function-ref name="write" scoped="" ref="0x40ab6728"/>
        <function-ref name="beginRead" scoped="" ref="0x40ab6808"/>
        <function-ref name="readDone" scoped="" ref="0x40ab68e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40aa1528" loc="45:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40aa1528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aa1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40ac1a18" loc="62:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40ac1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac1bf0"/>
        <function-ref name="write" scoped="" ref="0x40ac1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40abf448" loc="68:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40abf448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abf620"/>
        <function-ref name="write" scoped="" ref="0x40abf700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40abc368" loc="75:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40abc368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abc540"/>
        <function-ref name="write" scoped="" ref="0x40abc620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40abfdb8" loc="70:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40abfdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abe010"/>
        <function-ref name="write" scoped="" ref="0x40abe0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40aa0010" loc="48:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40aa0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aa01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40abe270" loc="71:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40abe270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abe448"/>
        <function-ref name="write" scoped="" ref="0x40abe528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aa2918" loc="41:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aa2918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aa2af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aa2bd0"/>
        <function-ref name="request" scoped="" ref="0x40aa2cb0"/>
        <function-ref name="granted" scoped="" ref="0x40aa2d90"/>
        <function-ref name="isOwner" scoped="" ref="0x40aa2e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40ac1010" loc="57:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40ac1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ac11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40ac16c0" loc="59:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40ac16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ac1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40abaa00" loc="86:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40abaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ababd8"/>
        <function-ref name="write" scoped="" ref="0x40abacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40aba5c8" loc="85:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40aba5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aba7a0"/>
        <function-ref name="write" scoped="" ref="0x40aba880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40ac2190" loc="53:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40ac2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ac2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40aba190" loc="82:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40aba190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aba368"/>
        <function-ref name="write" scoped="" ref="0x40aba448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40ab8448" loc="92:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40ab8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab8620"/>
        <function-ref name="write" scoped="" ref="0x40ab8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40abbcd8" loc="81:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40abbcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abbeb0"/>
        <function-ref name="write" scoped="" ref="0x40aba010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40aa0368" loc="49:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40aa0368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aa0540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40abb030" loc="78:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40abb030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abb208"/>
        <function-ref name="write" scoped="" ref="0x40abb2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40aa0a18" loc="51:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40aa0a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aa0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40abcbd8" loc="77:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40abcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abcdb0"/>
        <function-ref name="write" scoped="" ref="0x40abce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40ac1368" loc="58:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40ac1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ac1540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40ab6a68" loc="98:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40ab6a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40ab6c40"/>
        <function-ref name="writeDone" scoped="" ref="0x40ab6d20"/>
        <function-ref name="write" scoped="" ref="0x40ab6e00"/>
        <function-ref name="beginRead" scoped="" ref="0x40ab6ee0"/>
        <function-ref name="readDone" scoped="" ref="0x40ab5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40980100" loc="41:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40980100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409802d8"/>
        <function-ref name="writeDone" scoped="" ref="0x409803b8"/>
        <function-ref name="write" scoped="" ref="0x40980498"/>
        <function-ref name="beginRead" scoped="" ref="0x40980578"/>
        <function-ref name="readDone" scoped="" ref="0x40980658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40981850" loc="40:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40981850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40981a28"/>
        <function-ref name="abortRelease" scoped="" ref="0x40981b08"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40981be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40980b48" loc="42:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40980b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40980d20"/>
        <function-ref name="write" scoped="" ref="0x40980e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4097f330" loc="43:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4097f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097f508"/>
        <function-ref name="write" scoped="" ref="0x4097f5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40981100" loc="39:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40981100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409812d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409813b8"/>
        <function-ref name="request" scoped="" ref="0x40981498"/>
        <function-ref name="granted" scoped="" ref="0x40981578"/>
        <function-ref name="isOwner" scoped="" ref="0x40981658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4097fb08" loc="44:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4097fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4097fce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x40991a28" loc="55:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40991a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40991c00"/>
        <function-ref name="sendDone" scoped="" ref="0x40991ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4097b918" loc="46:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4097b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4097baf0"/>
        <function-ref name="writeDone" scoped="" ref="0x4097bbd0"/>
        <function-ref name="write" scoped="" ref="0x4097bcb0"/>
        <function-ref name="beginRead" scoped="" ref="0x4097bd90"/>
        <function-ref name="readDone" scoped="" ref="0x4097be70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4097e688" loc="44:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4097e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4097e860"/>
        <function-ref name="abortRelease" scoped="" ref="0x4097e940"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4097ea20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x40993718" loc="54:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40993718"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409938f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x40991ef8" loc="56:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x40991ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409950e0"/>
        <function-ref name="toIdle" scoped="" ref="0x409951c0"/>
        <function-ref name="isState" scoped="" ref="0x409952a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40995380"/>
        <function-ref name="requestState" scoped="" ref="0x40995460"/>
        <function-ref name="forceState" scoped="" ref="0x40995540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40996730" loc="53:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40996730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40996908"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409969e8"/>
        <function-ref name="request" scoped="" ref="0x40996ac8"/>
        <function-ref name="granted" scoped="" ref="0x40996ba8"/>
        <function-ref name="isOwner" scoped="" ref="0x40996c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40997370" loc="47:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40997370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40997548"/>
        <function-ref name="write" scoped="" ref="0x40997628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40997b18" loc="48:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40997b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40997cf0"/>
        <function-ref name="write" scoped="" ref="0x40997dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409956b0" loc="57:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409956b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40995888"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40995968"/>
        <function-ref name="led1On" scoped="" ref="0x40995a48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40995b28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40995c08"/>
        <function-ref name="get" scoped="" ref="0x40995ce8"/>
        <function-ref name="led1Off" scoped="" ref="0x40995dc8"/>
        <function-ref name="led2Off" scoped="" ref="0x409941d0"/>
        <function-ref name="set" scoped="" ref="0x40995ea8"/>
        <function-ref name="led0On" scoped="" ref="0x40994010"/>
        <function-ref name="led2On" scoped="" ref="0x409940f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4097ee98" loc="45:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4097ee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4097b0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4097b1a0"/>
        <function-ref name="request" scoped="" ref="0x4097b280"/>
        <function-ref name="granted" scoped="" ref="0x4097b360"/>
        <function-ref name="isOwner" scoped="" ref="0x4097b440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x4098d520" loc="88:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x4098d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4098d6f8"/>
        <function-ref name="runTask" scoped="" ref="0x4098d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x409962f0" loc="49:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x409962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409964c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x409d5e40" loc="67:/opt/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x409d5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409b8050"/>
        <function-ref name="toIdle" scoped="" ref="0x409b8130"/>
        <function-ref name="isState" scoped="" ref="0x409b8210"/>
        <function-ref name="isIdle" scoped="" ref="0x409b82f0"/>
        <function-ref name="requestState" scoped="" ref="0x409b83d0"/>
        <function-ref name="forceState" scoped="" ref="0x409b84b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x409d3100" loc="66:/opt/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x409d3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409d32d8"/>
        <function-ref name="toIdle" scoped="" ref="0x409d33b8"/>
        <function-ref name="isState" scoped="" ref="0x409d3498"/>
        <function-ref name="isIdle" scoped="" ref="0x409d3578"/>
        <function-ref name="requestState" scoped="" ref="0x409d3658"/>
        <function-ref name="forceState" scoped="" ref="0x409d3738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409cf128" loc="66:/opt/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409cf128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409cf300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x409cf758" loc="67:/opt/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x409cf758"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409cf930"/>
        <function-ref name="toIdle" scoped="" ref="0x409cfa10"/>
        <function-ref name="isState" scoped="" ref="0x409cfaf0"/>
        <function-ref name="isIdle" scoped="" ref="0x409cfbd0"/>
        <function-ref name="requestState" scoped="" ref="0x409cfcb0"/>
        <function-ref name="forceState" scoped="" ref="0x409cfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a97668" loc="43:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a97668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a97840"/>
        <function-ref name="sendDone" scoped="" ref="0x40a97920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a97330" loc="42:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a97330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a97508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409d48b0" loc="39:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409d48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409d4a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409d4be8" loc="40:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409d4be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409d4dc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409d4ea0"/>
        <function-ref name="request" scoped="" ref="0x40a97010"/>
        <function-ref name="granted" scoped="" ref="0x40a970f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x409dc648" loc="84:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x409dc648"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409dc820"/>
        <function-ref name="sendDone" scoped="" ref="0x409dc900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x409e0d40" loc="82:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409e0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409e0f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409e09c0" loc="81:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409e09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409e0b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x409dc010" loc="83:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x409dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x409dc1e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x409dc2c8"/>
        <function-ref name="splitRead" scoped="" ref="0x409dc3a8"/>
        <function-ref name="write" scoped="" ref="0x409dc488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409dcd98" loc="85:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409dcd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409db010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409db0f0"/>
        <function-ref name="request" scoped="" ref="0x409db1d0"/>
        <function-ref name="granted" scoped="" ref="0x409db2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x409db390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40a10860" loc="296:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40a10860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a10a38"/>
        <function-ref name="runTask" scoped="" ref="0x40a10b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x409f7d10" loc="94:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x409f7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f7ee8"/>
        <function-ref name="sendDone" scoped="" ref="0x409f6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a04158" loc="99:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a04158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a04330"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a04410"/>
        <function-ref name="request" scoped="" ref="0x40a044f0"/>
        <function-ref name="granted" scoped="" ref="0x40a045d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a046b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x409f7370" loc="92:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409f7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409f7548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409f7010" loc="91:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409f71e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40a054d0" loc="98:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40a054d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a056a8"/>
        <function-ref name="sleep" scoped="" ref="0x409f4b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a05868"/>
        <function-ref name="dataReady" scoped="" ref="0x409f4bf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a05a28"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a05b08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a05be8"/>
        <function-ref name="read" scoped="" ref="0x40a05cc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a05da8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a05e88"/>
        <function-ref name="setClock" scoped="" ref="0x409f4010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x409f40f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x409f41d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x409f4330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x409f4410"/>
        <function-ref name="write" scoped="" ref="0x409f44f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x409f45d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x409f46b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x409f4790"/>
        <function-ref name="getClock" scoped="" ref="0x409f4870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x409f4950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a05788"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a05948"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x409f4a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x409f76f8" loc="93:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x409f76f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x409f78d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x409f79b0"/>
        <function-ref name="splitRead" scoped="" ref="0x409f7a90"/>
        <function-ref name="write" scoped="" ref="0x409f7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409f6488" loc="95:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409f6488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409f6660"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409f6740"/>
        <function-ref name="request" scoped="" ref="0x409f6820"/>
        <function-ref name="granted" scoped="" ref="0x409f6900"/>
        <function-ref name="isOwner" scoped="" ref="0x409f69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a017b8" loc="100:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a017b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a01990"/>
        <function-ref name="userId" scoped="" ref="0x40a01a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a01c38" loc="101:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a01c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a01e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x409d83c8" loc="76:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x409d83c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x409d85a0"/>
        <function-ref name="sleep" scoped="" ref="0x40a37a30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x409d8760"/>
        <function-ref name="dataReady" scoped="" ref="0x40a37b10"/>
        <function-ref name="initMaster" scoped="" ref="0x409d8920"/>
        <function-ref name="setMasterBit" scoped="" ref="0x409d8a00"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x409d8ae0"/>
        <function-ref name="read" scoped="" ref="0x409d8bc0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x409d8ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x409d8d80"/>
        <function-ref name="setClock" scoped="" ref="0x409d8e60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a37010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a370f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a37250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a37330"/>
        <function-ref name="write" scoped="" ref="0x40a37410"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a374f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a375d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a376b0"/>
        <function-ref name="getClock" scoped="" ref="0x40a37790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a37870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x409d8680"/>
        <function-ref name="setClockPhase" scoped="" ref="0x409d8840"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a37950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40a2e4a0" loc="81:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40a2e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a2e678"/>
        <function-ref name="isInput" scoped="" ref="0x40a2e758"/>
        <function-ref name="toggle" scoped="" ref="0x40a2e838"/>
        <function-ref name="isOutput" scoped="" ref="0x40a2e918"/>
        <function-ref name="get" scoped="" ref="0x40a2e9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a2ead8"/>
        <function-ref name="set" scoped="" ref="0x40a2ebb8"/>
        <function-ref name="clr" scoped="" ref="0x40a2ec98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40a30050" loc="79:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40a30050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a30228"/>
        <function-ref name="isInput" scoped="" ref="0x40a30308"/>
        <function-ref name="toggle" scoped="" ref="0x40a303e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a304c8"/>
        <function-ref name="get" scoped="" ref="0x40a305a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a30688"/>
        <function-ref name="set" scoped="" ref="0x40a30768"/>
        <function-ref name="clr" scoped="" ref="0x40a30848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40a2f658" loc="78:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40a2f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a2f830"/>
        <function-ref name="isInput" scoped="" ref="0x40a2f910"/>
        <function-ref name="toggle" scoped="" ref="0x40a2f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a2fad0"/>
        <function-ref name="get" scoped="" ref="0x40a2fbb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a2fc90"/>
        <function-ref name="set" scoped="" ref="0x40a2fd70"/>
        <function-ref name="clr" scoped="" ref="0x40a2fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a2f198" loc="75:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a2f198"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a2f370"/>
        <function-ref name="stop" scoped="" ref="0x40a2f450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40a2eea0" loc="82:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40a2eea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a2d0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40a367d8" loc="74:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40a367d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a369b0"/>
        <function-ref name="sleep" scoped="" ref="0x40a33db0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a36b70"/>
        <function-ref name="dataReady" scoped="" ref="0x40a33e90"/>
        <function-ref name="initMaster" scoped="" ref="0x40a36d30"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a36e10"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a36ef0"/>
        <function-ref name="read" scoped="" ref="0x40a33010"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a330f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a331d0"/>
        <function-ref name="setClock" scoped="" ref="0x40a332b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a33390"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a33470"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a335d0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a336b0"/>
        <function-ref name="write" scoped="" ref="0x40a33790"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a33870"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a33950"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a33a30"/>
        <function-ref name="getClock" scoped="" ref="0x40a33b10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a33bf0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a36a90"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a36c50"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a33cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40a30a38" loc="80:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40a30a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a30c10"/>
        <function-ref name="isInput" scoped="" ref="0x40a30cf0"/>
        <function-ref name="toggle" scoped="" ref="0x40a30dd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a30eb0"/>
        <function-ref name="get" scoped="" ref="0x40a2e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a2e0f0"/>
        <function-ref name="set" scoped="" ref="0x40a2e1d0"/>
        <function-ref name="clr" scoped="" ref="0x40a2e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40a6b490" loc="86:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40a6b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40a6b678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a6b758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40a6bd48" loc="89:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40a6bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40a9c010"/>
        <function-ref name="configure" scoped="" ref="0x40a9c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a4ad40" loc="85:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a4ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a4af28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a6b018"/>
        <function-ref name="request" scoped="" ref="0x40a6b0f8"/>
        <function-ref name="granted" scoped="" ref="0x40a6b1d8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a6b2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40a6b898" loc="87:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a6b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a6ba70"/>
        <function-ref name="userId" scoped="" ref="0x40a6bb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4158b430" loc="44:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4158b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4158b608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4158b768" loc="45:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4158b768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4158b940"/>
        <function-ref name="isEmpty" scoped="" ref="0x4158ba20"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4158bb00"/>
        <function-ref name="dequeue" scoped="" ref="0x4158bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4158aea0" loc="52:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4158aea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x415890c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x415891a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x415897a0" loc="56:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x415897a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41589988"/>
        <function-ref name="configure" scoped="" ref="0x41589a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41589bc8" loc="57:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41589bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41589da0"/>
        <function-ref name="isEmpty" scoped="" ref="0x41589e80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41588010"/>
        <function-ref name="dequeue" scoped="" ref="0x415880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4158a760" loc="51:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4158a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4158a948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4158aa28"/>
        <function-ref name="request" scoped="" ref="0x4158ab08"/>
        <function-ref name="granted" scoped="" ref="0x4158abe8"/>
        <function-ref name="isOwner" scoped="" ref="0x4158acc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x415892e0" loc="53:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x415892e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x415894b8"/>
        <function-ref name="userId" scoped="" ref="0x41589598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41588270" loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41588270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41588448"/>
        <function-ref name="runTask" scoped="" ref="0x41588528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40a96488" loc="45:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40a96488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a96660"/>
        <function-ref name="isInput" scoped="" ref="0x40a96740"/>
        <function-ref name="toggle" scoped="" ref="0x40a96820"/>
        <function-ref name="isOutput" scoped="" ref="0x40a96900"/>
        <function-ref name="get" scoped="" ref="0x40a969e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a96ac0"/>
        <function-ref name="set" scoped="" ref="0x40a96ba0"/>
        <function-ref name="clr" scoped="" ref="0x40a96c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a99568" loc="40:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a99568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a99740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a99820"/>
        <function-ref name="request" scoped="" ref="0x40a99900"/>
        <function-ref name="granted" scoped="" ref="0x40a999e0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a99ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40a99d28" loc="44:/opt/tinyos/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40a99d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a99f00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a96010"/>
        <function-ref name="request" scoped="" ref="0x40a960f0"/>
        <function-ref name="granted" scoped="" ref="0x40a961d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40acd5c8" loc="69:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40acd5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acd8a0"/>
        <function-ref name="write" scoped="" ref="0x40acd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40ad3920" loc="47:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40ad3920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad3af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40ad0af8" loc="63:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40ad0af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad0cd0"/>
        <function-ref name="write" scoped="" ref="0x40ad0db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40acc448" loc="72:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40acc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acc620"/>
        <function-ref name="write" scoped="" ref="0x40acc700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40acc880" loc="73:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40acc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acca58"/>
        <function-ref name="write" scoped="" ref="0x40accb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40ac6b20" loc="94:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40ac6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac6cf8"/>
        <function-ref name="write" scoped="" ref="0x40ac6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40ac7a00" loc="90:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40ac7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac7bd8"/>
        <function-ref name="write" scoped="" ref="0x40ac7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40ad2368" loc="50:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40ad2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad2540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40ac7190" loc="88:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40ac7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac7368"/>
        <function-ref name="write" scoped="" ref="0x40ac7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40ace448" loc="65:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40ace448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ace620"/>
        <function-ref name="write" scoped="" ref="0x40ace700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40acecb8" loc="67:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40acecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acee90"/>
        <function-ref name="write" scoped="" ref="0x40acd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40aca2b0" loc="79:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40aca2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aca488"/>
        <function-ref name="write" scoped="" ref="0x40aca568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40acccb8" loc="74:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40acccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acce90"/>
        <function-ref name="write" scoped="" ref="0x40acb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40ad4c78" loc="42:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40ad4e50"/>
        <function-ref name="abortRelease" scoped="" ref="0x40ad3010"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40ad30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40ad1190" loc="54:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40ad1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad1368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40ad14e8" loc="55:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40ad14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40ad18c0" loc="56:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40ad18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad1a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40ac75c8" loc="89:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40ac75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac77a0"/>
        <function-ref name="write" scoped="" ref="0x40ac7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40ad2a18" loc="52:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40ad2a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40ace880" loc="66:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40ace880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acea58"/>
        <function-ref name="write" scoped="" ref="0x40aceb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40ace010" loc="64:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40ace010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ace1e8"/>
        <function-ref name="write" scoped="" ref="0x40ace2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40ad35c8" loc="46:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40ad35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40ac66e8" loc="93:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40ac66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac68c0"/>
        <function-ref name="write" scoped="" ref="0x40ac69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40ac7e38" loc="91:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40ac7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac6050"/>
        <function-ref name="write" scoped="" ref="0x40ac6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40aca6e8" loc="80:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40aca6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aca8c0"/>
        <function-ref name="write" scoped="" ref="0x40aca9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40ac8cb8" loc="87:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40ac8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac8e90"/>
        <function-ref name="write" scoped="" ref="0x40ac7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40acb5c8" loc="76:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40acb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acb7a0"/>
        <function-ref name="write" scoped="" ref="0x40acb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40ac5010" loc="97:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40ac5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40ac53e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40ac54c8"/>
        <function-ref name="write" scoped="" ref="0x40ac55a8"/>
        <function-ref name="beginRead" scoped="" ref="0x40ac5688"/>
        <function-ref name="readDone" scoped="" ref="0x40ac5768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40ad3270" loc="45:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40ad3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40ad06c0" loc="62:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40ad06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad0898"/>
        <function-ref name="write" scoped="" ref="0x40ad0978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40acd190" loc="68:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40acd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acd368"/>
        <function-ref name="write" scoped="" ref="0x40acd448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40acb190" loc="75:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40acb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acb368"/>
        <function-ref name="write" scoped="" ref="0x40acb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40acdb00" loc="70:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40acdb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acdcd8"/>
        <function-ref name="write" scoped="" ref="0x40acddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40ad3c78" loc="48:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40ad3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad3e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40acc010" loc="71:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40acc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acc1e8"/>
        <function-ref name="write" scoped="" ref="0x40acc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad45c0" loc="41:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad4798"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad4878"/>
        <function-ref name="request" scoped="" ref="0x40ad4958"/>
        <function-ref name="granted" scoped="" ref="0x40ad4a38"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40ad1c18" loc="57:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40ad1c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40ad0368" loc="59:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40ad0368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad0540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40ac8880" loc="86:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40ac8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac8a58"/>
        <function-ref name="write" scoped="" ref="0x40ac8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40ac8448" loc="85:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40ac8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac8620"/>
        <function-ref name="write" scoped="" ref="0x40ac8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40ad2d70" loc="53:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40ad2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40ac8010" loc="82:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40ac8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac81e8"/>
        <function-ref name="write" scoped="" ref="0x40ac82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40ac62b0" loc="92:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40ac62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac6488"/>
        <function-ref name="write" scoped="" ref="0x40ac6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40acab20" loc="81:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40acab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acacf8"/>
        <function-ref name="write" scoped="" ref="0x40acadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40ad2010" loc="49:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40ad2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40acbe38" loc="78:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40acbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aca050"/>
        <function-ref name="write" scoped="" ref="0x40aca130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40ad26c0" loc="51:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40ad26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40acba00" loc="77:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40acba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40acbbd8"/>
        <function-ref name="write" scoped="" ref="0x40acbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40ad0010" loc="58:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40ad0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ad01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40ac58e8" loc="98:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40ac58e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40ac5ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x40ac5ba0"/>
        <function-ref name="write" scoped="" ref="0x40ac5c80"/>
        <function-ref name="beginRead" scoped="" ref="0x40ac5d60"/>
        <function-ref name="readDone" scoped="" ref="0x40ac5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40adfe38" loc="69:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40adfe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ade208"/>
        <function-ref name="write" scoped="" ref="0x40ade2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40ae4368" loc="47:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40ae4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae4540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40ae04b8" loc="63:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40ae04b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae0690"/>
        <function-ref name="write" scoped="" ref="0x40ae0770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40adecd8" loc="72:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40adecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adeeb0"/>
        <function-ref name="write" scoped="" ref="0x40adc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40adc190" loc="73:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40adc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adc368"/>
        <function-ref name="write" scoped="" ref="0x40adc448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40ad6448" loc="94:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40ad6448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad6620"/>
        <function-ref name="write" scoped="" ref="0x40ad6700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40ad82b0" loc="90:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40ad82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad8488"/>
        <function-ref name="write" scoped="" ref="0x40ad8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40ae4d70" loc="50:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40ae4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40ad9a00" loc="88:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40ad9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad9bd8"/>
        <function-ref name="write" scoped="" ref="0x40ad9cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40ae0d28" loc="65:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40ae0d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae0f00"/>
        <function-ref name="write" scoped="" ref="0x40adf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40adf5c8" loc="67:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40adf5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adf7a0"/>
        <function-ref name="write" scoped="" ref="0x40adf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40adbb20" loc="79:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40adbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adbcf8"/>
        <function-ref name="write" scoped="" ref="0x40adbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40adc5c8" loc="74:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40adc5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adc7a0"/>
        <function-ref name="write" scoped="" ref="0x40adc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40ae56c8" loc="42:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40ae56c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40ae58a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x40ae5980"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40ae5a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40ae2b98" loc="54:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40ae2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40ae2ef0" loc="55:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40ae2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae1188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40ae1308" loc="56:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40ae1308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40ad9e38" loc="89:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40ad9e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad8050"/>
        <function-ref name="write" scoped="" ref="0x40ad8130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40ae24e8" loc="52:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40ae24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40adf190" loc="66:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40adf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adf368"/>
        <function-ref name="write" scoped="" ref="0x40adf448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40ae08f0" loc="64:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40ae08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae0ac8"/>
        <function-ref name="write" scoped="" ref="0x40ae0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40ae4010" loc="46:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40ae4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40ad6010" loc="93:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40ad6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad61e8"/>
        <function-ref name="write" scoped="" ref="0x40ad62c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40ad86e8" loc="91:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40ad86e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad88c0"/>
        <function-ref name="write" scoped="" ref="0x40ad89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40ada010" loc="80:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40ada010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ada1e8"/>
        <function-ref name="write" scoped="" ref="0x40ada2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40ad95c8" loc="87:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40ad95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad97a0"/>
        <function-ref name="write" scoped="" ref="0x40ad9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40adce38" loc="76:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40adce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adb050"/>
        <function-ref name="write" scoped="" ref="0x40adb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40ad6880" loc="97:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40ad6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40ad6c58"/>
        <function-ref name="writeDone" scoped="" ref="0x40ad6d38"/>
        <function-ref name="write" scoped="" ref="0x40ad6e18"/>
        <function-ref name="beginRead" scoped="" ref="0x40ad6ef8"/>
        <function-ref name="readDone" scoped="" ref="0x40ad5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40ae5be0" loc="45:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40ae5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae5db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40ae0080" loc="62:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40ae0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae0258"/>
        <function-ref name="write" scoped="" ref="0x40ae0338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40adfa00" loc="68:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40adfa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adfbd8"/>
        <function-ref name="write" scoped="" ref="0x40adfcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40adca00" loc="75:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40adca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adcbd8"/>
        <function-ref name="write" scoped="" ref="0x40adccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40ade468" loc="70:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40ade468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ade640"/>
        <function-ref name="write" scoped="" ref="0x40ade720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40ae46c0" loc="48:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40ae46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40ade8a0" loc="71:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40ade8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adea78"/>
        <function-ref name="write" scoped="" ref="0x40adeb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ae5010" loc="41:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ae5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ae51e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ae52c8"/>
        <function-ref name="request" scoped="" ref="0x40ae53a8"/>
        <function-ref name="granted" scoped="" ref="0x40ae5488"/>
        <function-ref name="isOwner" scoped="" ref="0x40ae5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40ae1660" loc="57:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40ae1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae1838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40ae1d10" loc="59:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40ae1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae1ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40ad9190" loc="86:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40ad9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad9368"/>
        <function-ref name="write" scoped="" ref="0x40ad9448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40adacb8" loc="85:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40adacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adae90"/>
        <function-ref name="write" scoped="" ref="0x40ad9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40ae2840" loc="53:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40ae2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40ada880" loc="82:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40ada880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adaa58"/>
        <function-ref name="write" scoped="" ref="0x40adab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40ad8b20" loc="92:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40ad8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ad8cf8"/>
        <function-ref name="write" scoped="" ref="0x40ad8dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40ada448" loc="81:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40ada448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ada620"/>
        <function-ref name="write" scoped="" ref="0x40ada700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40ae4a18" loc="49:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40ae4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40adb6e8" loc="78:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40adb6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adb8c0"/>
        <function-ref name="write" scoped="" ref="0x40adb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40ae2190" loc="51:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40ae2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40adb2b0" loc="77:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40adb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40adb488"/>
        <function-ref name="write" scoped="" ref="0x40adb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40ae19b8" loc="58:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40ae19b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40ae1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40ad5190" loc="98:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40ad5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40ad5368"/>
        <function-ref name="writeDone" scoped="" ref="0x40ad5448"/>
        <function-ref name="write" scoped="" ref="0x40ad5528"/>
        <function-ref name="beginRead" scoped="" ref="0x40ad5608"/>
        <function-ref name="readDone" scoped="" ref="0x40ad56e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40af6960" loc="54:/opt/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40af6960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40af6b38"/>
        <function-ref name="changed" scoped="" ref="0x40af6c18"/>
        <function-ref name="amGroup" scoped="" ref="0x40af6cf8"/>
        <function-ref name="setAddress" scoped="" ref="0x40af6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x40af5240" loc="40:/opt/tinyos/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40af5240"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40af5418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40b05808" loc="46:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40b05808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40b059e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40b05ac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40b05ba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40b05c80"/>
        <function-ref name="setCca" scoped="" ref="0x40b05d60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40b05e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40b048d8" loc="47:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40b048d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b04ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x40b050f0" loc="45:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40b050f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b052c8"/>
        <function-ref name="cancel" scoped="" ref="0x40b053a8"/>
        <function-ref name="modify" scoped="" ref="0x40b05488"/>
        <function-ref name="sendDone" scoped="" ref="0x40b05568"/>
        <function-ref name="resend" scoped="" ref="0x40b05648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b08c08" loc="44:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b08c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b08de0"/>
        <function-ref name="stop" scoped="" ref="0x40b08ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40b04d40" loc="48:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40b04d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b04f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40b13490" loc="51:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40b13490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40b13668"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40b13748"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40b13828"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40b13908"/>
        <function-ref name="setCca" scoped="" ref="0x40b139e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40b13ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40b0e2b0" loc="58:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b0e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b0edb0"/>
        <function-ref name="clear" scoped="" ref="0x40b0d170"/>
        <function-ref name="isValid" scoped="" ref="0x40b0ea00"/>
        <function-ref name="set" scoped="" ref="0x40b0d520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40b27d70" loc="78:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b27d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b26010"/>
        <function-ref name="write" scoped="" ref="0x40b260f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40b26300" loc="79:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40b26300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b264d8"/>
        <function-ref name="write" scoped="" ref="0x40b265b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40b13d88" loc="52:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40b13d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b12010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40b28598" loc="72:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b28598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b28770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40b2a840" loc="60:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40b2a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40b2aa18"/>
        <function-ref name="disable" scoped="" ref="0x40b2aaf8"/>
        <function-ref name="captured" scoped="" ref="0x40b2abd8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40b2acb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40b12888" loc="55:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40b12888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b10d58"/>
        <function-ref name="fired" scoped="" ref="0x40b10528"/>
        <function-ref name="startAt" scoped="" ref="0x40b10a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40b107a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b0f010"/>
        <function-ref name="start" scoped="" ref="0x40b10010"/>
        <function-ref name="stop" scoped="" ref="0x40b102b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40b0f2c0" loc="56:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40b0f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40b0f498"/>
        <function-ref name="setNetwork" scoped="" ref="0x40b0f578"/>
        <function-ref name="getRssi" scoped="" ref="0x40b0f658"/>
        <function-ref name="getNetwork" scoped="" ref="0x40b0f738"/>
        <function-ref name="getPower" scoped="" ref="0x40b0f818"/>
        <function-ref name="getLqi" scoped="" ref="0x40b0f8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40b29338" loc="68:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b29338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b29510"/>
        <function-ref name="write" scoped="" ref="0x40b295f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40b29840" loc="69:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b29840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b29a18"/>
        <function-ref name="write" scoped="" ref="0x40b29af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40b21a60" loc="83:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40b21a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b21c38"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40b21d18"/>
        <function-ref name="sfd" scoped="" ref="0x40b21df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b14cd8" loc="50:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b14cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b14eb0"/>
        <function-ref name="cancel" scoped="" ref="0x40b13010"/>
        <function-ref name="modify" scoped="" ref="0x40b130f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b131d0"/>
        <function-ref name="resend" scoped="" ref="0x40b132b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40b2c588" loc="66:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b2c588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b2c760"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b2c840"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b2c920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40b289c8" loc="73:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b289c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b28ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40b0b9a8" loc="62:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40b0b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b0bb80"/>
        <function-ref name="isInput" scoped="" ref="0x40b0bc60"/>
        <function-ref name="toggle" scoped="" ref="0x40b0bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x40b0be20"/>
        <function-ref name="get" scoped="" ref="0x40b0bf00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b2f010"/>
        <function-ref name="set" scoped="" ref="0x40b2f0f0"/>
        <function-ref name="clr" scoped="" ref="0x40b2f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b14440" loc="48:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b14440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b14618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40b0fb00" loc="57:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b0fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40b0fcd8"/>
        <function-ref name="getHeader" scoped="" ref="0x40b0fdb8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40b0fe98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40b2a170" loc="59:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40b2a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b2a348"/>
        <function-ref name="isSet" scoped="" ref="0x40b2a428"/>
        <function-ref name="cancel" scoped="" ref="0x40b2a508"/>
        <function-ref name="set" scoped="" ref="0x40b2a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40b28e08" loc="74:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b28e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b270f0"/>
        <function-ref name="write" scoped="" ref="0x40b271d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40b2fe10" loc="65:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40b2fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b2c010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b2c0f0"/>
        <function-ref name="request" scoped="" ref="0x40b2c1d0"/>
        <function-ref name="granted" scoped="" ref="0x40b2c2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b2c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40b2aeb8" loc="61:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40b2aeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b0b188"/>
        <function-ref name="isInput" scoped="" ref="0x40b0b268"/>
        <function-ref name="toggle" scoped="" ref="0x40b0b348"/>
        <function-ref name="isOutput" scoped="" ref="0x40b0b428"/>
        <function-ref name="get" scoped="" ref="0x40b0b508"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b0b5e8"/>
        <function-ref name="set" scoped="" ref="0x40b0b6c8"/>
        <function-ref name="clr" scoped="" ref="0x40b0b7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40b267c8" loc="80:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40b267c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b269a0"/>
        <function-ref name="write" scoped="" ref="0x40b26a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x40b26ca8" loc="81:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40b26ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b26e80"/>
        <function-ref name="write" scoped="" ref="0x40b25010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40b29d28" loc="70:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b29d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b29f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40b2f3d0" loc="63:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40b2f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b2f5a8"/>
        <function-ref name="isInput" scoped="" ref="0x40b2f688"/>
        <function-ref name="toggle" scoped="" ref="0x40b2f768"/>
        <function-ref name="isOutput" scoped="" ref="0x40b2f848"/>
        <function-ref name="get" scoped="" ref="0x40b2f928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b2fa08"/>
        <function-ref name="set" scoped="" ref="0x40b2fae8"/>
        <function-ref name="clr" scoped="" ref="0x40b2fbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b24010" loc="84:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b24010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b241e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b242c8"/>
        <function-ref name="led1On" scoped="" ref="0x40b243a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b24488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b24568"/>
        <function-ref name="get" scoped="" ref="0x40b24648"/>
        <function-ref name="led1Off" scoped="" ref="0x40b24728"/>
        <function-ref name="led2Off" scoped="" ref="0x40b24aa8"/>
        <function-ref name="set" scoped="" ref="0x40b24808"/>
        <function-ref name="led0On" scoped="" ref="0x40b248e8"/>
        <function-ref name="led2On" scoped="" ref="0x40b249c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40b27850" loc="77:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b27850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b27a28"/>
        <function-ref name="write" scoped="" ref="0x40b27b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b147e0" loc="49:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b147e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b149b8"/>
        <function-ref name="stop" scoped="" ref="0x40b14a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40b2cb48" loc="67:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b2cb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b2cd20"/>
        <function-ref name="writeDone" scoped="" ref="0x40b2ce00"/>
        <function-ref name="write" scoped="" ref="0x40b2cee0"/>
        <function-ref name="beginRead" scoped="" ref="0x40b29010"/>
        <function-ref name="readDone" scoped="" ref="0x40b290f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40b28168" loc="71:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b28168"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b28340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x40b27410" loc="76:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b27410"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b275e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40b122c0" loc="53:/opt/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40b122c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b12498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40b87880" loc="69:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40b87880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b87b58"/>
        <function-ref name="write" scoped="" ref="0x40b87c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b8dbf8" loc="47:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b8dbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40b8ae50" loc="63:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40b8ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b89050"/>
        <function-ref name="write" scoped="" ref="0x40b89130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40b866a8" loc="72:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b866a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b86880"/>
        <function-ref name="write" scoped="" ref="0x40b86960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40b86ae0" loc="73:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40b86ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b86cb8"/>
        <function-ref name="write" scoped="" ref="0x40b86d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40b80cb8" loc="94:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40b80cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b80e90"/>
        <function-ref name="write" scoped="" ref="0x40b7f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40b81b20" loc="90:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40b81b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b81cf8"/>
        <function-ref name="write" scoped="" ref="0x40b81dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b8c6c0" loc="50:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b8c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b812b0" loc="88:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b812b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b81488"/>
        <function-ref name="write" scoped="" ref="0x40b81568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40b896e8" loc="65:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40b896e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b898c0"/>
        <function-ref name="write" scoped="" ref="0x40b899a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40b87010" loc="67:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b87010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b871e8"/>
        <function-ref name="write" scoped="" ref="0x40b872c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40b84468" loc="79:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40b84468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b84640"/>
        <function-ref name="write" scoped="" ref="0x40b84720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40b86f18" loc="74:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40b86f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b85108"/>
        <function-ref name="write" scoped="" ref="0x40b851e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b8d030" loc="42:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b8d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b8d208"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b8d2e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b8d3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b8b4e8" loc="54:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b8b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b8b840" loc="55:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b8b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b8bc18" loc="56:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b8bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40b816e8" loc="89:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b816e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b818c0"/>
        <function-ref name="write" scoped="" ref="0x40b819a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b8cd70" loc="52:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b8cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40b89b20" loc="66:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40b89b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b89cf8"/>
        <function-ref name="write" scoped="" ref="0x40b89dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40b892b0" loc="64:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b892b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b89488"/>
        <function-ref name="write" scoped="" ref="0x40b89568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b8d8a0" loc="46:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b8d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8da78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40b80880" loc="93:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40b80880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b80a58"/>
        <function-ref name="write" scoped="" ref="0x40b80b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40b80010" loc="91:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40b80010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b801e8"/>
        <function-ref name="write" scoped="" ref="0x40b802c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40b848a0" loc="80:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40b848a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b84a78"/>
        <function-ref name="write" scoped="" ref="0x40b84b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40b83e38" loc="87:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40b83e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b81050"/>
        <function-ref name="write" scoped="" ref="0x40b81130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40b857a0" loc="76:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40b857a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b85978"/>
        <function-ref name="write" scoped="" ref="0x40b85a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b7f190" loc="97:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b7f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b7f568"/>
        <function-ref name="writeDone" scoped="" ref="0x40b7f648"/>
        <function-ref name="write" scoped="" ref="0x40b7f728"/>
        <function-ref name="beginRead" scoped="" ref="0x40b7f808"/>
        <function-ref name="readDone" scoped="" ref="0x40b7f8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b8d548" loc="45:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b8d548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40b8aa18" loc="62:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40b8aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b8abf0"/>
        <function-ref name="write" scoped="" ref="0x40b8acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40b87448" loc="68:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40b87448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b87620"/>
        <function-ref name="write" scoped="" ref="0x40b87700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40b85368" loc="75:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40b85368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b85540"/>
        <function-ref name="write" scoped="" ref="0x40b85620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40b87db8" loc="70:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40b87db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b86010"/>
        <function-ref name="write" scoped="" ref="0x40b860f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b8c010" loc="48:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b8c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40b86270" loc="71:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b86270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b86448"/>
        <function-ref name="write" scoped="" ref="0x40b86528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b69950" loc="41:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b69950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b69b28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b69c08"/>
        <function-ref name="request" scoped="" ref="0x40b69ce8"/>
        <function-ref name="granted" scoped="" ref="0x40b69dc8"/>
        <function-ref name="isOwner" scoped="" ref="0x40b69ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b8a010" loc="57:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b8a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40b8a6c0" loc="59:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40b8a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40b83a00" loc="86:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40b83a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b83bd8"/>
        <function-ref name="write" scoped="" ref="0x40b83cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40b835c8" loc="85:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40b835c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b837a0"/>
        <function-ref name="write" scoped="" ref="0x40b83880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b8b190" loc="53:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b8b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8b368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40b83190" loc="82:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b83190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b83368"/>
        <function-ref name="write" scoped="" ref="0x40b83448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40b80448" loc="92:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40b80448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b80620"/>
        <function-ref name="write" scoped="" ref="0x40b80700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40b84cd8" loc="81:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40b84cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b84eb0"/>
        <function-ref name="write" scoped="" ref="0x40b83010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b8c368" loc="49:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b8c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40b84030" loc="78:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40b84030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b84208"/>
        <function-ref name="write" scoped="" ref="0x40b842e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b8ca18" loc="51:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b8ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40b85bd8" loc="77:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40b85bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b85db0"/>
        <function-ref name="write" scoped="" ref="0x40b85e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b8a368" loc="58:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b8a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8a540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b7fa68" loc="98:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b7fa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b7fc40"/>
        <function-ref name="writeDone" scoped="" ref="0x40b7fd20"/>
        <function-ref name="write" scoped="" ref="0x40b7fe00"/>
        <function-ref name="beginRead" scoped="" ref="0x40b7fee0"/>
        <function-ref name="readDone" scoped="" ref="0x40b7e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40b9fcd0" loc="42:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40b9fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b9fea8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40b9c010"/>
        <function-ref name="sfd" scoped="" ref="0x40b9c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b9c298" loc="43:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b9c298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b9c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40b9c730" loc="44:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40b9c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b9c908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b9f830" loc="41:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b9f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b9fa08"/>
        <function-ref name="stop" scoped="" ref="0x40b9fae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40b974c0" loc="54:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40b974c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b97698"/>
        <function-ref name="isInput" scoped="" ref="0x40b97778"/>
        <function-ref name="toggle" scoped="" ref="0x40b97858"/>
        <function-ref name="isOutput" scoped="" ref="0x40b97938"/>
        <function-ref name="get" scoped="" ref="0x40b97a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b97af8"/>
        <function-ref name="set" scoped="" ref="0x40b97bd8"/>
        <function-ref name="clr" scoped="" ref="0x40b97cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40b92680" loc="64:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40b92680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40b92858"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40b92938"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40b92a18"/>
        <function-ref name="syncDone" scoped="" ref="0x40b92af8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40b92bd8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40b92cb8"/>
        <function-ref name="setChannel" scoped="" ref="0x40b92d98"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40b92e78"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40b91010"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40b910f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40b911d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40b912b0"/>
        <function-ref name="sync" scoped="" ref="0x40b91390"/>
        <function-ref name="getChannel" scoped="" ref="0x40b914f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40b915d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40badb88" loc="148:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40badb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40badd60"/>
        <function-ref name="runTask" scoped="" ref="0x40bade40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40b91980" loc="65:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b91980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b904a8"/>
        <function-ref name="clear" scoped="" ref="0x40b90858"/>
        <function-ref name="isValid" scoped="" ref="0x40b900f8"/>
        <function-ref name="set" scoped="" ref="0x40b90c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40b97ed0" loc="55:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40b97ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b960c0"/>
        <function-ref name="isInput" scoped="" ref="0x40b961a0"/>
        <function-ref name="toggle" scoped="" ref="0x40b96280"/>
        <function-ref name="isOutput" scoped="" ref="0x40b96360"/>
        <function-ref name="get" scoped="" ref="0x40b96440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b96520"/>
        <function-ref name="set" scoped="" ref="0x40b96600"/>
        <function-ref name="clr" scoped="" ref="0x40b966e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40b8faa0" loc="69:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b8faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b8fc78"/>
        <function-ref name="write" scoped="" ref="0x40b8fd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40bb5010" loc="70:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40bb5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb51e8"/>
        <function-ref name="write" scoped="" ref="0x40bb52c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x40bb59b8" loc="72:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40bb59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb5b90"/>
        <function-ref name="write" scoped="" ref="0x40bb5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40b93878" loc="62:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40b93878"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40b93a50"/>
        <function-ref name="setNetwork" scoped="" ref="0x40b93b30"/>
        <function-ref name="getRssi" scoped="" ref="0x40b93c10"/>
        <function-ref name="getNetwork" scoped="" ref="0x40b93cf0"/>
        <function-ref name="getPower" scoped="" ref="0x40b93dd0"/>
        <function-ref name="getLqi" scoped="" ref="0x40b93eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40b99c70" loc="49:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40b99c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b99e48"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40b99f28"/>
        <function-ref name="sfd" scoped="" ref="0x40b98018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40b93010" loc="60:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b931e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40b98a30" loc="53:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40b98a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b98c08"/>
        <function-ref name="isInput" scoped="" ref="0x40b98ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40b98dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b98ea8"/>
        <function-ref name="get" scoped="" ref="0x40b97010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b970f0"/>
        <function-ref name="set" scoped="" ref="0x40b971d0"/>
        <function-ref name="clr" scoped="" ref="0x40b972b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x40bb5eb8" loc="73:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bb5eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb40c0"/>
        <function-ref name="write" scoped="" ref="0x40bb41a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b99430" loc="47:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b99430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b99608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40b92108" loc="63:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b92108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40b922e0"/>
        <function-ref name="getHeader" scoped="" ref="0x40b923c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40b924a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b981c0" loc="50:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b981c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b98398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40b950a0" loc="58:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40b950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b95278"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b95358"/>
        <function-ref name="request" scoped="" ref="0x40b95438"/>
        <function-ref name="granted" scoped="" ref="0x40b95518"/>
        <function-ref name="isOwner" scoped="" ref="0x40b955f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40bb54d8" loc="71:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40bb54d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb56b0"/>
        <function-ref name="write" scoped="" ref="0x40bb5790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40b95820" loc="59:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b95820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b959f8"/>
        <function-ref name="writeDone" scoped="" ref="0x40b95ad8"/>
        <function-ref name="write" scoped="" ref="0x40b95bb8"/>
        <function-ref name="beginRead" scoped="" ref="0x40b95c98"/>
        <function-ref name="readDone" scoped="" ref="0x40b95d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40bb43d0" loc="74:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40bb43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb46a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40b98658" loc="51:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40b98658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b98830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40bb4838" loc="76:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bb4838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bb4a10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bb4af0"/>
        <function-ref name="led1On" scoped="" ref="0x40bb4bd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bb4cb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bb4d90"/>
        <function-ref name="get" scoped="" ref="0x40bb4e70"/>
        <function-ref name="led1Off" scoped="" ref="0x40bb3010"/>
        <function-ref name="led2Off" scoped="" ref="0x40bb3390"/>
        <function-ref name="set" scoped="" ref="0x40bb30f0"/>
        <function-ref name="led0On" scoped="" ref="0x40bb31d0"/>
        <function-ref name="led2On" scoped="" ref="0x40bb32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40b8f580" loc="68:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b8f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b8f758"/>
        <function-ref name="write" scoped="" ref="0x40b8f838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x40b8f140" loc="67:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b8f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b8f318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40b96978" loc="56:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40b96978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b96b50"/>
        <function-ref name="disable" scoped="" ref="0x40b96c30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40b96d10"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40b96df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40b93440" loc="61:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b93440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b93698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b997d0" loc="48:/opt/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b997d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b999a8"/>
        <function-ref name="stop" scoped="" ref="0x40b99a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40bec2e8" loc="44:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40bec2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40bec4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40bf1eb8" loc="41:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40bf1eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40bed0c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x40bed1a0"/>
        <function-ref name="getRssi" scoped="" ref="0x40bed280"/>
        <function-ref name="getNetwork" scoped="" ref="0x40bed360"/>
        <function-ref name="getPower" scoped="" ref="0x40bed440"/>
        <function-ref name="getLqi" scoped="" ref="0x40bed520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40bec940" loc="46:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40bec940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40beb458"/>
        <function-ref name="clear" scoped="" ref="0x40beb808"/>
        <function-ref name="isValid" scoped="" ref="0x40beb0a8"/>
        <function-ref name="set" scoped="" ref="0x40bebbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40bedd10" loc="43:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bedd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40bedee8"/>
        <function-ref name="getHeader" scoped="" ref="0x40bec010"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40be8a50" loc="48:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40be8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be8c28"/>
        <function-ref name="isSet" scoped="" ref="0x40be8d08"/>
        <function-ref name="cancel" scoped="" ref="0x40be8de8"/>
        <function-ref name="set" scoped="" ref="0x40be8ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40bea308" loc="47:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40bea308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40beae08"/>
        <function-ref name="clear" scoped="" ref="0x40be81d8"/>
        <function-ref name="isValid" scoped="" ref="0x40beaa58"/>
        <function-ref name="set" scoped="" ref="0x40be8588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40bed790" loc="42:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40bed790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bed968"/>
        <function-ref name="noAck" scoped="" ref="0x40beda48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bedb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40be4ca0" loc="49:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40be4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40be4e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40be7838" loc="46:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40be7838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40be7a10"/>
        <function-ref name="setNetwork" scoped="" ref="0x40be7af0"/>
        <function-ref name="getRssi" scoped="" ref="0x40be7bd0"/>
        <function-ref name="getNetwork" scoped="" ref="0x40be7cb0"/>
        <function-ref name="getPower" scoped="" ref="0x40be7d90"/>
        <function-ref name="getLqi" scoped="" ref="0x40be7e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40bdfb00" loc="56:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bdfb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bdfcd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bdfdb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bdfe98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bde010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bde0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40be33a0" loc="51:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40be33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40be3ea0"/>
        <function-ref name="clear" scoped="" ref="0x40be2280"/>
        <function-ref name="isValid" scoped="" ref="0x40be3af0"/>
        <function-ref name="set" scoped="" ref="0x40be2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40be4710" loc="48:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40be4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40be48e8"/>
        <function-ref name="getHeader" scoped="" ref="0x40be49c8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40be4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40bdf4d8" loc="53:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40bdf4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bdf6b0"/>
        <function-ref name="isSet" scoped="" ref="0x40bdf790"/>
        <function-ref name="cancel" scoped="" ref="0x40bdf870"/>
        <function-ref name="set" scoped="" ref="0x40bdf950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40bde430" loc="57:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40bde430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bdea78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40bdee88" loc="58:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40bdee88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c054f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40be2d68" loc="52:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40be2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40be0898"/>
        <function-ref name="clear" scoped="" ref="0x40be0c48"/>
        <function-ref name="isValid" scoped="" ref="0x40be04e8"/>
        <function-ref name="set" scoped="" ref="0x40bdf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40be4190" loc="47:/opt/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40be4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40be4368"/>
        <function-ref name="noAck" scoped="" ref="0x40be4448"/>
        <function-ref name="wasAcked" scoped="" ref="0x40be4528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40be5898" loc="48:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40be5898"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be5ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40c27248" loc="49:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c27248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b0288"/>
            <typename><typedef-ref name="T32khz" ref="0x403b0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c27998"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c27e88"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c27c10"/>
        <function-ref name="overflow" scoped="" ref="0x40c25110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c245a8" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c245a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c220d8"/>
        <function-ref name="fired" scoped="" ref="0x40c23368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c23a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c23818"/>
        <function-ref name="getdt" scoped="" ref="0x40c22588"/>
        <function-ref name="gett0" scoped="" ref="0x40c22330"/>
        <function-ref name="isRunning" scoped="" ref="0x40c235c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c24bd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c23d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c24e50"/>
        <function-ref name="stop" scoped="" ref="0x40c23110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40c1ae38" loc="69:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40c1ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c42208"/>
        <function-ref name="write" scoped="" ref="0x40c422e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40c1f3d8" loc="47:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40c1f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40c1c4b8" loc="63:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40c1c4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1c690"/>
        <function-ref name="write" scoped="" ref="0x40c1c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40c42cd8" loc="72:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40c42cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c42eb0"/>
        <function-ref name="write" scoped="" ref="0x40c41010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40c41190" loc="73:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40c41190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c41368"/>
        <function-ref name="write" scoped="" ref="0x40c41448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40c3b448" loc="94:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40c3b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3b620"/>
        <function-ref name="write" scoped="" ref="0x40c3b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40c3c2b0" loc="90:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40c3c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3c488"/>
        <function-ref name="write" scoped="" ref="0x40c3c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40c1fde0" loc="50:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40c1fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40c3ea00" loc="88:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c3ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3ebd8"/>
        <function-ref name="write" scoped="" ref="0x40c3ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40c1cd28" loc="65:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40c1cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1cf00"/>
        <function-ref name="write" scoped="" ref="0x40c1a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40c1a5c8" loc="67:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40c1a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1a7a0"/>
        <function-ref name="write" scoped="" ref="0x40c1a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40c40b20" loc="79:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40c40b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c40cf8"/>
        <function-ref name="write" scoped="" ref="0x40c40dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40c415c8" loc="74:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40c415c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c417a0"/>
        <function-ref name="write" scoped="" ref="0x40c41880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40c217f0" loc="42:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40c217f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40c219c8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40c21aa8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40c21b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40c1eb98" loc="54:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40c1eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40c1eef0" loc="55:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40c1eef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1d188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40c1d308" loc="56:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40c1d308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40c3ee38" loc="89:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c3ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3c050"/>
        <function-ref name="write" scoped="" ref="0x40c3c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40c1e4e8" loc="52:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40c1e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40c1a190" loc="66:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40c1a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1a368"/>
        <function-ref name="write" scoped="" ref="0x40c1a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40c1c8f0" loc="64:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40c1c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1cac8"/>
        <function-ref name="write" scoped="" ref="0x40c1cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40c1f080" loc="46:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40c1f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1f258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40c3b010" loc="93:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40c3b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3b1e8"/>
        <function-ref name="write" scoped="" ref="0x40c3b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40c3c6e8" loc="91:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40c3c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3c8c0"/>
        <function-ref name="write" scoped="" ref="0x40c3c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40c3f010" loc="80:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40c3f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3f1e8"/>
        <function-ref name="write" scoped="" ref="0x40c3f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40c3e5c8" loc="87:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40c3e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3e7a0"/>
        <function-ref name="write" scoped="" ref="0x40c3e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40c41e38" loc="76:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40c41e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c40050"/>
        <function-ref name="write" scoped="" ref="0x40c40130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40c3b880" loc="97:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40c3b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c3bc58"/>
        <function-ref name="writeDone" scoped="" ref="0x40c3bd38"/>
        <function-ref name="write" scoped="" ref="0x40c3be18"/>
        <function-ref name="beginRead" scoped="" ref="0x40c3bef8"/>
        <function-ref name="readDone" scoped="" ref="0x40c3a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40c21d08" loc="45:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40c21d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c21ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40c1c080" loc="62:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40c1c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1c258"/>
        <function-ref name="write" scoped="" ref="0x40c1c338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40c1aa00" loc="68:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40c1aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1abd8"/>
        <function-ref name="write" scoped="" ref="0x40c1acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40c41a00" loc="75:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40c41a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c41bd8"/>
        <function-ref name="write" scoped="" ref="0x40c41cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40c42468" loc="70:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40c42468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c42640"/>
        <function-ref name="write" scoped="" ref="0x40c42720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40c1f730" loc="48:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40c1f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40c428a0" loc="71:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40c428a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c42a78"/>
        <function-ref name="write" scoped="" ref="0x40c42b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c21138" loc="41:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c21138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c21310"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c213f0"/>
        <function-ref name="request" scoped="" ref="0x40c214d0"/>
        <function-ref name="granted" scoped="" ref="0x40c215b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c21690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40c1d660" loc="57:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40c1d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1d838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40c1dd10" loc="59:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40c1dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1dee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40c3e190" loc="86:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40c3e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3e368"/>
        <function-ref name="write" scoped="" ref="0x40c3e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40c3fcb8" loc="85:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40c3fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3fe90"/>
        <function-ref name="write" scoped="" ref="0x40c3e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40c1e840" loc="53:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40c1e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1ea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40c3f880" loc="82:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c3f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3fa58"/>
        <function-ref name="write" scoped="" ref="0x40c3fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40c3cb20" loc="92:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40c3cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3ccf8"/>
        <function-ref name="write" scoped="" ref="0x40c3cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40c3f448" loc="81:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40c3f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3f620"/>
        <function-ref name="write" scoped="" ref="0x40c3f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40c1fa88" loc="49:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40c1fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40c406e8" loc="78:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40c406e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c408c0"/>
        <function-ref name="write" scoped="" ref="0x40c409a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40c1e190" loc="51:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40c1e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40c402b0" loc="77:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40c402b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c40488"/>
        <function-ref name="write" scoped="" ref="0x40c40568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40c1d9b8" loc="58:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40c1d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c1db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40c3a190" loc="98:/opt/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40c3a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c3a368"/>
        <function-ref name="writeDone" scoped="" ref="0x40c3a448"/>
        <function-ref name="write" scoped="" ref="0x40c3a528"/>
        <function-ref name="beginRead" scoped="" ref="0x40c3a608"/>
        <function-ref name="readDone" scoped="" ref="0x40c3a6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40c4d978" loc="46:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c4d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c4db50"/>
        <function-ref name="rand32" scoped="" ref="0x40c4dc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40c4d0b8" loc="45:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40c4d0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c4d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c52e28" loc="44:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c52e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c4f050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40c49478" loc="48:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c49478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c49650"/>
        <function-ref name="rand32" scoped="" ref="0x40c49730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40c4cb08" loc="47:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40c4cb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c491e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c4c5e8" loc="46:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c4c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c4c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c51608" loc="67:/opt/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c51608"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c517e0"/>
        <function-ref name="toIdle" scoped="" ref="0x40c518c0"/>
        <function-ref name="isState" scoped="" ref="0x40c519a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40c51a80"/>
        <function-ref name="requestState" scoped="" ref="0x40c51b60"/>
        <function-ref name="forceState" scoped="" ref="0x40c51c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c6baf8" loc="44:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c6baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c6bcd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c6bdb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c6be90"/>
        <function-ref name="cancel" scoped="" ref="0x40c68010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c6b388" loc="40:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c6b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c6b560"/>
        <function-ref name="getPayload" scoped="" ref="0x40c6b640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c6b720"/>
        <function-ref name="cancel" scoped="" ref="0x40c6b800"/>
        <function-ref name="sendDone" scoped="" ref="0x40c6b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c65570" loc="45:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c65570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c65748"/>
        <function-ref name="getPayload" scoped="" ref="0x40c65828"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c65908"/>
        <function-ref name="cancel" scoped="" ref="0x40c659e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c65ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c68a18" loc="40:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c68a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c68bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c68cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c68db0"/>
        <function-ref name="cancel" scoped="" ref="0x40c68e90"/>
        <function-ref name="sendDone" scoped="" ref="0x40c65010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40c64430" loc="47:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c64430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c64608"/>
        <function-ref name="rand32" scoped="" ref="0x40c646e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c65180" loc="41:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c65180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c65358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c648d0" loc="48:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c648d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c64aa8"/>
        <function-ref name="getHeader" scoped="" ref="0x40c64b88"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c64c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40c65c40" loc="46:/opt/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c65c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c65e18"/>
        <function-ref name="toIdle" scoped="" ref="0x40c65ef8"/>
        <function-ref name="isState" scoped="" ref="0x40c64010"/>
        <function-ref name="isIdle" scoped="" ref="0x40c640f0"/>
        <function-ref name="requestState" scoped="" ref="0x40c641d0"/>
        <function-ref name="forceState" scoped="" ref="0x40c642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c67ab8" loc="67:/opt/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c67ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c67c90"/>
        <function-ref name="toIdle" scoped="" ref="0x40c67d70"/>
        <function-ref name="isState" scoped="" ref="0x40c67e50"/>
        <function-ref name="isIdle" scoped="" ref="0x40c66010"/>
        <function-ref name="requestState" scoped="" ref="0x40c660f0"/>
        <function-ref name="forceState" scoped="" ref="0x40c661d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c81b28" loc="47:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c81b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c81d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c812d8" loc="42:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c812d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c814b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40c81700" loc="43:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40c81700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c818d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c7d340" loc="49:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c7d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c7d518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c80f00" loc="45:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c80f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c7d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c80790" loc="43:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c80790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c80968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c7d700" loc="50:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c7d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c7d8d8"/>
        <function-ref name="getHeader" scoped="" ref="0x40c7d9b8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c7da98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40c80bb8" loc="44:/opt/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40c80bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c80d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c8e7b8" loc="75:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c8e7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c8eb68" loc="76:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c8eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c8ed40"/>
        <function-ref name="getPayload" scoped="" ref="0x40c8ee20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8ef00"/>
        <function-ref name="cancel" scoped="" ref="0x40c8d010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c8d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c909d0" loc="65:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c909d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c90ba8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c90c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c90d68"/>
        <function-ref name="cancel" scoped="" ref="0x40c90e48"/>
        <function-ref name="sendDone" scoped="" ref="0x40c90f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40c8f490" loc="68:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40c8f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c8f668"/>
        <function-ref name="getPayload" scoped="" ref="0x40c8f748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8f828"/>
        <function-ref name="cancel" scoped="" ref="0x40c8f908"/>
        <function-ref name="sendDone" scoped="" ref="0x40c8f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c8f0c0" loc="66:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c8f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8f298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c90308" loc="64:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c90308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c904e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c905c0"/>
        <function-ref name="request" scoped="" ref="0x40c906a0"/>
        <function-ref name="granted" scoped="" ref="0x40c90780"/>
        <function-ref name="isOwner" scoped="" ref="0x40c90860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40c8fc18" loc="69:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40c8fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40c8e010" loc="71:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40c8e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c8e1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c8e2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c8e3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8e488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c8e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c87cb0" loc="58:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c87cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c87e88"/>
        <function-ref name="getPayload" scoped="" ref="0x40c86010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c860f0"/>
        <function-ref name="cancel" scoped="" ref="0x40c861d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c862b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c864c0" loc="59:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c864c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c86698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x40cc0250" loc="180:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x40cc0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cc0428"/>
        <function-ref name="runTask" scoped="" ref="0x40cc0508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40c86858" loc="60:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c86858"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c86a30"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c86b10"/>
        <function-ref name="getRssi" scoped="" ref="0x40c86bf0"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c86cd0"/>
        <function-ref name="getPower" scoped="" ref="0x40c86db0"/>
        <function-ref name="getLqi" scoped="" ref="0x40c86e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40c889b8" loc="51:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40c889b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c88b90"/>
        <function-ref name="getPayload" scoped="" ref="0x40c88c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c88d50"/>
        <function-ref name="cancel" scoped="" ref="0x40c88e30"/>
        <function-ref name="sendDone" scoped="" ref="0x40c88f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40c856c0" loc="62:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40c856c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40c85898"/>
        <function-ref name="isEmpty" scoped="" ref="0x40c85978"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40c85a58"/>
        <function-ref name="dequeue" scoped="" ref="0x40c85b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c85108" loc="61:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c85108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c852e0"/>
        <function-ref name="getHeader" scoped="" ref="0x40c853c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c854a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40c885e8" loc="49:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40c885e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c887c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c89718" loc="46:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c89718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c898f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c899d0"/>
        <function-ref name="request" scoped="" ref="0x40c89ab0"/>
        <function-ref name="granted" scoped="" ref="0x40c89b90"/>
        <function-ref name="isOwner" scoped="" ref="0x40c89c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40c89e58" loc="48:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40c89e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c88050"/>
        <function-ref name="getPayload" scoped="" ref="0x40c88130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c88210"/>
        <function-ref name="cancel" scoped="" ref="0x40c882f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c883d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40c87160" loc="52:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40c87160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c87338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40c87540" loc="54:/opt/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40c87540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c87718"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c877f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c878d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c879b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c87a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c8a9f0" loc="44:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c8a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c8abc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40c8ad28" loc="45:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40c8ad28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40c8af00"/>
        <function-ref name="isEmpty" scoped="" ref="0x40caf010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40caf0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40caf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cd4568" loc="46:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cd4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cd4740"/>
        <function-ref name="stopDone" scoped="" ref="0x40cd4820"/>
        <function-ref name="start" scoped="" ref="0x40cd4900"/>
        <function-ref name="stop" scoped="" ref="0x40cd49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cd34c8" loc="51:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cd34c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cd36a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd3780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd3860"/>
        <function-ref name="cancel" scoped="" ref="0x40cd3940"/>
        <function-ref name="sendDone" scoped="" ref="0x40cd3a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cd3c30" loc="52:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cd3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cd3e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cd7468" loc="43:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cd7468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cd7640"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd7720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd7800"/>
        <function-ref name="cancel" scoped="" ref="0x40cd78e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cd79c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40cd7f10" loc="45:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40cd7f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40cd4108"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40cd41e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40cd42c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40cd43a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40cd4bd8" loc="47:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40cd4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cd4db0"/>
        <function-ref name="toIdle" scoped="" ref="0x40cd4e90"/>
        <function-ref name="isState" scoped="" ref="0x40cd3010"/>
        <function-ref name="isIdle" scoped="" ref="0x40cd30f0"/>
        <function-ref name="requestState" scoped="" ref="0x40cd31d0"/>
        <function-ref name="forceState" scoped="" ref="0x40cd32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40cd2098" loc="53:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40cd2098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cd2270"/>
        <function-ref name="stopDone" scoped="" ref="0x40cd2350"/>
        <function-ref name="start" scoped="" ref="0x40cd2430"/>
        <function-ref name="stop" scoped="" ref="0x40cd2510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cd7b48" loc="44:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cd7b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cd7d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40cd2ca8" loc="41:/opt/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40cd2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40cd2e80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40ccf010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40ccf0f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40ccf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40ccbd20" loc="67:/opt/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40ccbd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ccbef8"/>
        <function-ref name="toIdle" scoped="" ref="0x40cd1010"/>
        <function-ref name="isState" scoped="" ref="0x40cd10f0"/>
        <function-ref name="isIdle" scoped="" ref="0x40cd11d0"/>
        <function-ref name="requestState" scoped="" ref="0x40cd12b0"/>
        <function-ref name="forceState" scoped="" ref="0x40cd1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cc95e8" loc="45:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cc95e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc97c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40cc98a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cc9980"/>
        <function-ref name="cancel" scoped="" ref="0x40cc9a60"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc9b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cd6738" loc="40:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cd6738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cd6910"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd69f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd6ad0"/>
        <function-ref name="cancel" scoped="" ref="0x40cd6bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cd6c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40cd6e38" loc="41:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40cd6e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40cc9050"/>
        <function-ref name="setRetries" scoped="" ref="0x40cc9130"/>
        <function-ref name="getRetries" scoped="" ref="0x40cc9210"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40cc92f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40cc93d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40cc8a50" loc="44:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cc8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cc8c28"/>
        <function-ref name="noAck" scoped="" ref="0x40cc8d08"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cc8de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40cc8298" loc="40:/opt/tinyos/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40cc8298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40cc8470"/>
        <function-ref name="setRetries" scoped="" ref="0x40cc8550"/>
        <function-ref name="getRetries" scoped="" ref="0x40cc8630"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40cc8710"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40cc87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ce1220" loc="59:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ce1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ce13f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ce2a88" loc="58:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ce2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce2c60"/>
        <function-ref name="getPayload" scoped="" ref="0x40ce2d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce2e20"/>
        <function-ref name="cancel" scoped="" ref="0x40ce2f00"/>
        <function-ref name="sendDone" scoped="" ref="0x40ce1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40ce0390" loc="62:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40ce0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40ce0568"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40ce0648"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40ce0728"/>
        <function-ref name="syncDone" scoped="" ref="0x40ce0808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40ce08e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40ce09c8"/>
        <function-ref name="setChannel" scoped="" ref="0x40ce0aa8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40ce0b88"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40ce0c68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40ce0d48"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40ce0e28"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40ce0f08"/>
        <function-ref name="sync" scoped="" ref="0x40cdf010"/>
        <function-ref name="getChannel" scoped="" ref="0x40cdf170"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40cdf250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40ce2238" loc="54:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40ce2238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40ce2410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40ce24f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40ce25d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40ce26b0"/>
        <function-ref name="setCca" scoped="" ref="0x40ce2790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40ce2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40ce3b88" loc="53:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40ce3b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40ce3d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40cdfba0" loc="64:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40cdfba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40cdfd78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40cdfe58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40cde010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40cde0f0"/>
        <function-ref name="setCca" scoped="" ref="0x40cde1d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40cde2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ce3190" loc="52:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ce3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce3368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ce3448"/>
        <function-ref name="getPayload" scoped="" ref="0x40ce3528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce3608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ce36e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ce6100" loc="48:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ce6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce62d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ce63b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce6498"/>
        <function-ref name="cancel" scoped="" ref="0x40ce6578"/>
        <function-ref name="sendDone" scoped="" ref="0x40ce6658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40ce4178" loc="50:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40ce4178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ce4350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40ce15b8" loc="60:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40ce15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ce1790"/>
        <function-ref name="setNetwork" scoped="" ref="0x40ce1870"/>
        <function-ref name="getRssi" scoped="" ref="0x40ce1950"/>
        <function-ref name="getNetwork" scoped="" ref="0x40ce1a30"/>
        <function-ref name="getPower" scoped="" ref="0x40ce1b10"/>
        <function-ref name="getLqi" scoped="" ref="0x40ce1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40cdf460" loc="63:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40cdf460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40cdf6b8"/>
        <function-ref name="changed" scoped="" ref="0x40cdf798"/>
        <function-ref name="amGroup" scoped="" ref="0x40cdf878"/>
        <function-ref name="setAddress" scoped="" ref="0x40cdf958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40ce1dd8" loc="61:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ce1dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40ce0010"/>
        <function-ref name="getHeader" scoped="" ref="0x40ce00f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ce01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ce6ac0" loc="49:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ce6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ce6c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cdebb8" loc="67:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cdebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cded90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cdee70"/>
        <function-ref name="led1On" scoped="" ref="0x40cdd010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cdd0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cdd1d0"/>
        <function-ref name="get" scoped="" ref="0x40cdd2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40cdd390"/>
        <function-ref name="led2Off" scoped="" ref="0x40cdd710"/>
        <function-ref name="set" scoped="" ref="0x40cdd470"/>
        <function-ref name="led0On" scoped="" ref="0x40cdd550"/>
        <function-ref name="led2On" scoped="" ref="0x40cdd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ce44e8" loc="51:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ce44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ce46c0"/>
        <function-ref name="source" scoped="" ref="0x40ce47a0"/>
        <function-ref name="address" scoped="" ref="0x40ce4880"/>
        <function-ref name="destination" scoped="" ref="0x40ce4960"/>
        <function-ref name="setSource" scoped="" ref="0x40ce4a40"/>
        <function-ref name="setDestination" scoped="" ref="0x40ce4b20"/>
        <function-ref name="type" scoped="" ref="0x40ce4c00"/>
        <function-ref name="setType" scoped="" ref="0x40ce4ce0"/>
        <function-ref name="isForMe" scoped="" ref="0x40ce4dc0"/>
        <function-ref name="setGroup" scoped="" ref="0x40ce4ea0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ce3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x40cde4f0" loc="66:/opt/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x40cde4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cde6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cde7a8"/>
        <function-ref name="request" scoped="" ref="0x40cde888"/>
        <function-ref name="granted" scoped="" ref="0x40cde968"/>
        <function-ref name="isOwner" scoped="" ref="0x40cdea48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40df5240" loc="142:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40df5240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40df5418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40df44d0" loc="145:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40df44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40df46a8"/>
        <function-ref name="setRoot" scoped="" ref="0x40df4788"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40df4868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40dd37d8" loc="126:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40dd37d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dd39b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd3a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd3b70"/>
        <function-ref name="cancel" scoped="" ref="0x40dd3c50"/>
        <function-ref name="sendDone" scoped="" ref="0x40dd3d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40df2a88" loc="156:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40df2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40df2c60"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40df2d40"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40df2e20"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40df2f00"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40df1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40dd5ac8" loc="116:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40dd5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40dd5ca0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40dd5d80"/>
        <function-ref name="setType" scoped="" ref="0x40dd5e60"/>
        <function-ref name="getOrigin" scoped="" ref="0x40dd4010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40dd40f0"/>
        <function-ref name="getType" scoped="" ref="0x40dd41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40dff6d0" loc="129:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40dff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40dff8a8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40dff988"/>
        <function-ref name="txNoAck" scoped="" ref="0x40dffa68"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40dffb48"/>
        <function-ref name="evicted" scoped="" ref="0x40dffc28"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40dffd08"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40dffde8"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40dffec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x40df7468" loc="140:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x40df7468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
              <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40df7a90"/>
        <function-ref name="flush" scoped="" ref="0x40df5010"/>
        <function-ref name="lookup" scoped="" ref="0x40df7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40dd5108" loc="114:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40dd5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40dd52f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40dd5430" loc="115:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40dd5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dd5608"/>
        <function-ref name="payloadLength" scoped="" ref="0x40dd56e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd57c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd58a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40dd5988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40dd6d08" loc="113:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40dd6d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dd6ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40df2690" loc="149:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40df2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40df2868"/>
        <function-ref name="rand32" scoped="" ref="0x40df2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dd61e8" loc="111:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dd61e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dd63d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd64b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd6590"/>
        <function-ref name="cancel" scoped="" ref="0x40dd6670"/>
        <function-ref name="sendDone" scoped="" ref="0x40dd6750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x40e01420" loc="128:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x40e01420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dff010"/>
        <function-ref name="fired" scoped="" ref="0x40e00268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e00970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e00718"/>
        <function-ref name="getdt" scoped="" ref="0x40dff4c0"/>
        <function-ref name="gett0" scoped="" ref="0x40dff268"/>
        <function-ref name="isRunning" scoped="" ref="0x40e004c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e01ac8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e00c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e01d48"/>
        <function-ref name="stop" scoped="" ref="0x40e00010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40df1170" loc="162:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40df1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40df1348"/>
        <function-ref name="stopDone" scoped="" ref="0x40df1428"/>
        <function-ref name="start" scoped="" ref="0x40df1508"/>
        <function-ref name="stop" scoped="" ref="0x40df15e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40df1768" loc="234:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40df1768"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40df1940"/>
        <function-ref name="runTask" scoped="" ref="0x40df1a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40dfed70" loc="137:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40dfed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40d3dbe8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40d3de70"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40dfdac8"/>
        <function-ref name="enqueue" scoped="" ref="0x40dfb1d0"/>
        <function-ref name="element" scoped="" ref="0x40dfb520"/>
        <function-ref name="maxSize" scoped="" ref="0x40dfd870"/>
        <function-ref name="dequeue" scoped="" ref="0x40dfde38"/>
        <function-ref name="empty" scoped="" ref="0x40dfd3c0"/>
        <function-ref name="size" scoped="" ref="0x40dfd618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x40df5890" loc="144:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40df5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40df5a68"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40df5b48"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40df5c28"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40df5d08"/>
        <function-ref name="getEtx" scoped="" ref="0x40df5de8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40df5ec8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40df4010"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40df40f0"/>
        <function-ref name="getParent" scoped="" ref="0x40df41d0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40df42b0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40df4390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40dfe608" loc="131:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40dfe608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dfe7e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40dfe8c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40dfe9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dfea80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40dfeb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dd7a08" loc="109:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dd7a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dd7be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40dd6928" loc="112:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40dd6928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dd6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40dd3390" loc="118:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40dd3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40dd3568"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40dd3648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x40dfe030" loc="130:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40dfe030"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40dfe208"/>
        <function-ref name="routeFound" scoped="" ref="0x40dfe2e8"/>
        <function-ref name="nextHop" scoped="" ref="0x40dfe3c8"/>
        <function-ref name="noRoute" scoped="" ref="0x40dfe4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40df3a50" loc="148:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40df3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40df3c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40df3d08"/>
        <function-ref name="led1On" scoped="" ref="0x40df3de8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40df3ec8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40df2010"/>
        <function-ref name="get" scoped="" ref="0x40df20f0"/>
        <function-ref name="led1Off" scoped="" ref="0x40df21d0"/>
        <function-ref name="led2On" scoped="" ref="0x40df2550"/>
        <function-ref name="set" scoped="" ref="0x40df2390"/>
        <function-ref name="led2Off" scoped="" ref="0x40df22b0"/>
        <function-ref name="led0On" scoped="" ref="0x40df2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40dd3e70" loc="127:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dd3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e01070"/>
        <function-ref name="noAck" scoped="" ref="0x40e01150"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e01230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40dd4310" loc="117:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40dd4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40dd44e8"/>
        <function-ref name="option" scoped="" ref="0x40dd45c8"/>
        <function-ref name="setEtx" scoped="" ref="0x40dd46a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40dd4788"/>
        <function-ref name="clearOption" scoped="" ref="0x40dd4868"/>
        <function-ref name="getEtx" scoped="" ref="0x40dd4948"/>
        <function-ref name="getOrigin" scoped="" ref="0x40dd4a28"/>
        <function-ref name="setType" scoped="" ref="0x40dd4b08"/>
        <function-ref name="setOption" scoped="" ref="0x40dd4be8"/>
        <function-ref name="matchPacket" scoped="" ref="0x40dd4cc8"/>
        <function-ref name="getThl" scoped="" ref="0x40dd4da8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40dd4e88"/>
        <function-ref name="matchInstance" scoped="" ref="0x40dd3010"/>
        <function-ref name="getType" scoped="" ref="0x40dd3170"/>
        <function-ref name="setThl" scoped="" ref="0x40dd3250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x40dfb920" loc="138:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x40dfb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40d3dbe8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40d3de70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dfaaa8"/>
        <function-ref name="maxSize" scoped="" ref="0x40dfa4c0"/>
        <function-ref name="empty" scoped="" ref="0x40dfa010"/>
        <function-ref name="put" scoped="" ref="0x40dfa718"/>
        <function-ref name="size" scoped="" ref="0x40dfa268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40df4e68" loc="147:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40df4e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40df3050"/>
        <function-ref name="source" scoped="" ref="0x40df3130"/>
        <function-ref name="address" scoped="" ref="0x40df3210"/>
        <function-ref name="destination" scoped="" ref="0x40df32f0"/>
        <function-ref name="setSource" scoped="" ref="0x40df33d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40df34b0"/>
        <function-ref name="type" scoped="" ref="0x40df3590"/>
        <function-ref name="setType" scoped="" ref="0x40df3670"/>
        <function-ref name="isForMe" scoped="" ref="0x40df3750"/>
        <function-ref name="setGroup" scoped="" ref="0x40df3830"/>
        <function-ref name="localGroup" scoped="" ref="0x40df3910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40dd7d20" loc="110:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40dd7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dd7ef8"/>
        <function-ref name="stop" scoped="" ref="0x40dd6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x40df5578" loc="143:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x40df5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40df5750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40dfaee0" loc="139:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40dfaee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
            <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40df7010"/>
        <function-ref name="maxSize" scoped="" ref="0x40df8a08"/>
        <function-ref name="empty" scoped="" ref="0x40df8558"/>
        <function-ref name="put" scoped="" ref="0x40df8c60"/>
        <function-ref name="size" scoped="" ref="0x40df87b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40df4a40" loc="146:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40df4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40df4d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40debba8" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40debba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
            <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1ac88"/>
        <function-ref name="maxSize" scoped="" ref="0x40e1a6a0"/>
        <function-ref name="empty" scoped="" ref="0x40e1a1f0"/>
        <function-ref name="put" scoped="" ref="0x40e1a8f8"/>
        <function-ref name="size" scoped="" ref="0x40e1a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41682f18" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41682f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
            <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4167f010"/>
        <function-ref name="maxSize" scoped="" ref="0x41681a08"/>
        <function-ref name="empty" scoped="" ref="0x41681558"/>
        <function-ref name="put" scoped="" ref="0x41681c60"/>
        <function-ref name="size" scoped="" ref="0x416817b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41682b70" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41682b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41682d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40e04010" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40e04010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40d3dbe8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40d3de70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e030e8"/>
        <function-ref name="maxSize" scoped="" ref="0x40e04ae8"/>
        <function-ref name="empty" scoped="" ref="0x40e04638"/>
        <function-ref name="put" scoped="" ref="0x40e04d40"/>
        <function-ref name="size" scoped="" ref="0x40e04890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416776f8" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416776f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40d3dbe8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40d3de70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41676850"/>
        <function-ref name="maxSize" scoped="" ref="0x41676268"/>
        <function-ref name="empty" scoped="" ref="0x41677d20"/>
        <function-ref name="put" scoped="" ref="0x416764c0"/>
        <function-ref name="size" scoped="" ref="0x41676010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41677350" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41677350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41677528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40e30408" loc="43:/opt/tinyos/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e30408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40d3dbe8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40d3de70"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40e2f150"/>
        <function-ref name="enqueue" scoped="" ref="0x40e2f830"/>
        <function-ref name="element" scoped="" ref="0x40e2fb80"/>
        <function-ref name="maxSize" scoped="" ref="0x40e30ee0"/>
        <function-ref name="dequeue" scoped="" ref="0x40e2f4c0"/>
        <function-ref name="empty" scoped="" ref="0x40e30a30"/>
        <function-ref name="size" scoped="" ref="0x40e30c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x40e1fdc0" loc="39:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x40e1fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
              <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40e35408"/>
        <function-ref name="flush" scoped="" ref="0x40e35908"/>
        <function-ref name="lookup" scoped="" ref="0x40e35688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x416ba6b0" loc="46:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x416ba6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
              <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x416bacd8"/>
        <function-ref name="flush" scoped="" ref="0x416b8290"/>
        <function-ref name="lookup" scoped="" ref="0x416b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416ba2e8" loc="45:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416ba2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416ba4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x416b84d0" loc="49:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x416b84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x416b86a8"/>
        <function-ref name="option" scoped="" ref="0x416b8788"/>
        <function-ref name="setEtx" scoped="" ref="0x416b8868"/>
        <function-ref name="setOrigin" scoped="" ref="0x416b8948"/>
        <function-ref name="clearOption" scoped="" ref="0x416b8a28"/>
        <function-ref name="getEtx" scoped="" ref="0x416b8b08"/>
        <function-ref name="getOrigin" scoped="" ref="0x416b8be8"/>
        <function-ref name="setType" scoped="" ref="0x416b8cc8"/>
        <function-ref name="setOption" scoped="" ref="0x416b8da8"/>
        <function-ref name="matchPacket" scoped="" ref="0x416b8e88"/>
        <function-ref name="getThl" scoped="" ref="0x416b7010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x416b70f0"/>
        <function-ref name="matchInstance" scoped="" ref="0x416b71d0"/>
        <function-ref name="getType" scoped="" ref="0x416b7330"/>
        <function-ref name="setThl" scoped="" ref="0x416b7410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e34838" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e34838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e64368"/>
        <function-ref name="fired" scoped="" ref="0x40e335e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e33cf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e33a98"/>
        <function-ref name="getdt" scoped="" ref="0x40e64818"/>
        <function-ref name="gett0" scoped="" ref="0x40e645c0"/>
        <function-ref name="isRunning" scoped="" ref="0x40e33840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e34e60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e64048"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e33110"/>
        <function-ref name="stop" scoped="" ref="0x40e33390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e63670" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e63670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e60170"/>
        <function-ref name="fired" scoped="" ref="0x40e61408"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e61b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e618b8"/>
        <function-ref name="getdt" scoped="" ref="0x40e60620"/>
        <function-ref name="gett0" scoped="" ref="0x40e603c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e61660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e63c98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e61e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e63f18"/>
        <function-ref name="stop" scoped="" ref="0x40e611b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e54300" loc="57:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e54300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e544d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40e58b10" loc="47:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40e58b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40e58ce8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40e58dc8"/>
        <function-ref name="txNoAck" scoped="" ref="0x40e58ea8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40e57010"/>
        <function-ref name="evicted" scoped="" ref="0x40e570f0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40e571d0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40e572b0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40e57390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e57858" loc="49:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e57858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e57a30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e57b10"/>
        <function-ref name="getPayload" scoped="" ref="0x40e57bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e57cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e57db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40e53698" loc="54:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e53698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e53870"/>
        <function-ref name="getPayload" scoped="" ref="0x40e53950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e53a30"/>
        <function-ref name="cancel" scoped="" ref="0x40e53b10"/>
        <function-ref name="sendDone" scoped="" ref="0x40e53bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e58090" loc="45:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e58090"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e58268"/>
        <function-ref name="getPayload" scoped="" ref="0x40e58348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e58428"/>
        <function-ref name="cancel" scoped="" ref="0x40e58508"/>
        <function-ref name="sendDone" scoped="" ref="0x40e585e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40e54a28" loc="59:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40e54a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40e54c80"/>
        <function-ref name="rand32" scoped="" ref="0x40e54d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e55ad0" loc="56:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e55ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e55ca8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e55d88"/>
        <function-ref name="getPayload" scoped="" ref="0x40e55e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e54010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e540f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e57500" loc="48:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e57500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e576d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x40e53e18" loc="55:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x40e53e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e55010"/>
        <function-ref name="source" scoped="" ref="0x40e550f0"/>
        <function-ref name="address" scoped="" ref="0x40e551d0"/>
        <function-ref name="destination" scoped="" ref="0x40e552b0"/>
        <function-ref name="setSource" scoped="" ref="0x40e55390"/>
        <function-ref name="setDestination" scoped="" ref="0x40e55470"/>
        <function-ref name="type" scoped="" ref="0x40e55550"/>
        <function-ref name="setType" scoped="" ref="0x40e55630"/>
        <function-ref name="isForMe" scoped="" ref="0x40e55710"/>
        <function-ref name="setGroup" scoped="" ref="0x40e557f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40e558d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e58770" loc="46:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e58770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e58948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x40e53300" loc="50:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40e53300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40e534d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e59bd0" loc="44:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e59bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e59da8"/>
        <function-ref name="stop" scoped="" ref="0x40e59e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x40e546d0" loc="58:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40e546d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40e548a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40eb2bb8" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40eb2bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eb2d90"/>
        <function-ref name="getPayload" scoped="" ref="0x40eb2e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eb1010"/>
        <function-ref name="cancel" scoped="" ref="0x40eb10f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40eb11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40eb1310" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40eb1310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eb14e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eb15c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40eb16a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eb1788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eb1868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40eb19a8" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eb19a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eb1b80"/>
        <function-ref name="source" scoped="" ref="0x40eb1c60"/>
        <function-ref name="address" scoped="" ref="0x40eb1d40"/>
        <function-ref name="destination" scoped="" ref="0x40eb1e20"/>
        <function-ref name="setSource" scoped="" ref="0x40eb1f00"/>
        <function-ref name="setDestination" scoped="" ref="0x40f02010"/>
        <function-ref name="type" scoped="" ref="0x40f020f0"/>
        <function-ref name="setType" scoped="" ref="0x40f021d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f022b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f02390"/>
        <function-ref name="localGroup" scoped="" ref="0x40f02470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f025d0" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f025d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f027a8"/>
        <function-ref name="noAck" scoped="" ref="0x40f02888"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f02968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416a26f0" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416a26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416a28c8"/>
        <function-ref name="getPayload" scoped="" ref="0x416a29a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416a2a88"/>
        <function-ref name="cancel" scoped="" ref="0x416a2b68"/>
        <function-ref name="sendDone" scoped="" ref="0x416a2c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x416a2d88" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x416a2d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416a1010"/>
        <function-ref name="payloadLength" scoped="" ref="0x416a10f0"/>
        <function-ref name="getPayload" scoped="" ref="0x416a11d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416a12b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416a1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x416a14d0" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416a14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416a16a8"/>
        <function-ref name="source" scoped="" ref="0x416a1788"/>
        <function-ref name="address" scoped="" ref="0x416a1868"/>
        <function-ref name="destination" scoped="" ref="0x416a1948"/>
        <function-ref name="setSource" scoped="" ref="0x416a1a28"/>
        <function-ref name="setDestination" scoped="" ref="0x416a1b08"/>
        <function-ref name="type" scoped="" ref="0x416a1be8"/>
        <function-ref name="setType" scoped="" ref="0x416a1cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x416a1da8"/>
        <function-ref name="setGroup" scoped="" ref="0x416a1e88"/>
        <function-ref name="localGroup" scoped="" ref="0x4169f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4169f170" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4169f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4169f348"/>
        <function-ref name="noAck" scoped="" ref="0x4169f428"/>
        <function-ref name="wasAcked" scoped="" ref="0x4169f508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4169ddb8" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4169ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4169a010"/>
        <function-ref name="getPayload" scoped="" ref="0x4169a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4169a1d0"/>
        <function-ref name="cancel" scoped="" ref="0x4169a2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4169a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4169a500" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4169a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4169a6d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4169a7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4169a898"/>
        <function-ref name="cancel" scoped="" ref="0x4169a978"/>
        <function-ref name="sendDone" scoped="" ref="0x4169aa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4169ab98" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4169ab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4169ad70"/>
        <function-ref name="source" scoped="" ref="0x4169ae50"/>
        <function-ref name="address" scoped="" ref="0x41699010"/>
        <function-ref name="destination" scoped="" ref="0x416990f0"/>
        <function-ref name="setSource" scoped="" ref="0x416991d0"/>
        <function-ref name="setDestination" scoped="" ref="0x416992b0"/>
        <function-ref name="type" scoped="" ref="0x41699390"/>
        <function-ref name="setType" scoped="" ref="0x41699470"/>
        <function-ref name="isForMe" scoped="" ref="0x41699550"/>
        <function-ref name="setGroup" scoped="" ref="0x41699630"/>
        <function-ref name="localGroup" scoped="" ref="0x41699710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ed0c00" loc="43:/opt/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ed0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ed0dd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ed0eb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ecd010"/>
        <function-ref name="cancel" scoped="" ref="0x40ecd0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ecd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40f0c3d8" loc="48:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f0c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f0c5c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f0c6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0c780"/>
        <function-ref name="cancel" scoped="" ref="0x40f0c860"/>
        <function-ref name="sendDone" scoped="" ref="0x40f0c940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ecbbe0" loc="46:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ecbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ecbdc8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ecbea8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0c010"/>
        <function-ref name="cancel" scoped="" ref="0x40f0c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f0c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40f0a690" loc="50:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f0a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f0a868"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f0a948"/>
        <function-ref name="getPayload" scoped="" ref="0x40f0aa28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0ab08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f0abe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40f0ad68" loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40f0ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f09010"/>
        <function-ref name="runTask" scoped="" ref="0x40f090f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40f09270" loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40f09270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f09448"/>
        <function-ref name="runTask" scoped="" ref="0x40f09528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f0ca80" loc="49:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f0ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f0cc58"/>
        <function-ref name="source" scoped="" ref="0x40f0cd38"/>
        <function-ref name="address" scoped="" ref="0x40f0ce18"/>
        <function-ref name="destination" scoped="" ref="0x40f0cef8"/>
        <function-ref name="setSource" scoped="" ref="0x40f0a010"/>
        <function-ref name="setDestination" scoped="" ref="0x40f0a0f0"/>
        <function-ref name="type" scoped="" ref="0x40f0a1d0"/>
        <function-ref name="setType" scoped="" ref="0x40f0a2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f0a390"/>
        <function-ref name="setGroup" scoped="" ref="0x40f0a470"/>
        <function-ref name="localGroup" scoped="" ref="0x40f0a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40eff348" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40eff348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eff520"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eff600"/>
        <function-ref name="getPayload" scoped="" ref="0x40eff6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eff7c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eff8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40eff030" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40eff030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40eff208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40eff9e0" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eff9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40effbb8"/>
        <function-ref name="source" scoped="" ref="0x40effc98"/>
        <function-ref name="address" scoped="" ref="0x40effd78"/>
        <function-ref name="destination" scoped="" ref="0x40effe58"/>
        <function-ref name="setSource" scoped="" ref="0x40f2f010"/>
        <function-ref name="setDestination" scoped="" ref="0x40f2f0f0"/>
        <function-ref name="type" scoped="" ref="0x40f2f1d0"/>
        <function-ref name="setType" scoped="" ref="0x40f2f2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f2f390"/>
        <function-ref name="setGroup" scoped="" ref="0x40f2f470"/>
        <function-ref name="localGroup" scoped="" ref="0x40f2f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f2dd40" loc="47:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f2dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f2df18"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f2c010"/>
        <function-ref name="getPayload" scoped="" ref="0x40f2c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f2c1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f2c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f2da28" loc="46:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f2da28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f2dc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f2c3f0" loc="48:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f2c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f2c5c8"/>
        <function-ref name="source" scoped="" ref="0x40f2c6a8"/>
        <function-ref name="address" scoped="" ref="0x40f2c788"/>
        <function-ref name="destination" scoped="" ref="0x40f2c868"/>
        <function-ref name="setSource" scoped="" ref="0x40f2c948"/>
        <function-ref name="setDestination" scoped="" ref="0x40f2ca28"/>
        <function-ref name="type" scoped="" ref="0x40f2cb08"/>
        <function-ref name="setType" scoped="" ref="0x40f2cbe8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f2ccc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f2cda8"/>
        <function-ref name="localGroup" scoped="" ref="0x40f2ce88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40fa7db0" loc="110:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40fa7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40fa6010"/>
        <function-ref name="setRoot" scoped="" ref="0x40fa60f0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40fa61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x40fd2270" loc="271:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x40fd2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fd2448"/>
        <function-ref name="runTask" scoped="" ref="0x40fd2528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40fd3010" loc="125:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40fd3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40fd31e8"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40fd32c8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40fd33a8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40fd3488"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40fd3568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40fa39e0" loc="119:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40fa39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40fa3bb8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40fa3c98"/>
        <function-ref name="txNoAck" scoped="" ref="0x40fa3d78"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40fa3e58"/>
        <function-ref name="evicted" scoped="" ref="0x40fa2010"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40fa20f0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40fa21d0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40fa22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x40fa4300" loc="113:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x40fa4300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x40fa44d8"/>
        <function-ref name="setEtx" scoped="" ref="0x40fa45b8"/>
        <function-ref name="clearOption" scoped="" ref="0x40fa4698"/>
        <function-ref name="getEtx" scoped="" ref="0x40fa4778"/>
        <function-ref name="setOption" scoped="" ref="0x40fa4858"/>
        <function-ref name="setParent" scoped="" ref="0x40fa4938"/>
        <function-ref name="getParent" scoped="" ref="0x40fa4a18"/>
        <function-ref name="getOption" scoped="" ref="0x40fa4af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40fa1010" loc="121:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40fa1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fa11e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40fa12c8"/>
        <function-ref name="start" scoped="" ref="0x40fa13a8"/>
        <function-ref name="stop" scoped="" ref="0x40fa1488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40fd4b88" loc="124:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40fd4b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40fd4d60"/>
        <function-ref name="rand32" scoped="" ref="0x40fd4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40fa6310" loc="111:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40fa6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40fa64e8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40fa65c8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40fa66a8"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40fa6788"/>
        <function-ref name="getEtx" scoped="" ref="0x40fa6868"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40fa6948"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40fa6a28"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40fa6b08"/>
        <function-ref name="getParent" scoped="" ref="0x40fa6be8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40fa6cc8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40fa6da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x40fd3df8" loc="390:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x40fd3df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fd2010"/>
        <function-ref name="runTask" scoped="" ref="0x40fd20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fa4c38" loc="114:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fa4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fa4e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x40fa3010" loc="117:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x40fa3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fa31e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fa32c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fa33a8"/>
        <function-ref name="cancel" scoped="" ref="0x40fa3488"/>
        <function-ref name="sendDone" scoped="" ref="0x40fa3568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x40fa1678" loc="122:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x40fa1678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f9f170"/>
        <function-ref name="fired" scoped="" ref="0x40fa0410"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40fa0b18"/>
        <function-ref name="isOneShot" scoped="" ref="0x40fa08c0"/>
        <function-ref name="getdt" scoped="" ref="0x40f9f620"/>
        <function-ref name="gett0" scoped="" ref="0x40f9f3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40fa0668"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fa1ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40fa0e38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fa1f20"/>
        <function-ref name="stop" scoped="" ref="0x40fa01b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x40f9f8e0" loc="123:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x40f9f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fd44c8"/>
        <function-ref name="fired" scoped="" ref="0x40fd5768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40fd5e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40fd5c18"/>
        <function-ref name="getdt" scoped="" ref="0x40fd4978"/>
        <function-ref name="gett0" scoped="" ref="0x40fd4720"/>
        <function-ref name="isRunning" scoped="" ref="0x40fd59c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fd5010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40fd41a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fd5290"/>
        <function-ref name="stop" scoped="" ref="0x40fd5510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x40fd36a8" loc="126:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40fd36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40fd3880"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40fd3960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x40fd3aa0" loc="128:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40fd3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40fd3c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x40fa36c8" loc="118:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x40fa36c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fa38a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40fa23f0" loc="120:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fa23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fa25c8"/>
        <function-ref name="source" scoped="" ref="0x40fa26a8"/>
        <function-ref name="address" scoped="" ref="0x40fa2788"/>
        <function-ref name="destination" scoped="" ref="0x40fa2868"/>
        <function-ref name="setSource" scoped="" ref="0x40fa2948"/>
        <function-ref name="setDestination" scoped="" ref="0x40fa2a28"/>
        <function-ref name="type" scoped="" ref="0x40fa2b08"/>
        <function-ref name="setType" scoped="" ref="0x40fa2be8"/>
        <function-ref name="isForMe" scoped="" ref="0x40fa2cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40fa2da8"/>
        <function-ref name="localGroup" scoped="" ref="0x40fa2e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fa6ee8" loc="112:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fa6ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fa40e0"/>
        <function-ref name="stop" scoped="" ref="0x40fa41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x40fa77f8" loc="109:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x40fa77f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40fa79d0"/>
        <function-ref name="routeFound" scoped="" ref="0x40fa7ab0"/>
        <function-ref name="nextHop" scoped="" ref="0x40fa7b90"/>
        <function-ref name="noRoute" scoped="" ref="0x40fa7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40fcc428" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40fcc428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fca010"/>
        <function-ref name="fired" scoped="" ref="0x40fcb268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40fcb970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40fcb718"/>
        <function-ref name="getdt" scoped="" ref="0x40fca4c0"/>
        <function-ref name="gett0" scoped="" ref="0x40fca268"/>
        <function-ref name="isRunning" scoped="" ref="0x40fcb4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fcca50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40fcbc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fcccd0"/>
        <function-ref name="stop" scoped="" ref="0x40fcb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fc78c0" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fc78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fc7a98"/>
        <function-ref name="getPayload" scoped="" ref="0x40fc7b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fc7c58"/>
        <function-ref name="cancel" scoped="" ref="0x40fc7d38"/>
        <function-ref name="sendDone" scoped="" ref="0x40fc7e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fc6010" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fc6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fc61e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fc62c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fc63a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fc6488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fc6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fc66a8" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fc66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fc6880"/>
        <function-ref name="source" scoped="" ref="0x40fc6960"/>
        <function-ref name="address" scoped="" ref="0x40fc6a40"/>
        <function-ref name="destination" scoped="" ref="0x40fc6b20"/>
        <function-ref name="setSource" scoped="" ref="0x40fc6c00"/>
        <function-ref name="setDestination" scoped="" ref="0x40fc6ce0"/>
        <function-ref name="type" scoped="" ref="0x40fc6dc0"/>
        <function-ref name="setType" scoped="" ref="0x40fc6ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fc5010"/>
        <function-ref name="setGroup" scoped="" ref="0x40fc50f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40fc51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40fc5330" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40fc5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fc5508"/>
        <function-ref name="noAck" scoped="" ref="0x40fc55e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fc56c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41726010" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41726010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417261e8"/>
        <function-ref name="getPayload" scoped="" ref="0x417262c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417263a8"/>
        <function-ref name="cancel" scoped="" ref="0x41726488"/>
        <function-ref name="sendDone" scoped="" ref="0x41726568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x417266a8" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x417266a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41726880"/>
        <function-ref name="payloadLength" scoped="" ref="0x41726960"/>
        <function-ref name="getPayload" scoped="" ref="0x41726a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41726b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41726c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41726d40" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41726d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41726f18"/>
        <function-ref name="source" scoped="" ref="0x41725010"/>
        <function-ref name="address" scoped="" ref="0x417250f0"/>
        <function-ref name="destination" scoped="" ref="0x417251d0"/>
        <function-ref name="setSource" scoped="" ref="0x417252b0"/>
        <function-ref name="setDestination" scoped="" ref="0x41725390"/>
        <function-ref name="type" scoped="" ref="0x41725470"/>
        <function-ref name="setType" scoped="" ref="0x41725550"/>
        <function-ref name="isForMe" scoped="" ref="0x41725630"/>
        <function-ref name="setGroup" scoped="" ref="0x41725710"/>
        <function-ref name="localGroup" scoped="" ref="0x417257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41725950" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41725950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41725b28"/>
        <function-ref name="noAck" scoped="" ref="0x41725c08"/>
        <function-ref name="wasAcked" scoped="" ref="0x41725ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4171f728" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4171f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4171f900"/>
        <function-ref name="getPayload" scoped="" ref="0x4171f9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4171fac0"/>
        <function-ref name="cancel" scoped="" ref="0x4171fba0"/>
        <function-ref name="sendDone" scoped="" ref="0x4171fc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4171fdf0" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4171fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4171e010"/>
        <function-ref name="getPayload" scoped="" ref="0x4171e0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4171e1d0"/>
        <function-ref name="cancel" scoped="" ref="0x4171e2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4171e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4171e4d0" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4171e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4171e6a8"/>
        <function-ref name="source" scoped="" ref="0x4171e788"/>
        <function-ref name="address" scoped="" ref="0x4171e868"/>
        <function-ref name="destination" scoped="" ref="0x4171e948"/>
        <function-ref name="setSource" scoped="" ref="0x4171ea28"/>
        <function-ref name="setDestination" scoped="" ref="0x4171eb08"/>
        <function-ref name="type" scoped="" ref="0x4171ebe8"/>
        <function-ref name="setType" scoped="" ref="0x4171ecc8"/>
        <function-ref name="isForMe" scoped="" ref="0x4171eda8"/>
        <function-ref name="setGroup" scoped="" ref="0x4171ee88"/>
        <function-ref name="localGroup" scoped="" ref="0x4171d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fc4c80" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fc4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fc4e58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fc2010"/>
        <function-ref name="getPayload" scoped="" ref="0x40fc20f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fc21d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fc22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fc4968" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fc4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fc4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fc23f0" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fc23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fc25c8"/>
        <function-ref name="source" scoped="" ref="0x40fc26a8"/>
        <function-ref name="address" scoped="" ref="0x40fc2788"/>
        <function-ref name="destination" scoped="" ref="0x40fc2868"/>
        <function-ref name="setSource" scoped="" ref="0x40fc2948"/>
        <function-ref name="setDestination" scoped="" ref="0x40fc2a28"/>
        <function-ref name="type" scoped="" ref="0x40fc2b08"/>
        <function-ref name="setType" scoped="" ref="0x40fc2be8"/>
        <function-ref name="isForMe" scoped="" ref="0x40fc2cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40fc2da8"/>
        <function-ref name="localGroup" scoped="" ref="0x40fc2e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fe7ac8" loc="46:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="SenseAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fe7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fe7ca0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fe7d80"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe7e60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe6010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fe60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fe7430" loc="45:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="SenseAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fe7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fe7608"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe76e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe77c8"/>
        <function-ref name="cancel" scoped="" ref="0x40fe78a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40fe7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41765230" loc="38:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="SenseAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41765230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41765408"/>
        <function-ref name="payloadLength" scoped="" ref="0x417654e8"/>
        <function-ref name="getPayload" scoped="" ref="0x417655c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417656a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41765788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41767ad8" loc="37:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="SenseAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41767ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41767cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x41767d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41767e70"/>
        <function-ref name="cancel" scoped="" ref="0x41765010"/>
        <function-ref name="sendDone" scoped="" ref="0x417650f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x41761328" loc="46:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="SenseAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x41761328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x41761500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40fe6cb0" loc="46:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40fe6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fe6e88"/>
        <function-ref name="stopDone" scoped="" ref="0x40fd8010"/>
        <function-ref name="start" scoped="" ref="0x40fd80f0"/>
        <function-ref name="stop" scoped="" ref="0x40fd81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fd8630" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fd8630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fd8808"/>
        <function-ref name="getPayload" scoped="" ref="0x40fd88e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fd89c8"/>
        <function-ref name="cancel" scoped="" ref="0x40fd8aa8"/>
        <function-ref name="sendDone" scoped="" ref="0x40fd8b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fd7368" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fd7368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fd7540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fd7620"/>
        <function-ref name="getPayload" scoped="" ref="0x40fd7700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fd77e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fd78c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fd7010" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fd7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fd71e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fd6ca8" loc="53:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fd6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fd6e80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4100f010"/>
        <function-ref name="led1On" scoped="" ref="0x4100f0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4100f1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4100f2b0"/>
        <function-ref name="get" scoped="" ref="0x4100f390"/>
        <function-ref name="led1Off" scoped="" ref="0x4100f470"/>
        <function-ref name="led2Off" scoped="" ref="0x4100f7f0"/>
        <function-ref name="set" scoped="" ref="0x4100f550"/>
        <function-ref name="led0On" scoped="" ref="0x4100f630"/>
        <function-ref name="led2On" scoped="" ref="0x4100f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40fd6770" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40fd6770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fd6948"/>
        <function-ref name="noAck" scoped="" ref="0x40fd6a28"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fd6b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fd7a58" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fd7a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fd7c30"/>
        <function-ref name="source" scoped="" ref="0x40fd7d10"/>
        <function-ref name="address" scoped="" ref="0x40fd7df0"/>
        <function-ref name="destination" scoped="" ref="0x40fd7ed0"/>
        <function-ref name="setSource" scoped="" ref="0x40fd6010"/>
        <function-ref name="setDestination" scoped="" ref="0x40fd60f0"/>
        <function-ref name="type" scoped="" ref="0x40fd61d0"/>
        <function-ref name="setType" scoped="" ref="0x40fd62b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fd6390"/>
        <function-ref name="setGroup" scoped="" ref="0x40fd6470"/>
        <function-ref name="localGroup" scoped="" ref="0x40fd6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41013360" loc="54:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41013360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41013538"/>
        <function-ref name="getPayload" scoped="" ref="0x41013618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410136f8"/>
        <function-ref name="cancel" scoped="" ref="0x410137d8"/>
        <function-ref name="sendDone" scoped="" ref="0x410138b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41013a18" loc="55:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41013a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41013bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4100e108" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4100e108"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4100e2f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4100e3d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4100e4b0"/>
        <function-ref name="cancel" scoped="" ref="0x4100e590"/>
        <function-ref name="sendDone" scoped="" ref="0x4100e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4100d770" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4100d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4100d948"/>
        <function-ref name="payloadLength" scoped="" ref="0x4100da28"/>
        <function-ref name="getPayload" scoped="" ref="0x4100db08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4100dbe8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4100dcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4100e848" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4100e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4100ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4100de08" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4100de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41013010"/>
        <function-ref name="noAck" scoped="" ref="0x410130f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x410131d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4100eb70" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4100eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4100ed48"/>
        <function-ref name="source" scoped="" ref="0x4100ee28"/>
        <function-ref name="address" scoped="" ref="0x4100ef08"/>
        <function-ref name="destination" scoped="" ref="0x4100d010"/>
        <function-ref name="setSource" scoped="" ref="0x4100d0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x4100d1d0"/>
        <function-ref name="type" scoped="" ref="0x4100d2b0"/>
        <function-ref name="setType" scoped="" ref="0x4100d390"/>
        <function-ref name="isForMe" scoped="" ref="0x4100d470"/>
        <function-ref name="setGroup" scoped="" ref="0x4100d550"/>
        <function-ref name="localGroup" scoped="" ref="0x4100d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x410481d0" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x410481d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410483a8"/>
        <function-ref name="stopDone" scoped="" ref="0x41048488"/>
        <function-ref name="start" scoped="" ref="0x41048568"/>
        <function-ref name="stop" scoped="" ref="0x41048648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41047100" loc="52:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41047100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40426e50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410472d8"/>
        <function-ref name="getPayload" scoped="" ref="0x410473b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41047498"/>
        <function-ref name="cancel" scoped="" ref="0x41047578"/>
        <function-ref name="sendDone" scoped="" ref="0x41047658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41012df0" loc="49:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41012df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41048010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41048a90" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41048a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40426e50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41048c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41043ca8" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41043ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41043e80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41046010"/>
        <function-ref name="led1On" scoped="" ref="0x410460f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410461d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410462b0"/>
        <function-ref name="get" scoped="" ref="0x41046390"/>
        <function-ref name="led1Off" scoped="" ref="0x41046470"/>
        <function-ref name="led2Off" scoped="" ref="0x410467f0"/>
        <function-ref name="set" scoped="" ref="0x41046550"/>
        <function-ref name="led0On" scoped="" ref="0x41046630"/>
        <function-ref name="led2On" scoped="" ref="0x41046710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x410437a0" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x410437a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40426e50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x41043978"/>
        <function-ref name="offset" scoped="" ref="0x41043a58"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x41043b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x410411d0" loc="66:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x410411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410413a8"/>
        <function-ref name="stopDone" scoped="" ref="0x41041488"/>
        <function-ref name="start" scoped="" ref="0x41041568"/>
        <function-ref name="stop" scoped="" ref="0x41041648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x4107a350" loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x4107a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4107a528"/>
        <function-ref name="runTask" scoped="" ref="0x4107a608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x41039340" loc="74:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x41039340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41039518"/>
        <function-ref name="stop" scoped="" ref="0x410395f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x41060788" loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x41060788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41060960"/>
        <function-ref name="runTask" scoped="" ref="0x41060a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41046dd0" loc="65:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41046dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41041010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x41033350" loc="75:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x41033350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x41033528"/>
        <function-ref name="flush" scoped="" ref="0x41033608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x4107cbd0" loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x4107cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4107cda8"/>
        <function-ref name="runTask" scoped="" ref="0x4107ce88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x41036d08" loc="72:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x41036d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x41036ee0"/>
        <function-ref name="resetSend" scoped="" ref="0x4103b010"/>
        <function-ref name="dataReceived" scoped="" ref="0x4103b0f0"/>
        <function-ref name="resetReceive" scoped="" ref="0x4103b1d0"/>
        <function-ref name="putData" scoped="" ref="0x4103b2b0"/>
        <function-ref name="putDone" scoped="" ref="0x4103b390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x4103b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4103b5e0" loc="73:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4103b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4103b7b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4103b898"/>
        <function-ref name="led1On" scoped="" ref="0x4103b978"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4103ba58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4103bb38"/>
        <function-ref name="get" scoped="" ref="0x4103bc18"/>
        <function-ref name="led1Off" scoped="" ref="0x4103bcf8"/>
        <function-ref name="led2Off" scoped="" ref="0x410390f0"/>
        <function-ref name="set" scoped="" ref="0x4103bdd8"/>
        <function-ref name="led0On" scoped="" ref="0x4103beb8"/>
        <function-ref name="led2On" scoped="" ref="0x41039010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x41078010" loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x41078010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410781e8"/>
        <function-ref name="runTask" scoped="" ref="0x410782c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x4103c960" loc="67:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4103c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4103cb38"/>
        <function-ref name="nextByte" scoped="" ref="0x4103cc18"/>
        <function-ref name="startSend" scoped="" ref="0x4103ccf8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4103cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x4103aa80" loc="68:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4103aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4103ac58"/>
        <function-ref name="byteReceived" scoped="" ref="0x4103ad38"/>
        <function-ref name="endPacket" scoped="" ref="0x4103ae18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x410f2030" loc="275:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x410f2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410f2208"/>
        <function-ref name="runTask" scoped="" ref="0x410f22e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410b5c60" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410b5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40426e50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410b5e48"/>
        <function-ref name="getPayload" scoped="" ref="0x410b5f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410f4018"/>
        <function-ref name="cancel" scoped="" ref="0x410f40f8"/>
        <function-ref name="sendDone" scoped="" ref="0x410f41d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x410f2468" loc="158:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x410f2468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410f2640"/>
        <function-ref name="runTask" scoped="" ref="0x410f2720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x410b58a0" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x410b58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40426e50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410b5a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x410f4400" loc="54:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x410f4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40426e50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x410f45e8"/>
        <function-ref name="offset" scoped="" ref="0x410f46c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x410f47a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410f33f0" loc="57:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410f33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x410f35c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410f36a8"/>
        <function-ref name="led1On" scoped="" ref="0x410f3788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410f3868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410f3948"/>
        <function-ref name="get" scoped="" ref="0x410f3a28"/>
        <function-ref name="led1Off" scoped="" ref="0x410f3b08"/>
        <function-ref name="led2On" scoped="" ref="0x410f3e88"/>
        <function-ref name="set" scoped="" ref="0x410f3cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x410f3be8"/>
        <function-ref name="led0On" scoped="" ref="0x410f3da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x410f4dc0" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x410f4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x410f3010"/>
        <function-ref name="nextByte" scoped="" ref="0x410f30f0"/>
        <function-ref name="startSend" scoped="" ref="0x410f31d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x410f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x410f48e8" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x410f48e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x410f4ac0"/>
        <function-ref name="byteReceived" scoped="" ref="0x410f4ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x410f4c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x410e7b80" loc="50:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x410e7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e7d58"/>
        <function-ref name="receivedByte" scoped="" ref="0x410e7e38"/>
        <function-ref name="receive" scoped="" ref="0x410e7f18"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x410ed010"/>
        <function-ref name="receiveDone" scoped="" ref="0x410ed0f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x410ed1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x410ed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x410f1860" loc="48:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x410f1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x410f1a38"/>
        <function-ref name="resetSend" scoped="" ref="0x410f1b18"/>
        <function-ref name="dataReceived" scoped="" ref="0x410f1bf8"/>
        <function-ref name="resetReceive" scoped="" ref="0x410f1cd8"/>
        <function-ref name="putData" scoped="" ref="0x410f1db8"/>
        <function-ref name="putDone" scoped="" ref="0x410f1e98"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x410ee010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410ed420" loc="51:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410ed420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x410ed5f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410ed6d8"/>
        <function-ref name="led1On" scoped="" ref="0x410ed7b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410ed898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410ed978"/>
        <function-ref name="get" scoped="" ref="0x410eda58"/>
        <function-ref name="led1Off" scoped="" ref="0x410edb38"/>
        <function-ref name="led2Off" scoped="" ref="0x410edeb8"/>
        <function-ref name="set" scoped="" ref="0x410edc18"/>
        <function-ref name="led0On" scoped="" ref="0x410edcf8"/>
        <function-ref name="led2On" scoped="" ref="0x410eddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x411106e8" loc="42:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x411106e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411108c0"/>
        <function-ref name="receive" scoped="" ref="0x411109a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x410f0868" loc="41:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x410f0868"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410f0a40"/>
        <function-ref name="receivedByte" scoped="" ref="0x410f0b20"/>
        <function-ref name="receive" scoped="" ref="0x410f0c00"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x410f0ce0"/>
        <function-ref name="receiveDone" scoped="" ref="0x410f0dc0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x410f0ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x41113010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410f03e8" loc="40:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410f03e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410f05c0"/>
        <function-ref name="stop" scoped="" ref="0x410f06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4110f5d8" loc="41:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4110f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4110f7b0"/>
        <function-ref name="receive" scoped="" ref="0x4110f890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4110fa58" loc="42:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4110fa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4110fc30"/>
        <function-ref name="receivedByte" scoped="" ref="0x4110fd10"/>
        <function-ref name="receive" scoped="" ref="0x4110fdf0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4110fed0"/>
        <function-ref name="receiveDone" scoped="" ref="0x4110e010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4110e0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4110e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4110e530" loc="43:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4110e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403b0890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4110ec80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4110c1a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4110eef8"/>
        <function-ref name="overflow" scoped="" ref="0x4110c418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4110f168" loc="40:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4110f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4110f340"/>
        <function-ref name="stop" scoped="" ref="0x4110f420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4110be28" loc="50:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4110be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4110a050"/>
        <function-ref name="receive" scoped="" ref="0x4110a130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x4110ab28" loc="53:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x4110ab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4110ad00"/>
        <function-ref name="stop" scoped="" ref="0x4110ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4110b6d8" loc="48:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4110b6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4110b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4110a290" loc="51:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4110a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4110a468"/>
        <function-ref name="receivedByte" scoped="" ref="0x4110a548"/>
        <function-ref name="receive" scoped="" ref="0x4110a628"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4110a708"/>
        <function-ref name="receiveDone" scoped="" ref="0x4110a7e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4110a8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4110a9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4111f0a0" loc="56:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4111f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403b0890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4111f7f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4111fce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4111fa68"/>
        <function-ref name="overflow" scoped="" ref="0x4111d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x41120448" loc="55:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x41120448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41120620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41120700"/>
        <function-ref name="rxDone" scoped="" ref="0x411207e0"/>
        <function-ref name="txDone" scoped="" ref="0x411208c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x411209a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41120a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41120b60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41120c40"/>
        <function-ref name="tx" scoped="" ref="0x41120d20"/>
        <function-ref name="rx" scoped="" ref="0x41120e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4110ba10" loc="49:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4110ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4110bbe8"/>
        <function-ref name="stop" scoped="" ref="0x4110bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x41120010" loc="54:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x41120010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411201e8"/>
        <function-ref name="stop" scoped="" ref="0x411202c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x41149508" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x41149508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x411496e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x411497c0"/>
        <function-ref name="rxDone" scoped="" ref="0x411498a0"/>
        <function-ref name="txDone" scoped="" ref="0x41149980"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41149a60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41149b40"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41149c20"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41149d00"/>
        <function-ref name="tx" scoped="" ref="0x41149de0"/>
        <function-ref name="rx" scoped="" ref="0x41149ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x41147b80" loc="53:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x41147b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41147d58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41147e38"/>
        <function-ref name="rxDone" scoped="" ref="0x41147f18"/>
        <function-ref name="txDone" scoped="" ref="0x41146010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x411460f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x411461d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x411462b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41146390"/>
        <function-ref name="tx" scoped="" ref="0x41146470"/>
        <function-ref name="rx" scoped="" ref="0x41146550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x41149010" loc="48:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x41149010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411491e8"/>
        <function-ref name="stop" scoped="" ref="0x411492c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x41147178" loc="51:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x41147178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41147350"/>
        <function-ref name="stop" scoped="" ref="0x41147430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x41147688" loc="52:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x41147688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41147860"/>
        <function-ref name="stop" scoped="" ref="0x41147940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x4114aa80" loc="47:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x4114aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4114ac58"/>
        <function-ref name="stop" scoped="" ref="0x4114ad38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x41146d28" loc="80:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x41146d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41146f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x41143bf0" loc="83:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x41143bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41143dc8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41143ea8"/>
        <function-ref name="rxDone" scoped="" ref="0x41142010"/>
        <function-ref name="txDone" scoped="" ref="0x411420f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x411421d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x411422b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41142390"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41142470"/>
        <function-ref name="tx" scoped="" ref="0x41142550"/>
        <function-ref name="rx" scoped="" ref="0x41142630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x41142840" loc="85:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x41142840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41142a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x411417a0" loc="88:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x411417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41141978"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41141a58"/>
        <function-ref name="rxDone" scoped="" ref="0x41141b38"/>
        <function-ref name="txDone" scoped="" ref="0x41141c18"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41141cf8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41141dd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41141eb8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41140010"/>
        <function-ref name="tx" scoped="" ref="0x411400f0"/>
        <function-ref name="rx" scoped="" ref="0x411401d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x411436d8" loc="82:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x411436d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411438b0"/>
        <function-ref name="stop" scoped="" ref="0x41143990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x41142c90" loc="86:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x41142c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41142e68"/>
        <function-ref name="stop" scoped="" ref="0x41141010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x41141288" loc="87:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x41141288"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41141460"/>
        <function-ref name="stop" scoped="" ref="0x41141540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x411403c8" loc="90:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x411403c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x411405a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x41140680"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x41140760"/>
        <function-ref name="actualMicro" scoped="" ref="0x41140840"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x41140920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x41140b08" loc="91:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x41140b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x41140ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x411431a8" loc="81:/opt/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x411431a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41143380"/>
        <function-ref name="stop" scoped="" ref="0x41143460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41111968" loc="24:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41111968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403b0890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411850d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x411855c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41185350"/>
        <function-ref name="overflow" scoped="" ref="0x41185840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x411823c0" loc="24:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x411823c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d00a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41182b10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41181010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41182d88"/>
        <function-ref name="overflow" scoped="" ref="0x41181288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4117b010" loc="46:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4117b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4117b1e8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x4117b2c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4117b3a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x4117b488"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4117b568"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4117b648"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x4117b728"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x4117b808"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x4117b8e8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x4117b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4117bd00" loc="47:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4117bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x411797b0"/>
        <function-ref name="test" scoped="" ref="0x411792c0"/>
        <function-ref name="get" scoped="" ref="0x4117a370"/>
        <function-ref name="captured" scoped="" ref="0x4117a888"/>
        <function-ref name="reset" scoped="" ref="0x4117ab28"/>
        <function-ref name="isOn" scoped="" ref="0x41179538"/>
        <function-ref name="set" scoped="" ref="0x4117a5e8"/>
        <function-ref name="start" scoped="" ref="0x4117ada0"/>
        <function-ref name="stop" scoped="" ref="0x41179048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x41179ec0" loc="48:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41179ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41176428"/>
        <function-ref name="fired" scoped="" ref="0x41177a38"/>
        <function-ref name="get" scoped="" ref="0x41177520"/>
        <function-ref name="reset" scoped="" ref="0x41177cb0"/>
        <function-ref name="isOn" scoped="" ref="0x411766a0"/>
        <function-ref name="set" scoped="" ref="0x41177798"/>
        <function-ref name="start" scoped="" ref="0x41177f28"/>
        <function-ref name="stop" scoped="" ref="0x411761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41181cc8" loc="45:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41181cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4117c778"/>
        <function-ref name="test" scoped="" ref="0x4117c288"/>
        <function-ref name="get" scoped="" ref="0x4117e330"/>
        <function-ref name="setScale" scoped="" ref="0x4117c9f0"/>
        <function-ref name="getScale" scoped="" ref="0x4117cc90"/>
        <function-ref name="reset" scoped="" ref="0x4117eac0"/>
        <function-ref name="overflow" scoped="" ref="0x4117e848"/>
        <function-ref name="isOn" scoped="" ref="0x4117c500"/>
        <function-ref name="set" scoped="" ref="0x4117e5a8"/>
        <function-ref name="start" scoped="" ref="0x4117ed38"/>
        <function-ref name="stop" scoped="" ref="0x4117c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x411ad3c8" loc="46:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x411ad3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x411ad5a0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x411ad680"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x411ad760"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x411ad840"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x411ad920"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x411ada00"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x411adae0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x411adbc0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x411adca0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x411add80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x411a9010" loc="48:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x411a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411a8578"/>
        <function-ref name="fired" scoped="" ref="0x411a9b70"/>
        <function-ref name="get" scoped="" ref="0x411a9658"/>
        <function-ref name="reset" scoped="" ref="0x411a9de8"/>
        <function-ref name="isOn" scoped="" ref="0x411a87f0"/>
        <function-ref name="set" scoped="" ref="0x411a98d0"/>
        <function-ref name="start" scoped="" ref="0x411a8088"/>
        <function-ref name="stop" scoped="" ref="0x411a8300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x411ac0f0" loc="47:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x411ac0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x411aab80"/>
        <function-ref name="test" scoped="" ref="0x411aa690"/>
        <function-ref name="get" scoped="" ref="0x411ac738"/>
        <function-ref name="captured" scoped="" ref="0x411acc50"/>
        <function-ref name="reset" scoped="" ref="0x411acef0"/>
        <function-ref name="isOn" scoped="" ref="0x411aa908"/>
        <function-ref name="set" scoped="" ref="0x411ac9b0"/>
        <function-ref name="start" scoped="" ref="0x411aa1a0"/>
        <function-ref name="stop" scoped="" ref="0x411aa418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x411a8c08" loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x411a8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411a51a0"/>
        <function-ref name="fired" scoped="" ref="0x411a7790"/>
        <function-ref name="get" scoped="" ref="0x411a7278"/>
        <function-ref name="reset" scoped="" ref="0x411a7a08"/>
        <function-ref name="isOn" scoped="" ref="0x411a5418"/>
        <function-ref name="set" scoped="" ref="0x411a74f0"/>
        <function-ref name="start" scoped="" ref="0x411a7c80"/>
        <function-ref name="stop" scoped="" ref="0x411a7ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x411a5830" loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x411a5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411a4d90"/>
        <function-ref name="fired" scoped="" ref="0x411a43b0"/>
        <function-ref name="get" scoped="" ref="0x411a5e78"/>
        <function-ref name="reset" scoped="" ref="0x411a4628"/>
        <function-ref name="isOn" scoped="" ref="0x411a3048"/>
        <function-ref name="set" scoped="" ref="0x411a4110"/>
        <function-ref name="start" scoped="" ref="0x411a48a0"/>
        <function-ref name="stop" scoped="" ref="0x411a4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411af0e0" loc="45:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411af0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x411aeb30"/>
        <function-ref name="test" scoped="" ref="0x411ae640"/>
        <function-ref name="get" scoped="" ref="0x411af728"/>
        <function-ref name="setScale" scoped="" ref="0x411aeda8"/>
        <function-ref name="getScale" scoped="" ref="0x411ad068"/>
        <function-ref name="reset" scoped="" ref="0x411afeb8"/>
        <function-ref name="overflow" scoped="" ref="0x411afc40"/>
        <function-ref name="isOn" scoped="" ref="0x411ae8b8"/>
        <function-ref name="set" scoped="" ref="0x411af9a0"/>
        <function-ref name="start" scoped="" ref="0x411ae150"/>
        <function-ref name="stop" scoped="" ref="0x411ae3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411d7a30" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411d7a30"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4035eae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4035eae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411d7c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x411d7e18" loc="47:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411d7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x411d5898"/>
        <function-ref name="test" scoped="" ref="0x411d53a8"/>
        <function-ref name="get" scoped="" ref="0x411d6488"/>
        <function-ref name="setScale" scoped="" ref="0x411d5b10"/>
        <function-ref name="getScale" scoped="" ref="0x411d5db0"/>
        <function-ref name="reset" scoped="" ref="0x411d6c18"/>
        <function-ref name="overflow" scoped="" ref="0x411d69a0"/>
        <function-ref name="isOn" scoped="" ref="0x411d5620"/>
        <function-ref name="set" scoped="" ref="0x411d6700"/>
        <function-ref name="start" scoped="" ref="0x411d6e90"/>
        <function-ref name="stop" scoped="" ref="0x411d5130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x411d30c0" loc="45:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x411d30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d00a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411d3810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x411d3d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x411d3a88"/>
        <function-ref name="overflow" scoped="" ref="0x411d2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x411d22f0" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411d22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41211d30"/>
        <function-ref name="test" scoped="" ref="0x41211840"/>
        <function-ref name="get" scoped="" ref="0x411d2938"/>
        <function-ref name="setScale" scoped="" ref="0x4120f010"/>
        <function-ref name="getScale" scoped="" ref="0x4120f2b0"/>
        <function-ref name="reset" scoped="" ref="0x412110d8"/>
        <function-ref name="overflow" scoped="" ref="0x411d2e50"/>
        <function-ref name="isOn" scoped="" ref="0x41211ab8"/>
        <function-ref name="set" scoped="" ref="0x411d2bb0"/>
        <function-ref name="start" scoped="" ref="0x41211350"/>
        <function-ref name="stop" scoped="" ref="0x412115c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4120d3b8" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4120d3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d00a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4120db08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4120b010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4120dd80"/>
        <function-ref name="overflow" scoped="" ref="0x4120b288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4120e170" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4120e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b06c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403b0890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4120e8c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4120edb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4120eb38"/>
        <function-ref name="overflow" scoped="" ref="0x4120d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x4120aad0" loc="47:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x4120aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4120aca8"/>
        <function-ref name="offset" scoped="" ref="0x4120ad88"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4120ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41200760" loc="49:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41200760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41200938"/>
        <function-ref name="getPayload" scoped="" ref="0x41200a18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41200af8"/>
        <function-ref name="cancel" scoped="" ref="0x41200bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x41200cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41200df8" loc="50:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41200df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4122f010"/>
        <function-ref name="payloadLength" scoped="" ref="0x4122f0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4122f1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4122f2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4122f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4122f4d0" loc="51:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4122f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4122f6a8"/>
        <function-ref name="source" scoped="" ref="0x4122f788"/>
        <function-ref name="address" scoped="" ref="0x4122f868"/>
        <function-ref name="destination" scoped="" ref="0x4122f948"/>
        <function-ref name="setSource" scoped="" ref="0x4122fa28"/>
        <function-ref name="setDestination" scoped="" ref="0x4122fb08"/>
        <function-ref name="type" scoped="" ref="0x4122fbe8"/>
        <function-ref name="setType" scoped="" ref="0x4122fcc8"/>
        <function-ref name="isForMe" scoped="" ref="0x4122fda8"/>
        <function-ref name="setGroup" scoped="" ref="0x4122fe88"/>
        <function-ref name="localGroup" scoped="" ref="0x4122e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4122e170" loc="52:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4122e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4122e348"/>
        <function-ref name="noAck" scoped="" ref="0x4122e428"/>
        <function-ref name="wasAcked" scoped="" ref="0x4122e508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417b1c48" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417b1c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417b1e20"/>
        <function-ref name="getPayload" scoped="" ref="0x417b1f00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417ad010"/>
        <function-ref name="cancel" scoped="" ref="0x417ad0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x417ad1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x417ad340" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417ad340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417ad518"/>
        <function-ref name="getPayload" scoped="" ref="0x417ad5f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417ad6d8"/>
        <function-ref name="cancel" scoped="" ref="0x417ad7b8"/>
        <function-ref name="sendDone" scoped="" ref="0x417ad898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417ad9d8" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417ad9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417adbb0"/>
        <function-ref name="source" scoped="" ref="0x417adc90"/>
        <function-ref name="address" scoped="" ref="0x417add70"/>
        <function-ref name="destination" scoped="" ref="0x417ade50"/>
        <function-ref name="setSource" scoped="" ref="0x417ac010"/>
        <function-ref name="setDestination" scoped="" ref="0x417ac0f0"/>
        <function-ref name="type" scoped="" ref="0x417ac1d0"/>
        <function-ref name="setType" scoped="" ref="0x417ac2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x417ac390"/>
        <function-ref name="setGroup" scoped="" ref="0x417ac470"/>
        <function-ref name="localGroup" scoped="" ref="0x417ac550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x411f96e0" loc="44:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x411f96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411f98b8"/>
        <function-ref name="getPayload" scoped="" ref="0x411f9998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f9a78"/>
        <function-ref name="cancel" scoped="" ref="0x411f9b58"/>
        <function-ref name="sendDone" scoped="" ref="0x411f9c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x411f5598" loc="48:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411f5598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411f5780"/>
        <function-ref name="getPayload" scoped="" ref="0x411f5860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f5940"/>
        <function-ref name="cancel" scoped="" ref="0x411f5a20"/>
        <function-ref name="sendDone" scoped="" ref="0x411f5b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x411f6db8" loc="46:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x411f6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411f5010"/>
        <function-ref name="getPayload" scoped="" ref="0x411f50f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f51d0"/>
        <function-ref name="cancel" scoped="" ref="0x411f52b0"/>
        <function-ref name="sendDone" scoped="" ref="0x411f5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x411f4850" loc="50:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411f4850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411f4a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x411f4b08"/>
        <function-ref name="getPayload" scoped="" ref="0x411f4be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f4cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411f4da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x411f4f28" loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x411f4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411f3110"/>
        <function-ref name="runTask" scoped="" ref="0x411f31f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x411f3370" loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x411f3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411f3548"/>
        <function-ref name="runTask" scoped="" ref="0x411f3628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x411f5c40" loc="49:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411f5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411f5e18"/>
        <function-ref name="source" scoped="" ref="0x411f5ef8"/>
        <function-ref name="address" scoped="" ref="0x411f4010"/>
        <function-ref name="destination" scoped="" ref="0x411f40f0"/>
        <function-ref name="setSource" scoped="" ref="0x411f41d0"/>
        <function-ref name="setDestination" scoped="" ref="0x411f42b0"/>
        <function-ref name="type" scoped="" ref="0x411f4390"/>
        <function-ref name="setType" scoped="" ref="0x411f4470"/>
        <function-ref name="isForMe" scoped="" ref="0x411f4550"/>
        <function-ref name="setGroup" scoped="" ref="0x411f4630"/>
        <function-ref name="localGroup" scoped="" ref="0x411f4710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4122ca10" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="SenseAppC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4122ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
            <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4122bae0"/>
        <function-ref name="maxSize" scoped="" ref="0x4122b4f8"/>
        <function-ref name="empty" scoped="" ref="0x4122b048"/>
        <function-ref name="put" scoped="" ref="0x4122b750"/>
        <function-ref name="size" scoped="" ref="0x4122b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x417dd0c0" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="SenseAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x417dd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
            <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x417db198"/>
        <function-ref name="maxSize" scoped="" ref="0x417ddb98"/>
        <function-ref name="empty" scoped="" ref="0x417dd6e8"/>
        <function-ref name="put" scoped="" ref="0x417dddf0"/>
        <function-ref name="size" scoped="" ref="0x417dd940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417decf0" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="SenseAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417decf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417deec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x41229d38" loc="43:/opt/tinyos/tos/system/QueueC.nc">
      <component-ref qname="SenseAppC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41229d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
              <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41228a78"/>
        <function-ref name="enqueue" scoped="" ref="0x41227178"/>
        <function-ref name="element" scoped="" ref="0x412274c8"/>
        <function-ref name="maxSize" scoped="" ref="0x41228820"/>
        <function-ref name="dequeue" scoped="" ref="0x41228de8"/>
        <function-ref name="empty" scoped="" ref="0x41228370"/>
        <function-ref name="size" scoped="" ref="0x412285c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41221b28" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41221b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41221d00"/>
        <function-ref name="stop" scoped="" ref="0x41221de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x412168d8" loc="52:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x412168d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41216ab0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41216b90"/>
        <function-ref name="reset" scoped="" ref="0x41216c70"/>
        <function-ref name="start" scoped="" ref="0x41216d50"/>
        <function-ref name="stop" scoped="" ref="0x41216e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x41218480" loc="51:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x41218480"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x41218738"/>
        <function-ref name="stop" scoped="" ref="0x41218ab8"/>
        <function-ref name="newData" scoped="" ref="0x41218818"/>
        <function-ref name="start" scoped="" ref="0x412188f8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x412189d8"/>
        <function-ref name="requestData" scoped="" ref="0x41218658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x412206d0" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x412206d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412208a8"/>
        <function-ref name="stop" scoped="" ref="0x41220988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x4121d3e0" loc="53:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x4121d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4121d5b8"/>
        <function-ref name="stop" scoped="" ref="0x4121d698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x412513f8" loc="57:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x412513f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412515d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x41252c58" loc="56:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x41252c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41252e30"/>
        <function-ref name="getPayload" scoped="" ref="0x41252f10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41251010"/>
        <function-ref name="cancel" scoped="" ref="0x412510f0"/>
        <function-ref name="sendDone" scoped="" ref="0x412511d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41252190" loc="53:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41252190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41252368"/>
        <function-ref name="getPayload" scoped="" ref="0x41252448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41252528"/>
        <function-ref name="cancel" scoped="" ref="0x41252608"/>
        <function-ref name="sendDone" scoped="" ref="0x412526e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x41212250" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41212250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41212428"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41212508"/>
        <function-ref name="reset" scoped="" ref="0x412125e8"/>
        <function-ref name="start" scoped="" ref="0x412126c8"/>
        <function-ref name="stop" scoped="" ref="0x412127a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x41213710" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x41213710"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x412139c8"/>
        <function-ref name="stop" scoped="" ref="0x41213d48"/>
        <function-ref name="newData" scoped="" ref="0x41213aa8"/>
        <function-ref name="start" scoped="" ref="0x41213b88"/>
        <function-ref name="requestSeqno" scoped="" ref="0x41213c68"/>
        <function-ref name="requestData" scoped="" ref="0x412138e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x41252870" loc="54:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41252870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41252a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41251740" loc="59:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41251740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41251918"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412519f8"/>
        <function-ref name="led1On" scoped="" ref="0x41251ad8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41251bb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41251c98"/>
        <function-ref name="get" scoped="" ref="0x41251d78"/>
        <function-ref name="led1Off" scoped="" ref="0x41251e58"/>
        <function-ref name="led2Off" scoped="" ref="0x412502b0"/>
        <function-ref name="set" scoped="" ref="0x41250010"/>
        <function-ref name="led0On" scoped="" ref="0x412500f0"/>
        <function-ref name="led2On" scoped="" ref="0x412501d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4121df28" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4121df28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41213110"/>
        <function-ref name="stop" scoped="" ref="0x412131f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x41212d20" loc="51:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x41212d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41212ef8"/>
        <function-ref name="stop" scoped="" ref="0x41252010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41214af8" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41214af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41214cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x41214db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41214e90"/>
        <function-ref name="cancel" scoped="" ref="0x41267010"/>
        <function-ref name="sendDone" scoped="" ref="0x412670f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41267230" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41267230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41267408"/>
        <function-ref name="payloadLength" scoped="" ref="0x412674e8"/>
        <function-ref name="getPayload" scoped="" ref="0x412675c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412676a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41267788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412678c8" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412678c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41267aa0"/>
        <function-ref name="source" scoped="" ref="0x41267b80"/>
        <function-ref name="address" scoped="" ref="0x41267c60"/>
        <function-ref name="destination" scoped="" ref="0x41267d40"/>
        <function-ref name="setSource" scoped="" ref="0x41267e20"/>
        <function-ref name="setDestination" scoped="" ref="0x41267f00"/>
        <function-ref name="type" scoped="" ref="0x41266010"/>
        <function-ref name="setType" scoped="" ref="0x412660f0"/>
        <function-ref name="isForMe" scoped="" ref="0x412661d0"/>
        <function-ref name="setGroup" scoped="" ref="0x412662b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41266390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x412664f0" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x412664f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x412666c8"/>
        <function-ref name="noAck" scoped="" ref="0x412667a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41266888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417ca6a0" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417ca6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417ca878"/>
        <function-ref name="getPayload" scoped="" ref="0x417ca958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417caa38"/>
        <function-ref name="cancel" scoped="" ref="0x417cab18"/>
        <function-ref name="sendDone" scoped="" ref="0x417cabf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x417cad38" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x417cad38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x417caf10"/>
        <function-ref name="payloadLength" scoped="" ref="0x417c9010"/>
        <function-ref name="getPayload" scoped="" ref="0x417c90f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417c91d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417c92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x417c93f0" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417c93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417c95c8"/>
        <function-ref name="source" scoped="" ref="0x417c96a8"/>
        <function-ref name="address" scoped="" ref="0x417c9788"/>
        <function-ref name="destination" scoped="" ref="0x417c9868"/>
        <function-ref name="setSource" scoped="" ref="0x417c9948"/>
        <function-ref name="setDestination" scoped="" ref="0x417c9a28"/>
        <function-ref name="type" scoped="" ref="0x417c9b08"/>
        <function-ref name="setType" scoped="" ref="0x417c9be8"/>
        <function-ref name="isForMe" scoped="" ref="0x417c9cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x417c9da8"/>
        <function-ref name="localGroup" scoped="" ref="0x417c9e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x417c8010" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x417c8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x417c81e8"/>
        <function-ref name="noAck" scoped="" ref="0x417c82c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x417c83a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417c31f0" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417c31f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417c33c8"/>
        <function-ref name="getPayload" scoped="" ref="0x417c34a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417c3588"/>
        <function-ref name="cancel" scoped="" ref="0x417c3668"/>
        <function-ref name="sendDone" scoped="" ref="0x417c3748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x417c38b8" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417c38b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417c3a90"/>
        <function-ref name="getPayload" scoped="" ref="0x417c3b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417c3c50"/>
        <function-ref name="cancel" scoped="" ref="0x417c3d30"/>
        <function-ref name="sendDone" scoped="" ref="0x417c3e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417c2010" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417c2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417c21e8"/>
        <function-ref name="source" scoped="" ref="0x417c22c8"/>
        <function-ref name="address" scoped="" ref="0x417c23a8"/>
        <function-ref name="destination" scoped="" ref="0x417c2488"/>
        <function-ref name="setSource" scoped="" ref="0x417c2568"/>
        <function-ref name="setDestination" scoped="" ref="0x417c2648"/>
        <function-ref name="type" scoped="" ref="0x417c2728"/>
        <function-ref name="setType" scoped="" ref="0x417c2808"/>
        <function-ref name="isForMe" scoped="" ref="0x417c28e8"/>
        <function-ref name="setGroup" scoped="" ref="0x417c29c8"/>
        <function-ref name="localGroup" scoped="" ref="0x417c2aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41263328" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41263328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41263500"/>
        <function-ref name="payloadLength" scoped="" ref="0x412635e0"/>
        <function-ref name="getPayload" scoped="" ref="0x412636c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412637a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41263880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41263010" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41263010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412631e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412639c0" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412639c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41263b98"/>
        <function-ref name="source" scoped="" ref="0x41263c78"/>
        <function-ref name="address" scoped="" ref="0x41263d58"/>
        <function-ref name="destination" scoped="" ref="0x41263e38"/>
        <function-ref name="setSource" scoped="" ref="0x41263f18"/>
        <function-ref name="setDestination" scoped="" ref="0x41262010"/>
        <function-ref name="type" scoped="" ref="0x412620f0"/>
        <function-ref name="setType" scoped="" ref="0x412621d0"/>
        <function-ref name="isForMe" scoped="" ref="0x412622b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41262390"/>
        <function-ref name="localGroup" scoped="" ref="0x41262470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41261a28" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41261a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41261c00"/>
        <function-ref name="getPayload" scoped="" ref="0x41261ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41261dc0"/>
        <function-ref name="cancel" scoped="" ref="0x41261ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x41260010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41260150" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41260150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41260328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41260408"/>
        <function-ref name="getPayload" scoped="" ref="0x412604e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412605c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412606a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412607e8" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412607e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412609c0"/>
        <function-ref name="source" scoped="" ref="0x41260aa0"/>
        <function-ref name="address" scoped="" ref="0x41260b80"/>
        <function-ref name="destination" scoped="" ref="0x41260c60"/>
        <function-ref name="setSource" scoped="" ref="0x41260d40"/>
        <function-ref name="setDestination" scoped="" ref="0x41260e20"/>
        <function-ref name="type" scoped="" ref="0x41260f00"/>
        <function-ref name="setType" scoped="" ref="0x4125f010"/>
        <function-ref name="isForMe" scoped="" ref="0x4125f0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x4125f1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x4125f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4125f410" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4125f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4125f5e8"/>
        <function-ref name="noAck" scoped="" ref="0x4125f6c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4125f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4180b528" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4180b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4180b700"/>
        <function-ref name="getPayload" scoped="" ref="0x4180b7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4180b8c0"/>
        <function-ref name="cancel" scoped="" ref="0x4180b9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x4180ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4180bbc0" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4180bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4180bd98"/>
        <function-ref name="payloadLength" scoped="" ref="0x4180be78"/>
        <function-ref name="getPayload" scoped="" ref="0x4180a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4180a0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4180a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4180a310" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4180a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4180a4e8"/>
        <function-ref name="source" scoped="" ref="0x4180a5c8"/>
        <function-ref name="address" scoped="" ref="0x4180a6a8"/>
        <function-ref name="destination" scoped="" ref="0x4180a788"/>
        <function-ref name="setSource" scoped="" ref="0x4180a868"/>
        <function-ref name="setDestination" scoped="" ref="0x4180a948"/>
        <function-ref name="type" scoped="" ref="0x4180aa28"/>
        <function-ref name="setType" scoped="" ref="0x4180ab08"/>
        <function-ref name="isForMe" scoped="" ref="0x4180abe8"/>
        <function-ref name="setGroup" scoped="" ref="0x4180acc8"/>
        <function-ref name="localGroup" scoped="" ref="0x4180ada8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4180af08" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4180af08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x418090f0"/>
        <function-ref name="noAck" scoped="" ref="0x418091d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x418092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41803060" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41803060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41803238"/>
        <function-ref name="getPayload" scoped="" ref="0x41803318"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418033f8"/>
        <function-ref name="cancel" scoped="" ref="0x418034d8"/>
        <function-ref name="sendDone" scoped="" ref="0x418035b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41803728" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41803728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41803900"/>
        <function-ref name="getPayload" scoped="" ref="0x418039e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41803ac0"/>
        <function-ref name="cancel" scoped="" ref="0x41803ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x41803c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41803dc0" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41803dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41802010"/>
        <function-ref name="source" scoped="" ref="0x418020f0"/>
        <function-ref name="address" scoped="" ref="0x418021d0"/>
        <function-ref name="destination" scoped="" ref="0x418022b0"/>
        <function-ref name="setSource" scoped="" ref="0x41802390"/>
        <function-ref name="setDestination" scoped="" ref="0x41802470"/>
        <function-ref name="type" scoped="" ref="0x41802550"/>
        <function-ref name="setType" scoped="" ref="0x41802630"/>
        <function-ref name="isForMe" scoped="" ref="0x41802710"/>
        <function-ref name="setGroup" scoped="" ref="0x418027f0"/>
        <function-ref name="localGroup" scoped="" ref="0x418028d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4125d328" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4125d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4125d500"/>
        <function-ref name="payloadLength" scoped="" ref="0x4125d5e0"/>
        <function-ref name="getPayload" scoped="" ref="0x4125d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4125d7a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4125d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4125d010" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4125d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4125d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4125d9c0" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4125d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4125db98"/>
        <function-ref name="source" scoped="" ref="0x4125dc78"/>
        <function-ref name="address" scoped="" ref="0x4125dd58"/>
        <function-ref name="destination" scoped="" ref="0x4125de38"/>
        <function-ref name="setSource" scoped="" ref="0x4125df18"/>
        <function-ref name="setDestination" scoped="" ref="0x4125c010"/>
        <function-ref name="type" scoped="" ref="0x4125c0f0"/>
        <function-ref name="setType" scoped="" ref="0x4125c1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4125c2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4125c390"/>
        <function-ref name="localGroup" scoped="" ref="0x4125c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4125b560" loc="46:/opt/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4125b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4125b738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4125b8c8" loc="47:/opt/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4125b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4125baa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4125bb80"/>
        <function-ref name="led1On" scoped="" ref="0x4125bc60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4125bd40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4125be20"/>
        <function-ref name="get" scoped="" ref="0x4125bf00"/>
        <function-ref name="led1Off" scoped="" ref="0x41258010"/>
        <function-ref name="led2Off" scoped="" ref="0x41258390"/>
        <function-ref name="set" scoped="" ref="0x412580f0"/>
        <function-ref name="led0On" scoped="" ref="0x412581d0"/>
        <function-ref name="led2On" scoped="" ref="0x412582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x412e22d0" loc="51:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="SenseAppC.ChangerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x412e22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403fb310"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403fb848"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x412e28f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x412b33d8" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="SenseAppC.ChangerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x412b33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403fb310"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403fb848"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x412e2010"/>
        <function-ref name="get" scoped="" ref="0x412b3a20"/>
        <function-ref name="set" scoped="" ref="0x412b3c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x417f15f0" loc="62:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x417f15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417f17c8"/>
        <function-ref name="runTask" scoped="" ref="0x417f18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x417f21b0" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x417f21b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x417f2468"/>
        <function-ref name="storeData" scoped="" ref="0x417f27e8"/>
        <function-ref name="newData" scoped="" ref="0x417f2548"/>
        <function-ref name="start" scoped="" ref="0x417f2628"/>
        <function-ref name="requestSeqno" scoped="" ref="0x417f2708"/>
        <function-ref name="stop" scoped="" ref="0x417f2388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x417f4820" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x417f4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403fb310"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403fb848"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x417f4e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x417f2948" loc="52:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x417f2948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x417f2b20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x417f2c00"/>
        <function-ref name="led1On" scoped="" ref="0x417f2ce0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x417f2dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x417f2ea0"/>
        <function-ref name="get" scoped="" ref="0x417f1010"/>
        <function-ref name="led1Off" scoped="" ref="0x417f10f0"/>
        <function-ref name="led0On" scoped="" ref="0x417f1470"/>
        <function-ref name="set" scoped="" ref="0x417f12b0"/>
        <function-ref name="led2On" scoped="" ref="0x417f11d0"/>
        <function-ref name="led2Off" scoped="" ref="0x417f1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x417f59f0" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x417f59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403fb310"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403fb848"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x417f4560"/>
        <function-ref name="get" scoped="" ref="0x417f4048"/>
        <function-ref name="set" scoped="" ref="0x417f42c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x417f5548" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x417f5548"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x417f5720"/>
        <function-ref name="stop" scoped="" ref="0x417f5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x412b2100" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x412b2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x412b22d8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x412b23b8"/>
        <function-ref name="reset" scoped="" ref="0x412b2498"/>
        <function-ref name="start" scoped="" ref="0x412b2578"/>
        <function-ref name="stop" scoped="" ref="0x412b2658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x412e3118" loc="55:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x412e3118"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x412e3300"/>
        <function-ref name="incrementCounter" scoped="" ref="0x412e33e0"/>
        <function-ref name="reset" scoped="" ref="0x412e34c0"/>
        <function-ref name="start" scoped="" ref="0x412e35a0"/>
        <function-ref name="stop" scoped="" ref="0x412e3680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x4184e240" loc="62:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x4184e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4184e418"/>
        <function-ref name="clear" scoped="" ref="0x4184e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x4184e5d8"/>
        <function-ref name="get" scoped="" ref="0x4184e6b8"/>
        <function-ref name="assign" scoped="" ref="0x4184e798"/>
        <function-ref name="setAll" scoped="" ref="0x4184e878"/>
        <function-ref name="set" scoped="" ref="0x4184e958"/>
        <function-ref name="size" scoped="" ref="0x4184ea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x4184eb98" loc="63:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x4184eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4184ed70"/>
        <function-ref name="clear" scoped="" ref="0x4184ee50"/>
        <function-ref name="toggle" scoped="" ref="0x4184d010"/>
        <function-ref name="get" scoped="" ref="0x4184d0f0"/>
        <function-ref name="assign" scoped="" ref="0x4184d1d0"/>
        <function-ref name="setAll" scoped="" ref="0x4184d2b0"/>
        <function-ref name="set" scoped="" ref="0x4184d390"/>
        <function-ref name="size" scoped="" ref="0x4184d470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4184d5b0" loc="64:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4184d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4184d788"/>
        <function-ref name="rand32" scoped="" ref="0x4184d868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x418528d0" loc="58:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x418528d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41852ab8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41852b98"/>
        <function-ref name="reset" scoped="" ref="0x41852c78"/>
        <function-ref name="start" scoped="" ref="0x41852d58"/>
        <function-ref name="stop" scoped="" ref="0x41852e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41852520" loc="57:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41852520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418526f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x4184c5f0" loc="154:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x4184c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4184c7c8"/>
        <function-ref name="runTask" scoped="" ref="0x4184c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4184d9a8" loc="65:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4184d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4184db80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4184dc60"/>
        <function-ref name="led1On" scoped="" ref="0x4184dd40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4184de20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4184df00"/>
        <function-ref name="get" scoped="" ref="0x4184c010"/>
        <function-ref name="led1Off" scoped="" ref="0x4184c0f0"/>
        <function-ref name="led0On" scoped="" ref="0x4184c470"/>
        <function-ref name="set" scoped="" ref="0x4184c2b0"/>
        <function-ref name="led2On" scoped="" ref="0x4184c1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x4184c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41851058" loc="61:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41851058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4184fb38"/>
        <function-ref name="fired" scoped="" ref="0x41851dd8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4184f4f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4184f2a0"/>
        <function-ref name="getdt" scoped="" ref="0x4184e010"/>
        <function-ref name="gett0" scoped="" ref="0x4184fd90"/>
        <function-ref name="isRunning" scoped="" ref="0x4184f048"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41851680"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4184f818"/>
        <function-ref name="startOneShot" scoped="" ref="0x41851900"/>
        <function-ref name="stop" scoped="" ref="0x41851b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4184a010" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4184a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b2e28"/>
            <typename><typedef-ref name="TMilli" ref="0x403b0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41848b00"/>
        <function-ref name="fired" scoped="" ref="0x4184ad90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x418484c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41848268"/>
        <function-ref name="getdt" scoped="" ref="0x41847010"/>
        <function-ref name="gett0" scoped="" ref="0x41848d58"/>
        <function-ref name="isRunning" scoped="" ref="0x41848010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4184a638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x418487e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4184a8b8"/>
        <function-ref name="stop" scoped="" ref="0x4184ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41847d00" loc="46:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41847d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41847ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41846060" loc="47:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41846060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41846238"/>
        <function-ref name="clear" scoped="" ref="0x41846318"/>
        <function-ref name="toggle" scoped="" ref="0x418463f8"/>
        <function-ref name="get" scoped="" ref="0x418464d8"/>
        <function-ref name="assign" scoped="" ref="0x418465b8"/>
        <function-ref name="setAll" scoped="" ref="0x41846698"/>
        <function-ref name="set" scoped="" ref="0x41846778"/>
        <function-ref name="size" scoped="" ref="0x41846858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418454c0" loc="46:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418454c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41845698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x418457f8" loc="47:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x418457f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x418459d0"/>
        <function-ref name="clear" scoped="" ref="0x41845ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41845b90"/>
        <function-ref name="get" scoped="" ref="0x41845c70"/>
        <function-ref name="assign" scoped="" ref="0x41845d50"/>
        <function-ref name="setAll" scoped="" ref="0x41845e30"/>
        <function-ref name="set" scoped="" ref="0x41845f10"/>
        <function-ref name="size" scoped="" ref="0x41844010"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x40440848" loc="43:/opt/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x40440090" loc="41:/opt/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x40440488" loc="42:/opt/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40442170" loc="50:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40443dd8" loc="50:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40442010" loc="50:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x4043a5c8" loc="44:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4043a260" loc="44:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4043a468" loc="44:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40443398" loc="47:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40443010" loc="47:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40443238" loc="47:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x4043de50" loc="43:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4043dcf8" loc="43:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40443988" loc="49:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40443830" loc="49:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x4043aba0" loc="46:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4043aa48" loc="46:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403fe470" loc="60:/opt/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x403fdaf0" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403fd998" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x403fc850" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403fc6f8" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x403fd2b0" loc="104:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403fc018" loc="130:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40456788" loc="48:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40456788"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x4045b010" loc="60:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40456788"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40456dd8" loc="60:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40456788"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4045ec98" loc="49:/opt/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4045ec98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40468158" loc="55:/opt/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40468908" loc="63:/opt/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4045ec98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x404685d8" loc="63:/opt/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x404687a8" loc="63:/opt/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4045ec98"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4036c138" loc="67:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4036c650" loc="75:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x40430bc0" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40430880" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40430a60" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40438a18" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404386b8" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40438898" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40438158" loc="112:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40439b38" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404399e0" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40437820" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404374c8" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404376c0" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40444ee0" loc="50:/opt/tinyos/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40444ee0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4044fb70" loc="97:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40444ee0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40450df0" loc="80:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x404503a8" loc="61:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x4044f410" loc="89:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40444ee0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4044f2b8" loc="89:/opt/tinyos/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40444ee0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x404508b8" loc="72:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x404020f8" loc="95:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404025c0" loc="105:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x403ffa10" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403ff4b0" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x403ff6c8" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403ff8a8" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404455c0" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40445260" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40445440" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40448ce8" loc="123:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404476c8" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40447570" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404483e0" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40448088" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40448280" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40435630" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
              <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404350e8" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404352c8" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404354a8" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40458038" loc="61:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40458480" loc="67:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40458900" loc="72:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404611a8" loc="83:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40461e98" loc="100:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4045f390" loc="117:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40458d28" loc="77:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4045fad0" loc="134:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4045f978" loc="134:/opt/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40459bf0" loc="56:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40461628" loc="89:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40461a50" loc="94:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40403e20" loc="43:/opt/tinyos/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40403e20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x4044c038" loc="73:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40403e20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x4044cef0" loc="90:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40403e20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4044cd98" loc="90:/opt/tinyos/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40403e20"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40036740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x40036740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x4044b7f8" loc="101:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40403e20"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4044b6a0" loc="101:/opt/tinyos/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x4044dbd8" loc="65:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4044c6e0" loc="81:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40403e20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x4044d2d8" loc="50:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4044d720" loc="58:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404550d8" loc="44:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404550d8"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x40454090" loc="69:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40455580" loc="55:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404550d8"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40455bc0" loc="64:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404550d8"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x40455a68" loc="64:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404550d8"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4045d010" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4045d010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40463790" loc="136:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404665b8" loc="83:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40465720" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404653d8" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404655c0" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40466f08" loc="98:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40462138" loc="151:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40463bd8" loc="144:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40466a48" loc="92:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4045d668" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4045d510" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40463170" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40465dc0" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40463010" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4045dd00" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4045dba8" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404661f0" loc="78:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404965b0" loc="62:/opt/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404a5088" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4049bf10" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4049c6e8" loc="31:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4049cd20" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4049cbc8" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4049b410" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4049b2b8" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4049b968" loc="53:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x404b1ce8" loc="44:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404b00f8" loc="45:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404b1558" loc="42:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404b08c8" loc="47:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404b1918" loc="43:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404b04d0" loc="46:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404aae00" loc="40:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404b11a8" loc="41:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40363890" loc="57:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403661a8" loc="72:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40363cd0" loc="65:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d4c78" loc="76:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403e9f28" loc="62:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4039b798"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403e9250" loc="52:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405bf5e8" loc="53:/opt/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405bf5e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405bfac8" loc="61:/opt/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405c4ec0" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405c4ec0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405c1038" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c1038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405c1520" loc="64:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c1038"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x405d0010" loc="76:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x405c1a48" loc="71:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405d0438" loc="82:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405bde10" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405bde10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405c7010" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c7010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405c5350" loc="109:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c7010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405c6010" loc="78:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405c6cd8" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c7010"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c7010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405c6988" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c7010"/></type-var>
          </variable>
          <variable name="dt" ref="0x405c6b78" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c7010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405c6480" loc="88:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405c57e0" loc="116:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c7010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405c7640" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c7010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405c74e8" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c7010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405c7b20" loc="73:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x405e7560" loc="45:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ba1f0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403ba418"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x405e6b28" loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bc208"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403bc430"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405e6070" loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403beac0"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403bece8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x405e6678" loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403beac0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403bece8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405e6520" loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403beac0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403bece8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x405e5168" loc="54:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bc208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403bc430"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405e5010" loc="54:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bc208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403bc430"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x405e7b80" loc="46:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ba1f0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403ba418"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405e7a28" loc="46:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ba1f0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403ba418"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x405ec700" loc="38:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x405ecbd0" loc="44:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x405ec2e8" loc="32:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405eb0c8" loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x405e87f8" loc="21:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bf360"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x403bf588"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x405e8de8" loc="27:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bf360"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403bf588"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x405e8c90" loc="27:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bf360"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403bf588"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405e4010" loc="41:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e4010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x405e3f20" loc="74:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405e4ed0" loc="58:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405e4508" loc="48:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e4010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405e32f8" loc="62:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405e1398" loc="80:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405e4a90" loc="54:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e4010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405e4938" loc="54:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e4010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405e3700" loc="65:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405e3af8" loc="68:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x405d1608" loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405d1608"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x405dddb0" loc="98:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405dd520" loc="87:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405d1af8" loc="61:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405d1608"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x405db350" loc="104:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x405db1f8" loc="104:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x405db7e0" loc="110:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405de8d8" loc="75:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405de4b8" loc="70:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405dd988" loc="93:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405de088" loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405d1608"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405d1f18" loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405d1608"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405dece0" loc="78:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405dd0f8" loc="81:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x406dd328" loc="61:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x406dd1d0" loc="61:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x406ee2a8" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x406dcae0" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x406dccd0" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x406dcee8" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x406ee138" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x406ddad8" loc="64:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x406dd788" loc="64:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x406dd978" loc="64:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x406eeeb0" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x406ee700" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x406ee918" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x406eeb30" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x406eed40" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x406dc6a0" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x406ddf18" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x406dc130" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x406dc330" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x406dc530" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x406d0908" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d03e0" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x406d05c0" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406d07a0" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x406cf168" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406cf010" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x406cfb38" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406cf9e0" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x406cdaf0" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406cd790" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406cd970" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x406cd1a8" loc="106:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x406cc7e8" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406cc4a8" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406cc688" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x406e3930" loc="96:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x406e37d8" loc="96:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x406e4070" loc="83:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x406e3348" loc="95:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x406d15c8" loc="71:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x406d1010" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x406bde70" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x406d1b18" loc="78:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x406e48b8" loc="88:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x406e4550" loc="88:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x406e4758" loc="88:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x406e14e0" loc="98:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x406e1388" loc="98:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x406bd940" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x406bd7e8" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x406e3f20" loc="97:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x406e3dc8" loc="97:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x406e4ec0" loc="93:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x406e4d68" loc="93:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x406ca7d0" loc="7:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x406cad80" loc="14:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x406cac28" loc="14:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x406d6388" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d6030" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x406d6228" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x406c8e30" loc="52:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c8ab0" loc="52:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x406c8cd0" loc="52:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x406d9898" loc="58:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d9548" loc="58:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x406d9738" loc="58:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x406d85c8" loc="61:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d8260" loc="61:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406d8468" loc="61:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x406c8690" loc="49:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c82f0" loc="49:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x406c8530" loc="49:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x406d9168" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d9010" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x406d9e50" loc="60:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d9cf8" loc="60:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x406d5060" loc="67:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d6cf8" loc="67:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x406d6ed0" loc="67:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x406beec0" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406beb20" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x406bed60" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x406d4060" loc="70:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x406d5cd8" loc="70:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x406d5ee8" loc="70:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x406da3f8" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406da2a0" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x406d8bb8" loc="63:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d8a60" loc="63:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x406d58a0" loc="69:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x406d5530" loc="69:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x406d5740" loc="69:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x406d6910" loc="66:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d67b8" loc="66:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x406dab18" loc="55:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406da7d8" loc="55:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x406da9b8" loc="55:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x406de010" loc="46:/opt/tinyos/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x4043d4f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x406f7e48" loc="62:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406f7cf0" loc="62:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x406f72b8" loc="55:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406f7160" loc="55:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x406f6418" loc="66:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406f62c0" loc="66:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x406e5cc8" loc="52:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406e5b70" loc="52:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x406f5010" loc="72:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406f6de8" loc="72:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x406f69d8" loc="69:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406f6880" loc="69:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x406f78a8" loc="58:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406f7750" loc="58:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x406e56d0" loc="49:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406e5578" loc="49:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40700320" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40700320"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40700488" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40700488"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x407036a8" loc="63:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40700488"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40703550" loc="63:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40716168" loc="70:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40716010" loc="70:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40700b10" loc="49:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407009b8" loc="49:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40716c28" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40700488"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407168b8" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40716ac8" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40700488"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40710bd8" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40710840" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40710a78" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x4070d6c8" loc="71:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070d570" loc="71:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40710368" loc="57:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40713cc8" loc="52:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40713b70" loc="52:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40701d60" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40701c08" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x407089c8" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40708870" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40706460" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40706308" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4070b088" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404260d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f9f08" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x406ff8f0" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406ff798" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x407027c0" loc="68:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40702e58" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40702d00" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406fc218" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406fee80" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406fc0b8" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406fe500" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406fe198" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406fe3a0" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x406fba28" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406fb8d0" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x406f9580" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f9250" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x406f9420" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40427e40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x406fcdb8" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406fcc60" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4070bd08" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404260d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4070b9a8" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4070bba8" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404260d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x407095a0" loc="195:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404260d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x40739b98" loc="95:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40739a40" loc="95:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x40725a88" loc="81:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40725930" loc="81:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x40726bf0" loc="66:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40726a98" loc="66:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x40726510" loc="60:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x407263b8" loc="60:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x40725218" loc="73:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x407250c0" loc="73:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x40739370" loc="88:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40739218" loc="88:/opt/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x407334b0" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40733138" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40733350" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x4072c878" loc="56:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4072c520" loc="56:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x4072c718" loc="56:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x40729838" loc="77:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407294b8" loc="77:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x407296d8" loc="77:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x4072cf00" loc="64:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x400391d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4072cda8" loc="64:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x4072be98" loc="75:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4072bd40" loc="75:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x4072c058" loc="47:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40717ec0" loc="47:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x4072b5f8" loc="72:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4072b4a0" loc="72:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40734460" loc="65:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40734308" loc="65:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40728898" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40728500" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40728738" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40736af8" loc="59:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407369a0" loc="59:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40736480" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407360e8" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40736320" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40734d80" loc="71:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40734c28" loc="71:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40727010" loc="47:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072ee88" loc="47:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40742e28" loc="120:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40742508" loc="97:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4072fd90" loc="88:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x407429b8" loc="102:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x407415f0" loc="128:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x407459b0" loc="51:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40745668" loc="51:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x40745850" loc="51:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407594f0" loc="65:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x40758c10" loc="84:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40758420" loc="84:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x407588c8" loc="84:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40758aa8" loc="84:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40759ef8" loc="73:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40759ba0" loc="73:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40759d98" loc="73:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x40759018" loc="58:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x40745ea8" loc="58:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40756900" loc="52:/opt/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40756458" loc="46:/opt/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x40752808" loc="49:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40752690" loc="49:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x407521c8" loc="42:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x40407420"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x40406470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40752030" loc="42:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x407512f8" loc="53:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x40406b30"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x40405a88"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40751160" loc="53:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x407489d8" loc="71:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x40747cc8" loc="97:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x40747860" loc="90:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x4074bb58" loc="51:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x40748500" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x40748ef0" loc="76:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x407473f0" loc="83:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x40748070" loc="56:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x40764ac8" loc="71:/opt/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x40750c58" loc="56:/opt/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x40764660" loc="66:/opt/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x40764508" loc="66:/opt/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x40764090" loc="61:/opt/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x40750168" loc="45:/opt/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x40750010" loc="45:/opt/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x407507d0" loc="51:/opt/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x40750678" loc="51:/opt/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x40787248" loc="106:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x40788eb0" loc="106:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x407870e8" loc="106:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x40788518" loc="93:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x40789f20" loc="87:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x40789b30" loc="87:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x40789dc0" loc="87:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x4078c378" loc="55:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4078c220" loc="55:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x40788a30" loc="98:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x4078ac10" loc="72:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4078aab8" loc="72:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4078cd10" loc="61:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4078cbb8" loc="61:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x40787d30" loc="117:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x40789620" loc="78:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x407894c8" loc="78:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x40787868" loc="112:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x4078a1a8" loc="66:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40712ad0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x40720010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x4078a638" loc="71:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x4078fd58" loc="54:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4078c788" loc="60:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x40789070" loc="77:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x407a6ed0" loc="55:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40400120"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407a6d78" loc="55:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x407b4598" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40400120"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407b4440" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x40795d78" loc="48:/opt/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40712ad0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x40720010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x407a2a98" loc="50:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x407a0328" loc="60:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x407a2f08" loc="55:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404260d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x407a25a8" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404260d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x407a2240" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404260d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x407a2448" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x407b2808" loc="53:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40400120"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4079fa40" loc="52:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40400120"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4079f200" loc="52:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4079f6d8" loc="52:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4079f8d8" loc="52:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4079e850" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40400120"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4079e010" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4079e4e8" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4079e6e8" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x407a32e8" loc="68:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407a4e78" loc="61:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x407a4a68" loc="54:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x407a4500" loc="53:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x408209d0" loc="58:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403d3d70"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403d1010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x4080a410" loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c4168"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403c4390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4080a2b8" loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c4168"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403c4390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4080aef0" loc="54:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403cc850"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403cca78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x4080ed18" loc="45:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c0040"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403c0268"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40820518" loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403cc850"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403cca78"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x408203c0" loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403cc850"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403cca78"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4081f010" loc="59:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403d3d70"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403d1010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40820e88" loc="59:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403d3d70"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403d1010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x4080b770" loc="47:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ca7b0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403ca9d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x4080b2a0" loc="46:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c4168"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403c4390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x4080bdb8" loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c0040"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403c0268"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4080bc60" loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c0040"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403c0268"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x4080aa30" loc="51:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ca7b0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403ca9d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4080a8d8" loc="51:/opt/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ca7b0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403ca9d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x4081e180" loc="40:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4081e180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x4081bc48" loc="88:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x4081baf0" loc="88:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4081b260" loc="76:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4081e678" loc="47:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4081e180"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x4081d1e0" loc="60:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4081e180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4081d088" loc="60:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4081e180"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4081d620" loc="64:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4081b6c0" loc="82:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4081ebf0" loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4081e180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4081ea98" loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4081e180"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4081da28" loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4081de20" loc="70:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x408f77c8" loc="54:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x409121a8" loc="66:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x408f7d30" loc="61:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x408f7bd8" loc="61:/opt/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x408f72c0" loc="53:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4091b608" loc="56:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4091a550" loc="75:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4091b210" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x4091a088" loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x4091bf10" loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4091ede0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4091ba58" loc="63:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x409263d8" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x4095e580" loc="24:/opt/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x4095ea70" loc="31:/opt/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x4095d010" loc="39:/opt/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x40987370" loc="62:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40987010" loc="62:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40987210" loc="62:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40985ae0" loc="91:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40985580" loc="91:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40985780" loc="91:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40985978" loc="91:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40986d20" loc="82:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40400120"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409869c0" loc="82:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40986bc0" loc="82:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x409896a0" loc="51:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40400120"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40989340" loc="51:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40989540" loc="51:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40986178" loc="71:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40987bb8" loc="71:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40987db8" loc="71:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40986010" loc="71:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40992888" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40992318" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40992530" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40992720" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40990ee8" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40990768" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40990980" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40990b70" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40990d78" loc="83:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x409934e0" loc="45:/opt/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40993388" loc="45:/opt/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x409ddaa8" loc="62:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409dd950" loc="62:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x409da6e8" loc="74:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409da590" loc="74:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x409da010" loc="68:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x409dad30" loc="81:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409dabd8" loc="81:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x409ee548" loc="86:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x409e8c38" loc="126:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x409ebdd8" loc="117:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40a07288" loc="128:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40a07130" loc="128:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x409ee0f8" loc="83:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x409ead48" loc="122:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x409eabf0" loc="122:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x409eb010" loc="113:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x409ece48" loc="113:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x409eedd8" loc="97:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40a05318" loc="141:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a051c0" loc="141:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x409eb468" loc="114:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40a07c10" loc="131:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40a07ab8" loc="131:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a064b0" loc="136:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x409e87f0" loc="125:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x409e8698" loc="125:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40a06d78" loc="140:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x409ea380" loc="119:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x409ea228" loc="119:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x409ec390" loc="103:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409ec238" loc="103:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x409eb9b8" loc="116:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x409eb860" loc="116:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x409e8210" loc="123:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40a076b0" loc="129:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40a06038" loc="132:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a06908" loc="138:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x409ea7b8" loc="120:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x409ee970" loc="89:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x409ec958" loc="109:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409ec800" loc="109:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40a01070" loc="90:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40a01570" loc="98:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40a328f0" loc="95:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a32dd8" loc="105:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40a67010" loc="53:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40a675e8" loc="61:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40a652a0" loc="65:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40a69dd0" loc="59:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40a5fca8" loc="79:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a66578"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a5fb50" loc="79:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a66578"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40a628b0" loc="53:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40a5f010" loc="62:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a66578"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a62e18" loc="62:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a66578"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40a5f5c0" loc="70:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40a66578"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x40b04648" loc="43:/opt/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40b21840" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40b212c0" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40b216e0" loc="63:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40b25e08" loc="55:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40b25988" loc="49:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40b25830" loc="49:/opt/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40b2ea70" loc="58:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b2e918" loc="58:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40b2e168" loc="50:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b2e010" loc="50:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40b2dc58" loc="72:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b2db00" loc="72:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b2d370" loc="65:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b2d218" loc="65:/opt/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40c4f5b8" loc="53:/opt/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40c4f5b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40c4fc08" loc="64:/opt/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40c4f5b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40c4fab0" loc="64:/opt/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40c4f5b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40d4e570" loc="44:/opt/tinyos/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40d4e570"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40d4eb30" loc="51:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40d4e570"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40d4e9d8" loc="51:/opt/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40d4e570"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40d4a5b8" loc="65:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40d4a168" loc="59:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40d4e570"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40d4a010" loc="59:/opt/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40d4e570"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40d531f0" loc="49:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40d535a8" loc="51:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40d57ce8" loc="48:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40d53940" loc="52:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x40e53198" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e569b0" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40e56e38" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40e53030" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x40f1ce90" loc="51:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f1cd38" loc="51:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40f18060" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f19cf0" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40f19ee0" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40f1c750" loc="48:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f1c3d0" loc="48:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40f1c5f0" loc="48:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40f19758" loc="56:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f19600" loc="56:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40f1dde8" loc="47:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f1da68" loc="47:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40f1dc88" loc="47:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x40f19010" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f1ac08" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40f1ae10" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40f1a650" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40426330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f1a4f8" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x40f1d4b0" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f1d130" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40f1d350" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x406c4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x410431c8" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41044e10" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x41043068" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x41047f00" loc="15:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x41044800" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41044488" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40432640"/>
                <typename><typedef-ref name="message_t" ref="0x404303e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x410446a0" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x41033158" loc="54:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x41039d10" loc="49:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x4103e7e0" loc="56:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x41038460" loc="72:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x41036588" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41036430" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x41038988" loc="79:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x4103ef10" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4103edb8" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x41036a90" loc="100:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x41038ee8" loc="85:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x4103d858" loc="71:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x4103de20" loc="81:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x4103d248" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x4103d0f0" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x4103c628" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4103c4d0" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x4103f7a0" loc="62:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x4103a010" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4103fe30" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x4103a6a8" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4103a550" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x410eeae8" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x410ee798" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x410ee988" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x410ebe88" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x410ebd30" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x410e86a8" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x410e8358" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x410e8548" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x410eb2f0" loc="65:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x410e7560" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x410e7010" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x410e7200" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x410e73f8" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x410eb878" loc="72:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x410ea968" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x410ea418" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x410ea608" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x410ea800" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x411138a8" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x41113750" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x41110170" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x41113dd8" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x41110010" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x41104850" loc="44:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x41104010" loc="42:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x41103e38" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41103ce0" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x41103538" loc="47:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x41107718" loc="40:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x41107b58" loc="41:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x41104450" loc="43:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x41104c50" loc="45:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x41103188" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41103030" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x41103908" loc="48:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x41216410" loc="90:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x41216010" loc="85:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x41217aa0" loc="80:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x412171a8" loc="68:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x41217698" loc="74:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x4121bbf8" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x4121ba80" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x4121a7d0" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4121a270" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x4121a460" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039708"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x4121a668" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x41218010" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x4121b2b0" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x4121abf8" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x4121b678" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x412a6ed0" loc="45:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x412a2428" loc="69:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a22d0" loc="69:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x412a29e8" loc="75:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a2890" loc="75:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x412a38a0" loc="57:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a3748" loc="57:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x412a01c8" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a2e50" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x412a0068" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x412a32f0" loc="50:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x412a3e50" loc="63:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a3cf8" loc="63:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x412a0648" loc="88:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40039d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
